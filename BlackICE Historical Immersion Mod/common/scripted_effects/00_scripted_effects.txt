#	Example:
# 
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = fascism
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

#####################################
### emergency_factory_conversion ####
#####################################
#This is going to give misleading and ugly tooltips. Making it nice will take effort. TODO_WTT_CD make nice or ignore and remove comment. Easiest solution is just making a custom tooltip that says "5 civilian factories will be converted to military factories" and ignore telling the player the states where it will happen.

######################################################
#   SCRIPTED EFFECTS
######################################################

replace_civ_with_arms_factories = {	

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
	
	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
}

#Country scope
ROOT_inherit_current_scope_wars_effect = {
	custom_effect_tooltip = ROOT_inherit_current_scope_wars_effect
	hidden_effect = {	
		every_country = {
			limit = {
				has_defensive_war_with = PREV
			}
			ROOT = { declare_war_on = { target = PREV type = annex_everything } }
		}
		every_country = {
			limit = {
				has_offensive_war_with = PREV
			}
			declare_war_on = { target = ROOT type = annex_everything }
		}
	}
}

get_best_alliance_match_democratic_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				democratic_govt = yes
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

get_best_alliance_match_fascism_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = fascism
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

get_best_alliance_match_communism_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = communism
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

remove_naval_treaty_effect = {
	if = {
		limit = {
			has_idea = MTG_naval_treaty_adherent
		}
		remove_ideas = MTG_naval_treaty_adherent
	}
	else_if = {
		limit = {
			has_idea = MTG_naval_treaty_cheating
		}
		remove_ideas = MTG_naval_treaty_cheating
	}
	else_if = {
		limit = {
			has_idea = MTG_naval_treaty_adherent_reduced
		}
		remove_ideas = MTG_naval_treaty_adherent_reduced
	}
	else_if = {
		limit = {
			has_idea = MTG_naval_treaty_cheating_reduced
		}
		remove_ideas = MTG_naval_treaty_cheating_reduced
	}
	set_country_flag = MTG_naval_treaty_abandoned
}

move_capital = {
	if = {
		limit = {
			original_tag = SOV 
		}
		if = {
			limit = {
				217 = { 
					is_fully_controlled_by = ROOT
					safe_state = yes
				}
			}
			set_capital = 217 
		}
		else_if = {
			limit = {
				195 = { 
					is_fully_controlled_by = ROOT
					safe_state = yes
				}
			}
			set_capital = 195 
		}	
		else_if = {
			limit = {
				572 = { 
					is_fully_controlled_by = ROOT
					safe_state = yes
				}
			}
			set_capital = 572 
		}
		else_if = {
			limit = {
				408 = { 
					is_fully_controlled_by = ROOT
					safe_state = yes
				}
			}
			set_capital = 408 
		}
			
	}
}
add_unity_idea = {
	set_temp_variable = { temp = 0 }
	add_to_temp_variable = { temp = has_stability }
	multiply_temp_variable = { temp = 3 }
	add_to_temp_variable = { temp = has_war_support }
		
	multiply_temp_variable = { temp = 25 }
	#divide_temp_variable = { temp = 2 }
	
	if = {
		limit = {
			check_variable = { var = temp value = 25 compare = less_than_or_equals }
		}
		add_ideas = unity_civil_war
	}
	else_if = {
		limit = {
			check_variable = { var = temp value = 50 compare = less_than_or_equals }
		}
		add_ideas = unity_broken_nation
	}
	else_if = {
		limit = {
			check_variable = { var = temp value = 75 compare = less_than_or_equals }
		}
		add_ideas = unity_divided_nation
	}
	else_if = {
		limit = {
			check_variable = { var = temp value = 100 compare = less_than_or_equals }
		}
		add_ideas = unity_united_nation
	}
}

allied_anger_effect = {
	if = {
		limit = {
			check_variable = { allied_anger > 15 }
		}
		set_variable = { allied_anger = 15 }
	}
	every_country = {
		limit = {
			NOT = { has_global_flag = allied_anger_end }
			is_in_faction_with = ENG
		}
		add_ai_strategy = {
			type = contain
			id = GER
			value = 200
		}
		add_ai_strategy = {
			type = antagonize
			id = GER
			value = 200
		}
		add_ai_strategy = {
			type = befriend
			id = GER
			value = -200
		}
		add_ai_strategy = {
			type = alliance
			id = GER
			value = -200
		}
		#add_ai_strategy = {
		#	type = conquer
		#	id = GER
		#	value = 200
		#}
		custom_effect_tooltip = AA_TT
		hidden_effect = {
			remove_ideas_with_trait = allied_anger_trait
			if = {
				limit = {
					check_variable = { GER.allied_anger > 0.9 }
					check_variable = { GER.allied_anger < 2.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_1
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 1.9 }
					check_variable = { GER.allied_anger < 3.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_2
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 2.9 }
					check_variable = { GER.allied_anger < 4.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_3
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 3.9 }
					check_variable = { GER.allied_anger < 5.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_4
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 4.9 }
					check_variable = { GER.allied_anger < 6.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_5
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 5.9 }
					check_variable = { GER.allied_anger < 7.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_6
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 6.9 }
					check_variable = { GER.allied_anger < 8.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_7
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 7.9 }
					check_variable = { GER.allied_anger < 9.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_8
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 8.9 }
					check_variable = { GER.allied_anger < 10.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_9
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 9.9 }
					check_variable = { GER.allied_anger < 11.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_10
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 10.9 }
					check_variable = { GER.allied_anger < 12.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_11
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 11.9 }
					check_variable = { GER.allied_anger < 13.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_12
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 12.9 }
					check_variable = { GER.allied_anger < 14.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_13
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 13.9 }
					check_variable = { GER.allied_anger < 15.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_14
			}
			else_if = {
				limit = {
					check_variable = { GER.allied_anger > 14.9 }
					check_variable = { GER.allied_anger < 16.1 }
				}
				#remove_ideas_with_trait = allied_anger
				add_ideas = allied_anger_15
			}
		}
	}
}

recent_major_land_acquisition_effect = {
	if = {
		limit = {
			has_country_flag = recent_major_land_acquisition
		}
		custom_effect_tooltip = recent_major_land_acquisition_TT
	
		if = { 
			limit = {
				check_variable = { #< 50
					var = recent_major_land_acquisition 
					value = 50
					compare = less_than_or_equals
				}
			}
			add_to_variable = { allied_anger = 4 }
			custom_effect_tooltip = allied_anger_increase_TT
		}
		
		else_if = { 
			limit = {
				check_variable = { #< 100
					var = recent_major_land_acquisition 
					value = 100
					compare = less_than_or_equals
				}
				check_variable = { #> 50
					var = recent_major_land_acquisition 
					value = 50
					compare = greater_than_or_equals
				}
			}
			add_to_variable = { allied_anger = 3 }
			custom_effect_tooltip = allied_anger_increase_TT
		}
		
		else_if = { 
			limit = {
				check_variable = { #< 150
					var = recent_major_land_acquisition 
					value = 150
					compare = less_than_or_equals
				}
				check_variable = { #> 100
					var = recent_major_land_acquisition 
					value = 100
					compare = greater_than_or_equals
				}
			}
			add_to_variable = { allied_anger = 2 }
			custom_effect_tooltip = allied_anger_increase_TT
		}
		
		else_if = { 
			limit = {
				check_variable = { #> 150
					var = recent_major_land_acquisition 
					value = 150
					compare = greater_than_or_equals
				}
			}
			add_to_variable = { allied_anger = 1 }
			custom_effect_tooltip = allied_anger_increase_TT
		}
	}
}

license_templates = {
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_i_equipment
				}
				has_equipment = { panzer_i_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_i }
		}
		division_template = {
			name = "Panzer I"			
			
			regiments = {
				panzer_i = { x = 0 y = 0 }
				panzer_i = { x = 0 y = 1 }
				panzer_i = { x = 0 y = 2 }
				panzer_i = { x = 0 y = 3 }
				panzer_i = { x = 0 y = 4 }
				
				panzer_i = { x = 1 y = 0 }
				panzer_i = { x = 1 y = 1 }
				panzer_i = { x = 1 y = 2 }
				panzer_i = { x = 1 y = 3 }
				panzer_i = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_ii_equipment
				}
				has_equipment = { panzer_ii_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_ii }
		}
		division_template = {
			name = "Panzer II"			
			
			regiments = {
				panzer_ii = { x = 0 y = 0 }
				panzer_ii = { x = 0 y = 1 }
				panzer_ii = { x = 0 y = 2 }
				panzer_ii = { x = 0 y = 3 }
				panzer_ii = { x = 0 y = 4 }
				
				panzer_ii = { x = 1 y = 0 }
				panzer_ii = { x = 1 y = 1 }
				panzer_ii = { x = 1 y = 2 }
				panzer_ii = { x = 1 y = 3 }
				panzer_ii = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_iii_equipment
				}
				has_equipment = { panzer_iii_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_iii }
		}
		division_template = {
			name = "Panzer III"			
			
			regiments = {
				panzer_iii = { x = 0 y = 0 }
				panzer_iii = { x = 0 y = 1 }
				panzer_iii = { x = 0 y = 2 }
				panzer_iii = { x = 0 y = 3 }
				panzer_iii = { x = 0 y = 4 }
				
				panzer_iii = { x = 1 y = 0 }
				panzer_iii = { x = 1 y = 1 }
				panzer_iii = { x = 1 y = 2 }
				panzer_iii = { x = 1 y = 3 }
				panzer_iii = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_iv_equipment
				}
				has_equipment = { panzer_iv_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_iv }
		}
		division_template = {
			name = "Panzer IV"			
			
			regiments = {
				panzer_iv = { x = 0 y = 0 }
				panzer_iv = { x = 0 y = 1 }
				panzer_iv = { x = 0 y = 2 }
				panzer_iv = { x = 0 y = 3 }
				panzer_iv = { x = 0 y = 4 }
				
				panzer_iv = { x = 1 y = 0 }
				panzer_iv = { x = 1 y = 1 }
				panzer_iv = { x = 1 y = 2 }
				panzer_iv = { x = 1 y = 3 }
				panzer_iv = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_v_equipment
				}
				has_equipment = { panzer_v_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_v }
		}
		division_template = {
			name = "Panzer V"			
			
			regiments = {
				panzer_v = { x = 0 y = 0 }
				panzer_v = { x = 0 y = 1 }
				panzer_v = { x = 0 y = 2 }
				panzer_v = { x = 0 y = 3 }
				panzer_v = { x = 0 y = 4 }
				
				panzer_v = { x = 1 y = 0 }
				panzer_v = { x = 1 y = 1 }
				panzer_v = { x = 1 y = 2 }
				panzer_v = { x = 1 y = 3 }
				panzer_v = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_vi_equipment
				}
				has_equipment = { tiger_panzer_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_vi }
		}
		division_template = {
			name = "Panzer VI"			
			
			regiments = {
				panzer_vi = { x = 0 y = 0 }
				panzer_vi = { x = 0 y = 1 }
				panzer_vi = { x = 0 y = 2 }
				panzer_vi = { x = 0 y = 3 }
				panzer_vi = { x = 0 y = 4 }
				
				panzer_vi = { x = 1 y = 0 }
				panzer_vi = { x = 1 y = 1 }
				panzer_vi = { x = 1 y = 2 }
				panzer_vi = { x = 1 y = 3 }
				panzer_vi = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_vii_equipment
				}
				has_equipment = { panzer_vii_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_vii }
		}
		division_template = {
			name = "Panzer VII"			
			
			regiments = {
				panzer_vii = { x = 0 y = 0 }
				panzer_vii = { x = 0 y = 1 }
				panzer_vii = { x = 0 y = 2 }
				panzer_vii = { x = 0 y = 3 }
				panzer_vii = { x = 0 y = 4 }
				
				panzer_vii = { x = 1 y = 0 }
				panzer_vii = { x = 1 y = 1 }
				panzer_vii = { x = 1 y = 2 }
				panzer_vii = { x = 1 y = 3 }
				panzer_vii = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_amph_equipment
				}
				has_equipment = { panzer_amph_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_amph }
		}
		division_template = {
			name = "Amphibious Panzer"			
			
			regiments = {
				panzer_amph = { x = 0 y = 0 }
				panzer_amph = { x = 0 y = 1 }
				panzer_amph = { x = 0 y = 2 }
				panzer_amph = { x = 0 y = 3 }
				panzer_amph = { x = 0 y = 4 }
				
				panzer_amph = { x = 1 y = 0 }
				panzer_amph = { x = 1 y = 1 }
				panzer_amph = { x = 1 y = 2 }
				panzer_amph = { x = 1 y = 3 }
				panzer_amph = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = flammpanzer_equipment
				}
				has_equipment = { flammpanzer_equipment > 49 }
			}
			NOT = { has_template_containing_unit = flammpanzer }
		}
		division_template = {
			name = "Flammen Panzer"			
			
			regiments = {
				flammpanzer = { x = 0 y = 0 }
				flammpanzer = { x = 0 y = 1 }
				flammpanzer = { x = 0 y = 2 }
				flammpanzer = { x = 0 y = 3 }
				flammpanzer = { x = 0 y = 4 }
				
				flammpanzer = { x = 1 y = 0 }
				flammpanzer = { x = 1 y = 1 }
				flammpanzer = { x = 1 y = 2 }
				flammpanzer = { x = 1 y = 3 }
				flammpanzer = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_spaa_equipment
				}
				has_equipment = { panzer_spaa_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_spaa }
		}
		division_template = {
			name = "Panzer SPAA"			
			
			regiments = {
				panzer_spaa = { x = 0 y = 0 }
				panzer_spaa = { x = 0 y = 1 }
				panzer_spaa = { x = 0 y = 2 }
				panzer_spaa = { x = 0 y = 3 }
				panzer_spaa = { x = 0 y = 4 }
				
				panzer_spaa = { x = 1 y = 0 }
				panzer_spaa = { x = 1 y = 1 }
				panzer_spaa = { x = 1 y = 2 }
				panzer_spaa = { x = 1 y = 3 }
				panzer_spaa = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = light_assault_panzer_equipment
				}
				has_equipment = { light_assault_panzer_equipment > 49 }
			}
			NOT = { has_template_containing_unit = light_assault_panzer }
		}
		division_template = {
			name = "Light Assault Panzer"			
			
			regiments = {
				light_assault_panzer = { x = 0 y = 0 }
				light_assault_panzer = { x = 0 y = 1 }
				light_assault_panzer = { x = 0 y = 2 }
				light_assault_panzer = { x = 0 y = 3 }
				light_assault_panzer = { x = 0 y = 4 }
				
				light_assault_panzer = { x = 1 y = 0 }
				light_assault_panzer = { x = 1 y = 1 }
				light_assault_panzer = { x = 1 y = 2 }
				light_assault_panzer = { x = 1 y = 3 }
				light_assault_panzer = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = light_panzer_td_equipment
				}
				has_equipment = { light_panzer_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = light_panzer_td }
		}
		division_template = {
			name = "Light Panzer TD"			
			
			regiments = {
				light_panzer_td = { x = 0 y = 0 }
				light_panzer_td = { x = 0 y = 1 }
				light_panzer_td = { x = 0 y = 2 }
				light_panzer_td = { x = 0 y = 3 }
				light_panzer_td = { x = 0 y = 4 }
				
				light_panzer_td = { x = 1 y = 0 }
				light_panzer_td = { x = 1 y = 1 }
				light_panzer_td = { x = 1 y = 2 }
				light_panzer_td = { x = 1 y = 3 }
				light_panzer_td = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_iii_td_equipment
				}
				has_equipment = { panzer_iii_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_iii_td }
		}
		division_template = {
			name = "Panzer III TD"			
			
			regiments = {
				panzer_iii_td = { x = 0 y = 0 }
				panzer_iii_td = { x = 0 y = 1 }
				panzer_iii_td = { x = 0 y = 2 }
				panzer_iii_td = { x = 0 y = 3 }
				panzer_iii_td = { x = 0 y = 4 }
				
				panzer_iii_td = { x = 1 y = 0 }
				panzer_iii_td = { x = 1 y = 1 }
				panzer_iii_td = { x = 1 y = 2 }
				panzer_iii_td = { x = 1 y = 3 }
				panzer_iii_td = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = medium_panzer_td_equipment
				}
				has_equipment = { medium_panzer_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = medium_panzer_td }
		}
		division_template = {
			name = "Medium Panzer TD"			
			
			regiments = {
				medium_panzer_td = { x = 0 y = 0 }
				medium_panzer_td = { x = 0 y = 1 }
				medium_panzer_td = { x = 0 y = 2 }
				medium_panzer_td = { x = 0 y = 3 }
				medium_panzer_td = { x = 0 y = 4 }
				
				medium_panzer_td = { x = 1 y = 0 }
				medium_panzer_td = { x = 1 y = 1 }
				medium_panzer_td = { x = 1 y = 2 }
				medium_panzer_td = { x = 1 y = 3 }
				medium_panzer_td = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = heavy_panzer_td_fast_equipment
				}
				has_equipment = { heavy_panzer_td_fast_equipment > 49 }
			}
			NOT = { has_template_containing_unit = heavy_panzer_td_fast }
		}
		division_template = {
			name = "Heavy Panzer TD Fast"			
			
			regiments = {
				heavy_panzer_td_fast = { x = 0 y = 0 }
				heavy_panzer_td_fast = { x = 0 y = 1 }
				heavy_panzer_td_fast = { x = 0 y = 2 }
				heavy_panzer_td_fast = { x = 0 y = 3 }
				heavy_panzer_td_fast = { x = 0 y = 4 }
				
				heavy_panzer_td_fast = { x = 1 y = 0 }
				heavy_panzer_td_fast = { x = 1 y = 1 }
				heavy_panzer_td_fast = { x = 1 y = 2 }
				heavy_panzer_td_fast = { x = 1 y = 3 }
				heavy_panzer_td_fast = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = heavy_panzer_td_slow_equipment
				}
				has_equipment = { heavy_panzer_td_slow_equipment > 49 }
			}
			NOT = { has_template_containing_unit = heavy_panzer_td_slow }
		}
		division_template = {
			name = "Heavy Panzer TD Slow"			
			
			regiments = {
				heavy_panzer_td_slow = { x = 0 y = 0 }
				heavy_panzer_td_slow = { x = 0 y = 1 }
				heavy_panzer_td_slow = { x = 0 y = 2 }
				heavy_panzer_td_slow = { x = 0 y = 3 }
				heavy_panzer_td_slow = { x = 0 y = 4 }
				
				heavy_panzer_td_slow = { x = 1 y = 0 }
				heavy_panzer_td_slow = { x = 1 y = 1 }
				heavy_panzer_td_slow = { x = 1 y = 2 }
				heavy_panzer_td_slow = { x = 1 y = 3 }
				heavy_panzer_td_slow = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = light_panzer_art_equipment
				}
				has_equipment = { light_panzer_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = light_panzer_art }
		}
		division_template = {
			name = "Light Panzer Art"			
			
			regiments = {
				light_panzer_art = { x = 0 y = 0 }
				light_panzer_art = { x = 0 y = 1 }
				light_panzer_art = { x = 0 y = 2 }
				light_panzer_art = { x = 0 y = 3 }
				light_panzer_art = { x = 0 y = 4 }
				
				light_panzer_art = { x = 1 y = 0 }
				light_panzer_art = { x = 1 y = 1 }
				light_panzer_art = { x = 1 y = 2 }
				light_panzer_art = { x = 1 y = 3 }
				light_panzer_art = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = heavy_panzer_art_equipment
				}
				has_equipment = { heavy_panzer_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = heavy_panzer_art }
		}
		division_template = {
			name = "Heavy Panzer Art"			
			
			regiments = {
				heavy_panzer_art = { x = 0 y = 0 }
				heavy_panzer_art = { x = 0 y = 1 }
				heavy_panzer_art = { x = 0 y = 2 }
				heavy_panzer_art = { x = 0 y = 3 }
				heavy_panzer_art = { x = 0 y = 4 }
				
				heavy_panzer_art = { x = 1 y = 0 }
				heavy_panzer_art = { x = 1 y = 1 }
				heavy_panzer_art = { x = 1 y = 2 }
				heavy_panzer_art = { x = 1 y = 3 }
				heavy_panzer_art = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = assault_panzer_equipment
				}
				has_equipment = { assault_panzer_equipment > 49 }
			}
			NOT = { has_template_containing_unit = assault_panzer }
		}
		division_template = {
			name = "Assault Panzer"			
			
			regiments = {
				assault_panzer = { x = 0 y = 0 }
				assault_panzer = { x = 0 y = 1 }
				assault_panzer = { x = 0 y = 2 }
				assault_panzer = { x = 0 y = 3 }
				assault_panzer = { x = 0 y = 4 }
				
				assault_panzer = { x = 1 y = 0 }
				assault_panzer = { x = 1 y = 1 }
				assault_panzer = { x = 1 y = 2 }
				assault_panzer = { x = 1 y = 3 }
				assault_panzer = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = panzer_v_spaa_equipment
				}
				has_equipment = { panzer_v_spaa_equipment > 49 }
			}
			NOT = { has_template_containing_unit = panzer_v_spaa }
		}
		division_template = {
			name = "Panzer V SPAA"			
			
			regiments = {
				panzer_v_spaa = { x = 0 y = 0 }
				panzer_v_spaa = { x = 0 y = 1 }
				panzer_v_spaa = { x = 0 y = 2 }
				panzer_v_spaa = { x = 0 y = 3 }
				panzer_v_spaa = { x = 0 y = 4 }
				
				panzer_v_spaa = { x = 1 y = 0 }
				panzer_v_spaa = { x = 1 y = 1 }
				panzer_v_spaa = { x = 1 y = 2 }
				panzer_v_spaa = { x = 1 y = 3 }
				panzer_v_spaa = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	if = {
		limit = {
			OR = {
				has_license = {
					from = GER
					archetype = Landkreuzer_equipment
				}
				has_equipment = { Landkreuzer_equipment > 49 }
			}
			NOT = { has_template_containing_unit = Landkreuzer }
		}
		division_template = {
			name = "Landkreuzer"			
			
			regiments = {
				Landkreuzer = { x = 0 y = 0 }
				Landkreuzer = { x = 0 y = 1 }
				Landkreuzer = { x = 0 y = 2 }
				Landkreuzer = { x = 0 y = 3 }
				Landkreuzer = { x = 0 y = 4 }
				
				Landkreuzer = { x = 1 y = 0 }
				Landkreuzer = { x = 1 y = 1 }
				Landkreuzer = { x = 1 y = 2 }
				Landkreuzer = { x = 1 y = 3 }
				Landkreuzer = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	#ENGLAND
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = cruiser_tank_equipment
				}
				has_equipment = { cruiser_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_cruiser_tank }
		}
		division_template = {
			name = "British Cruiser Tank"			
			
			regiments = {
				british_cruiser_tank = { x = 0 y = 0 }
				british_cruiser_tank = { x = 0 y = 1 }
				british_cruiser_tank = { x = 0 y = 2 }
				british_cruiser_tank = { x = 0 y = 3 }
				british_cruiser_tank = { x = 0 y = 4 }
				
				british_cruiser_tank = { x = 1 y = 0 }
				british_cruiser_tank = { x = 1 y = 1 }
				british_cruiser_tank = { x = 1 y = 2 }
				british_cruiser_tank = { x = 1 y = 3 }
				british_cruiser_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = churchill_tank_equipment
				}
				has_equipment = { churchill_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_heavy_infantry_tank }
		}
		division_template = {
			name = "British Heavy Infantry Tank"			
			
			regiments = {
				british_heavy_infantry_tank = { x = 0 y = 0 }
				british_heavy_infantry_tank = { x = 0 y = 1 }
				british_heavy_infantry_tank = { x = 0 y = 2 }
				british_heavy_infantry_tank = { x = 0 y = 3 }
				british_heavy_infantry_tank = { x = 0 y = 4 }
				
				british_heavy_infantry_tank = { x = 1 y = 0 }
				british_heavy_infantry_tank = { x = 1 y = 1 }
				british_heavy_infantry_tank = { x = 1 y = 2 }
				british_heavy_infantry_tank = { x = 1 y = 3 }
				british_heavy_infantry_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = british_infantry_tank_equipment
				}
				has_equipment = { british_infantry_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_infantry_tank }
		}
		division_template = {
			name = "British Infantry Tank"			
			
			regiments = {
				british_infantry_tank = { x = 0 y = 0 }
				british_infantry_tank = { x = 0 y = 1 }
				british_infantry_tank = { x = 0 y = 2 }
				british_infantry_tank = { x = 0 y = 3 }
				british_infantry_tank = { x = 0 y = 4 }
				
				british_infantry_tank = { x = 1 y = 0 }
				british_infantry_tank = { x = 1 y = 1 }
				british_infantry_tank = { x = 1 y = 2 }
				british_infantry_tank = { x = 1 y = 3 }
				british_infantry_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = british_light_tank_equipment
				}
				has_equipment = { british_light_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_light_tank }
		}
		division_template = {
			name = "British Light Tank"			
			
			regiments = {
				british_light_tank = { x = 0 y = 0 }
				british_light_tank = { x = 0 y = 1 }
				british_light_tank = { x = 0 y = 2 }
				british_light_tank = { x = 0 y = 3 }
				british_light_tank = { x = 0 y = 4 }
				
				british_light_tank = { x = 1 y = 0 }
				british_light_tank = { x = 1 y = 1 }
				british_light_tank = { x = 1 y = 2 }
				british_light_tank = { x = 1 y = 3 }
				british_light_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = british_mbt_equipment
				}
				has_equipment = { british_mbt_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_main_battle_tank }
		}
		division_template = {
			name = "British Main Battle Tank"			
			
			regiments = {
				british_main_battle_tank = { x = 0 y = 0 }
				british_main_battle_tank = { x = 0 y = 1 }
				british_main_battle_tank = { x = 0 y = 2 }
				british_main_battle_tank = { x = 0 y = 3 }
				british_main_battle_tank = { x = 0 y = 4 }
				
				british_main_battle_tank = { x = 1 y = 0 }
				british_main_battle_tank = { x = 1 y = 1 }
				british_main_battle_tank = { x = 1 y = 2 }
				british_main_battle_tank = { x = 1 y = 3 }
				british_main_battle_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = tortoise_equipment
				}
				has_equipment = { tortoise_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_super_heavy_tank }
		}
		division_template = {
			name = "British Super Heavy Tank"			
			
			regiments = {
				british_super_heavy_tank = { x = 0 y = 0 }
				british_super_heavy_tank = { x = 0 y = 1 }
				british_super_heavy_tank = { x = 0 y = 2 }
				british_super_heavy_tank = { x = 0 y = 3 }
				british_super_heavy_tank = { x = 0 y = 4 }
				
				british_super_heavy_tank = { x = 1 y = 0 }
				british_super_heavy_tank = { x = 1 y = 1 }
				british_super_heavy_tank = { x = 1 y = 2 }
				british_super_heavy_tank = { x = 1 y = 3 }
				british_super_heavy_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = cruiser_tank_art_equipment
				}
				has_equipment = { cruiser_tank_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_tank_artillery_brigade }
		}
		division_template = {
			name = "British Tank Artillery"			
			
			regiments = {
				british_tank_artillery_brigade = { x = 0 y = 0 }
				british_tank_artillery_brigade = { x = 0 y = 1 }
				british_tank_artillery_brigade = { x = 0 y = 2 }
				british_tank_artillery_brigade = { x = 0 y = 3 }
				british_tank_artillery_brigade = { x = 0 y = 4 }
				
				british_tank_artillery_brigade = { x = 1 y = 0 }
				british_tank_artillery_brigade = { x = 1 y = 1 }
				british_tank_artillery_brigade = { x = 1 y = 2 }
				british_tank_artillery_brigade = { x = 1 y = 3 }
				british_tank_artillery_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = infantry_tank_art_equipment
				}
				has_equipment = { infantry_tank_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_infantry_tank_artillery_brigade }
		}
		division_template = {
			name = "British Infantry Tank Artillery"			
			
			regiments = {
				british_infantry_tank_artillery_brigade = { x = 0 y = 0 }
				british_infantry_tank_artillery_brigade = { x = 0 y = 1 }
				british_infantry_tank_artillery_brigade = { x = 0 y = 2 }
				british_infantry_tank_artillery_brigade = { x = 0 y = 3 }
				british_infantry_tank_artillery_brigade = { x = 0 y = 4 }
				
				british_infantry_tank_artillery_brigade = { x = 1 y = 0 }
				british_infantry_tank_artillery_brigade = { x = 1 y = 1 }
				british_infantry_tank_artillery_brigade = { x = 1 y = 2 }
				british_infantry_tank_artillery_brigade = { x = 1 y = 3 }
				british_infantry_tank_artillery_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = churchill_tank_art_equipment
				}
				has_equipment = { churchill_tank_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_heavy_infantry_tank_artillery_brigade }
		}
		division_template = {
			name = "British Heavy Infantry Tank Artillery"			
			
			regiments = {
				british_heavy_infantry_tank_artillery_brigade = { x = 0 y = 0 }
				british_heavy_infantry_tank_artillery_brigade = { x = 0 y = 1 }
				british_heavy_infantry_tank_artillery_brigade = { x = 0 y = 2 }
				british_heavy_infantry_tank_artillery_brigade = { x = 0 y = 3 }
				british_heavy_infantry_tank_artillery_brigade = { x = 0 y = 4 }
				
				british_heavy_infantry_tank_artillery_brigade = { x = 1 y = 0 }
				british_heavy_infantry_tank_artillery_brigade = { x = 1 y = 1 }
				british_heavy_infantry_tank_artillery_brigade = { x = 1 y = 2 }
				british_heavy_infantry_tank_artillery_brigade = { x = 1 y = 3 }
				british_heavy_infantry_tank_artillery_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = cruiser_tank_td_equipment
				}
				has_equipment = { cruiser_tank_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_tank_destroyer_brigade }
		}
		division_template = {
			name = "British Tank Destroyer"			
			
			regiments = {
				british_tank_destroyer_brigade = { x = 0 y = 0 }
				british_tank_destroyer_brigade = { x = 0 y = 1 }
				british_tank_destroyer_brigade = { x = 0 y = 2 }
				british_tank_destroyer_brigade = { x = 0 y = 3 }
				british_tank_destroyer_brigade = { x = 0 y = 4 }
				
				british_tank_destroyer_brigade = { x = 1 y = 0 }
				british_tank_destroyer_brigade = { x = 1 y = 1 }
				british_tank_destroyer_brigade = { x = 1 y = 2 }
				british_tank_destroyer_brigade = { x = 1 y = 3 }
				british_tank_destroyer_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ENG
					archetype = infantry_tank_td_equipment
				}
				has_equipment = { infantry_tank_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = british_infantry_tank_destroyer_brigade }
		}
		division_template = {
			name = "British Infantry Tank Destroyer"			
			
			regiments = {
				british_infantry_tank_destroyer_brigade = { x = 0 y = 0 }
				british_infantry_tank_destroyer_brigade = { x = 0 y = 1 }
				british_infantry_tank_destroyer_brigade = { x = 0 y = 2 }
				british_infantry_tank_destroyer_brigade = { x = 0 y = 3 }
				british_infantry_tank_destroyer_brigade = { x = 0 y = 4 }
				
				british_infantry_tank_destroyer_brigade = { x = 1 y = 0 }
				british_infantry_tank_destroyer_brigade = { x = 1 y = 1 }
				british_infantry_tank_destroyer_brigade = { x = 1 y = 2 }
				british_infantry_tank_destroyer_brigade = { x = 1 y = 3 }
				british_infantry_tank_destroyer_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	#FRANCE
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_light_tank_equipment
				}
				has_equipment = { fra_light_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = fra_light_tank }
		}
		division_template = {
			name = "French Light Tank"			
			
			regiments = {
				fra_light_tank = { x = 0 y = 0 }
				fra_light_tank = { x = 0 y = 1 }
				fra_light_tank = { x = 0 y = 2 }
				fra_light_tank = { x = 0 y = 3 }
				fra_light_tank = { x = 0 y = 4 }
				
				fra_light_tank = { x = 1 y = 0 }
				fra_light_tank = { x = 1 y = 1 }
				fra_light_tank = { x = 1 y = 2 }
				fra_light_tank = { x = 1 y = 3 }
				fra_light_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_light_cavalry_tank_equipment
				}
				has_equipment = { fra_light_cavalry_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = french_light_cavalry_tank }
		}
		division_template = {
			name = "French Light Cavalry Tank"			
			
			regiments = {
				french_light_cavalry_tank = { x = 0 y = 0 }
				french_light_cavalry_tank = { x = 0 y = 1 }
				french_light_cavalry_tank = { x = 0 y = 2 }
				french_light_cavalry_tank = { x = 0 y = 3 }
				french_light_cavalry_tank = { x = 0 y = 4 }
				
				french_light_cavalry_tank = { x = 1 y = 0 }
				french_light_cavalry_tank = { x = 1 y = 1 }
				french_light_cavalry_tank = { x = 1 y = 2 }
				french_light_cavalry_tank = { x = 1 y = 3 }
				french_light_cavalry_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_infantry_tank_equipment
				}
				has_equipment = { fra_infantry_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = french_infantry_tank }
		}
		division_template = {
			name = "French Infantry Tank"			
			
			regiments = {
				french_infantry_tank = { x = 0 y = 0 }
				french_infantry_tank = { x = 0 y = 1 }
				french_infantry_tank = { x = 0 y = 2 }
				french_infantry_tank = { x = 0 y = 3 }
				french_infantry_tank = { x = 0 y = 4 }
				
				french_infantry_tank = { x = 1 y = 0 }
				french_infantry_tank = { x = 1 y = 1 }
				french_infantry_tank = { x = 1 y = 2 }
				french_infantry_tank = { x = 1 y = 3 }
				french_infantry_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_heavy_tank_equipment
				}
				has_equipment = { fra_heavy_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = french_heavy_tank }
		}
		division_template = {
			name = "French Heavy Tank"			
			
			regiments = {
				french_heavy_tank = { x = 0 y = 0 }
				french_heavy_tank = { x = 0 y = 1 }
				french_heavy_tank = { x = 0 y = 2 }
				french_heavy_tank = { x = 0 y = 3 }
				french_heavy_tank = { x = 0 y = 4 }
				
				french_heavy_tank = { x = 1 y = 0 }
				french_heavy_tank = { x = 1 y = 1 }
				french_heavy_tank = { x = 1 y = 2 }
				french_heavy_tank = { x = 1 y = 3 }
				french_heavy_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_cavalry_tank_equipment
				}
				has_equipment = { fra_cavalry_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = french_cavalry_tank }
		}
		division_template = {
			name = "French Cavalry Tank"			
			
			regiments = {
				french_cavalry_tank = { x = 0 y = 0 }
				french_cavalry_tank = { x = 0 y = 1 }
				french_cavalry_tank = { x = 0 y = 2 }
				french_cavalry_tank = { x = 0 y = 3 }
				french_cavalry_tank = { x = 0 y = 4 }
				
				french_cavalry_tank = { x = 1 y = 0 }
				french_cavalry_tank = { x = 1 y = 1 }
				french_cavalry_tank = { x = 1 y = 2 }
				french_cavalry_tank = { x = 1 y = 3 }
				french_cavalry_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_medium_tank_equipment
				}
				has_equipment = { fra_medium_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = french_medium_tank }
		}
		division_template = {
			name = "French Medium Tank"			
			
			regiments = {
				french_medium_tank = { x = 0 y = 0 }
				french_medium_tank = { x = 0 y = 1 }
				french_medium_tank = { x = 0 y = 2 }
				french_medium_tank = { x = 0 y = 3 }
				french_medium_tank = { x = 0 y = 4 }
				
				french_medium_tank = { x = 1 y = 0 }
				french_medium_tank = { x = 1 y = 1 }
				french_medium_tank = { x = 1 y = 2 }
				french_medium_tank = { x = 1 y = 3 }
				french_medium_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_light_main_tank_equipment
				}
				has_equipment = { fra_light_main_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = french_light_main_tank }
		}
		division_template = {
			name = "French Light Main Tank"			
			
			regiments = {
				french_light_main_tank = { x = 0 y = 0 }
				french_light_main_tank = { x = 0 y = 1 }
				french_light_main_tank = { x = 0 y = 2 }
				french_light_main_tank = { x = 0 y = 3 }
				french_light_main_tank = { x = 0 y = 4 }
				
				french_light_main_tank = { x = 1 y = 0 }
				french_light_main_tank = { x = 1 y = 1 }
				french_light_main_tank = { x = 1 y = 2 }
				french_light_main_tank = { x = 1 y = 3 }
				french_light_main_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_main_tank_equipment
				}
				has_equipment = { fra_main_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = french_main_tank }
		}
		division_template = {
			name = "French Main Tank"			
			
			regiments = {
				french_main_tank = { x = 0 y = 0 }
				french_main_tank = { x = 0 y = 1 }
				french_main_tank = { x = 0 y = 2 }
				french_main_tank = { x = 0 y = 3 }
				french_main_tank = { x = 0 y = 4 }
				
				french_main_tank = { x = 1 y = 0 }
				french_main_tank = { x = 1 y = 1 }
				french_main_tank = { x = 1 y = 2 }
				french_main_tank = { x = 1 y = 3 }
				french_main_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_superheavy_tank_equipment
				}
				has_equipment = { fra_superheavy_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = french_superheavy_tank }
		}
		division_template = {
			name = "French Superheavy Tank"			
			
			regiments = {
				french_superheavy_tank = { x = 0 y = 0 }
				french_superheavy_tank = { x = 0 y = 1 }
				french_superheavy_tank = { x = 0 y = 2 }
				french_superheavy_tank = { x = 0 y = 3 }
				french_superheavy_tank = { x = 0 y = 4 }
				
				french_superheavy_tank = { x = 1 y = 0 }
				french_superheavy_tank = { x = 1 y = 1 }
				french_superheavy_tank = { x = 1 y = 2 }
				french_superheavy_tank = { x = 1 y = 3 }
				french_superheavy_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_ag_equipment
				}
				has_equipment = { fra_ag_equipment > 49 }
			}
			NOT = { has_template_containing_unit = fra_ag }
		}
		division_template = {
			name = "French Assault Gun"			
			
			regiments = {
				fra_ag = { x = 0 y = 0 }
				fra_ag = { x = 0 y = 1 }
				fra_ag = { x = 0 y = 2 }
				fra_ag = { x = 0 y = 3 }
				fra_ag = { x = 0 y = 4 }
				
				fra_ag = { x = 1 y = 0 }
				fra_ag = { x = 1 y = 1 }
				fra_ag = { x = 1 y = 2 }
				fra_ag = { x = 1 y = 3 }
				fra_ag = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_spart_equipment
				}
				has_equipment = { fra_spart_equipment > 49 }
			}
			NOT = { has_template_containing_unit = fra_spart }
		}
		division_template = {
			name = "French SPART"			
			
			regiments = {
				fra_spart = { x = 0 y = 0 }
				fra_spart = { x = 0 y = 1 }
				fra_spart = { x = 0 y = 2 }
				fra_spart = { x = 0 y = 3 }
				fra_spart = { x = 0 y = 4 }
				
				fra_spart = { x = 1 y = 0 }
				fra_spart = { x = 1 y = 1 }
				fra_spart = { x = 1 y = 2 }
				fra_spart = { x = 1 y = 3 }
				fra_spart = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = FRA
					archetype = fra_tank_destroyer_equipment
				}
				has_equipment = { fra_tank_destroyer_equipment > 49 }
			}
			NOT = { has_template_containing_unit = fra_td }
		}
		division_template = {
			name = "French Tank Destroyer"			
			
			regiments = {
				fra_td = { x = 0 y = 0 }
				fra_td = { x = 0 y = 1 }
				fra_td = { x = 0 y = 2 }
				fra_td = { x = 0 y = 3 }
				fra_td = { x = 0 y = 4 }
				
				fra_td = { x = 1 y = 0 }
				fra_td = { x = 1 y = 1 }
				fra_td = { x = 1 y = 2 }
				fra_td = { x = 1 y = 3 }
				fra_td = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	#ITALIAN
	if = {
		limit = {
			OR = {
				has_license = {
					from = ITA
					archetype = ita_tankette_armor_equipment
				}
				has_equipment = { ita_tankette_armor_equipment > 49 }
			}
			NOT = { has_template_containing_unit = ita_tankette_armor }
		}
		division_template = {
			name = "Italian Tankettes"			
			
			regiments = {
				ita_tankette_armor = { x = 0 y = 0 }
				ita_tankette_armor = { x = 0 y = 1 }
				ita_tankette_armor = { x = 0 y = 2 }
				ita_tankette_armor = { x = 0 y = 3 }
				ita_tankette_armor = { x = 0 y = 4 }
				
				ita_tankette_armor = { x = 1 y = 0 }
				ita_tankette_armor = { x = 1 y = 1 }
				ita_tankette_armor = { x = 1 y = 2 }
				ita_tankette_armor = { x = 1 y = 3 }
				ita_tankette_armor = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ITA
					archetype = ita_light_armor_equipment
				}
				has_equipment = { ita_light_armor_equipment > 49 }
			}
			NOT = { has_template_containing_unit = ita_light_armor }
		}
		division_template = {
			name = "Italian Light Armor"			
			
			regiments = {
				ita_light_armor = { x = 0 y = 0 }
				ita_light_armor = { x = 0 y = 1 }
				ita_light_armor = { x = 0 y = 2 }
				ita_light_armor = { x = 0 y = 3 }
				ita_light_armor = { x = 0 y = 4 }
				
				ita_light_armor = { x = 1 y = 0 }
				ita_light_armor = { x = 1 y = 1 }
				ita_light_armor = { x = 1 y = 2 }
				ita_light_armor = { x = 1 y = 3 }
				ita_light_armor = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ITA
					archetype = ita_medium_armor_equipment
				}
				has_equipment = { ita_medium_armor_equipment > 49 }
			}
			NOT = { has_template_containing_unit = ita_medium_armor }
		}
		division_template = {
			name = "Italian Medium Armor"			
			
			regiments = {
				ita_medium_armor = { x = 0 y = 0 }
				ita_medium_armor = { x = 0 y = 1 }
				ita_medium_armor = { x = 0 y = 2 }
				ita_medium_armor = { x = 0 y = 3 }
				ita_medium_armor = { x = 0 y = 4 }
				
				ita_medium_armor = { x = 1 y = 0 }
				ita_medium_armor = { x = 1 y = 1 }
				ita_medium_armor = { x = 1 y = 2 }
				ita_medium_armor = { x = 1 y = 3 }
				ita_medium_armor = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ITA
					archetype = ita_med_art_equipment
				}
				has_equipment = { ita_med_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = ita_med_art_armor }
		}
		division_template = {
			name = "Italian Medium Artillery Armor"			
			
			regiments = {
				ita_med_art_armor = { x = 0 y = 0 }
				ita_med_art_armor = { x = 0 y = 1 }
				ita_med_art_armor = { x = 0 y = 2 }
				ita_med_art_armor = { x = 0 y = 3 }
				ita_med_art_armor = { x = 0 y = 4 }
				
				ita_med_art_armor = { x = 1 y = 0 }
				ita_med_art_armor = { x = 1 y = 1 }
				ita_med_art_armor = { x = 1 y = 2 }
				ita_med_art_armor = { x = 1 y = 3 }
				ita_med_art_armor = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ITA
					archetype = ita_heavy_art_equipment
				}
				has_equipment = { ita_heavy_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = ita_heavy_art_armor }
		}
		division_template = {
			name = "Italian Heavy Artillery Armor"			
			
			regiments = {
				ita_heavy_art_armor = { x = 0 y = 0 }
				ita_heavy_art_armor = { x = 0 y = 1 }
				ita_heavy_art_armor = { x = 0 y = 2 }
				ita_heavy_art_armor = { x = 0 y = 3 }
				ita_heavy_art_armor = { x = 0 y = 4 }
				
				ita_heavy_art_armor = { x = 1 y = 0 }
				ita_heavy_art_armor = { x = 1 y = 1 }
				ita_heavy_art_armor = { x = 1 y = 2 }
				ita_heavy_art_armor = { x = 1 y = 3 }
				ita_heavy_art_armor = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ITA
					archetype = ita_light_td_equipment
				}
				has_equipment = { ita_light_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = ita_light_td_armor }
		}
		division_template = {
			name = "Italian Light Tank Destroyer"			
			
			regiments = {
				ita_light_td_armor = { x = 0 y = 0 }
				ita_light_td_armor = { x = 0 y = 1 }
				ita_light_td_armor = { x = 0 y = 2 }
				ita_light_td_armor = { x = 0 y = 3 }
				ita_light_td_armor = { x = 0 y = 4 }
				
				ita_light_td_armor = { x = 1 y = 0 }
				ita_light_td_armor = { x = 1 y = 1 }
				ita_light_td_armor = { x = 1 y = 2 }
				ita_light_td_armor = { x = 1 y = 3 }
				ita_light_td_armor = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = ITA
					archetype = ita_med_td_equipment
				}
				has_equipment = { ita_med_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = ita_med_td_armor }
		}
		division_template = {
			name = "Italian Medium Tank Destroyer"			
			
			regiments = {
				ita_med_td_armor = { x = 0 y = 0 }
				ita_med_td_armor = { x = 0 y = 1 }
				ita_med_td_armor = { x = 0 y = 2 }
				ita_med_td_armor = { x = 0 y = 3 }
				ita_med_td_armor = { x = 0 y = 4 }
				
				ita_med_td_armor = { x = 1 y = 0 }
				ita_med_td_armor = { x = 1 y = 1 }
				ita_med_td_armor = { x = 1 y = 2 }
				ita_med_td_armor = { x = 1 y = 3 }
				ita_med_td_armor = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	#JAPAN
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_heavy_tank_equipment
				}
				has_equipment = { japanese_heavy_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_heavy_tank }
		}
		division_template = {
			name = "Japanese Heavy Armor"			
			
			regiments = {
				japanese_heavy_tank = { x = 0 y = 0 }
				japanese_heavy_tank = { x = 0 y = 1 }
				japanese_heavy_tank = { x = 0 y = 2 }
				japanese_heavy_tank = { x = 0 y = 3 }
				japanese_heavy_tank = { x = 0 y = 4 }
				
				japanese_heavy_tank = { x = 1 y = 0 }
				japanese_heavy_tank = { x = 1 y = 1 }
				japanese_heavy_tank = { x = 1 y = 2 }
				japanese_heavy_tank = { x = 1 y = 3 }
				japanese_heavy_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_light_tank_equipment
				}
				has_equipment = { japanese_light_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_light_tank }
		}
		division_template = {
			name = "Japanese Light Armor"			
			
			regiments = {
				japanese_light_tank = { x = 0 y = 0 }
				japanese_light_tank = { x = 0 y = 1 }
				japanese_light_tank = { x = 0 y = 2 }
				japanese_light_tank = { x = 0 y = 3 }
				japanese_light_tank = { x = 0 y = 4 }
				
				japanese_light_tank = { x = 1 y = 0 }
				japanese_light_tank = { x = 1 y = 1 }
				japanese_light_tank = { x = 1 y = 2 }
				japanese_light_tank = { x = 1 y = 3 }
				japanese_light_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_medium_tank_equipment
				}
				has_equipment = { japanese_medium_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_medium_tank }
		}
		division_template = {
			name = "Japanese Medium Armor"			
			
			regiments = {
				japanese_medium_tank = { x = 0 y = 0 }
				japanese_medium_tank = { x = 0 y = 1 }
				japanese_medium_tank = { x = 0 y = 2 }
				japanese_medium_tank = { x = 0 y = 3 }
				japanese_medium_tank = { x = 0 y = 4 }
				
				japanese_medium_tank = { x = 1 y = 0 }
				japanese_medium_tank = { x = 1 y = 1 }
				japanese_medium_tank = { x = 1 y = 2 }
				japanese_medium_tank = { x = 1 y = 3 }
				japanese_medium_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_superheavy_tank_equipment
				}
				has_equipment = { japanese_superheavy_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_superheavy_tank }
		}
		division_template = {
			name = "Japanese Superheavy Armor"			
			
			regiments = {
				japanese_superheavy_tank = { x = 0 y = 0 }
				japanese_superheavy_tank = { x = 0 y = 1 }
				japanese_superheavy_tank = { x = 0 y = 2 }
				japanese_superheavy_tank = { x = 0 y = 3 }
				japanese_superheavy_tank = { x = 0 y = 4 }
				
				japanese_superheavy_tank = { x = 1 y = 0 }
				japanese_superheavy_tank = { x = 1 y = 1 }
				japanese_superheavy_tank = { x = 1 y = 2 }
				japanese_superheavy_tank = { x = 1 y = 3 }
				japanese_superheavy_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_amph_tank_equipment
				}
				has_equipment = { japanese_amph_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_amph_tank }
		}
		division_template = {
			name = "Japanese Amphibious Tanks"			
			
			regiments = {
				japanese_amph_tank = { x = 0 y = 0 }
				japanese_amph_tank = { x = 0 y = 1 }
				japanese_amph_tank = { x = 0 y = 2 }
				japanese_amph_tank = { x = 0 y = 3 }
				japanese_amph_tank = { x = 0 y = 4 }
				
				japanese_amph_tank = { x = 1 y = 0 }
				japanese_amph_tank = { x = 1 y = 1 }
				japanese_amph_tank = { x = 1 y = 2 }
				japanese_amph_tank = { x = 1 y = 3 }
				japanese_amph_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_light_tank_art_equipment
				}
				has_equipment = { japanese_light_tank_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_light_tank_art }
		}
		division_template = {
			name = "Japanese Light Tank Artillery"			
			
			regiments = {
				japanese_light_tank_art = { x = 0 y = 0 }
				japanese_light_tank_art = { x = 0 y = 1 }
				japanese_light_tank_art = { x = 0 y = 2 }
				japanese_light_tank_art = { x = 0 y = 3 }
				japanese_light_tank_art = { x = 0 y = 4 }
				
				japanese_light_tank_art = { x = 1 y = 0 }
				japanese_light_tank_art = { x = 1 y = 1 }
				japanese_light_tank_art = { x = 1 y = 2 }
				japanese_light_tank_art = { x = 1 y = 3 }
				japanese_light_tank_art = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_medium_tank_art_equipment
				}
				has_equipment = { japanese_medium_tank_art_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_medium_tank_art }
		}
		division_template = {
			name = "Japanese Medium Tank Artillery"			
			
			regiments = {
				japanese_medium_tank_art = { x = 0 y = 0 }
				japanese_medium_tank_art = { x = 0 y = 1 }
				japanese_medium_tank_art = { x = 0 y = 2 }
				japanese_medium_tank_art = { x = 0 y = 3 }
				japanese_medium_tank_art = { x = 0 y = 4 }
				
				japanese_medium_tank_art = { x = 1 y = 0 }
				japanese_medium_tank_art = { x = 1 y = 1 }
				japanese_medium_tank_art = { x = 1 y = 2 }
				japanese_medium_tank_art = { x = 1 y = 3 }
				japanese_medium_tank_art = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_light_tank_td_equipment
				}
				has_equipment = { japanese_light_tank_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_light_tank_td }
		}
		division_template = {
			name = "Japanese Light Tank Destroyer"			
			
			regiments = {
				japanese_light_tank_td = { x = 0 y = 0 }
				japanese_light_tank_td = { x = 0 y = 1 }
				japanese_light_tank_td = { x = 0 y = 2 }
				japanese_light_tank_td = { x = 0 y = 3 }
				japanese_light_tank_td = { x = 0 y = 4 }
				
				japanese_light_tank_td = { x = 1 y = 0 }
				japanese_light_tank_td = { x = 1 y = 1 }
				japanese_light_tank_td = { x = 1 y = 2 }
				japanese_light_tank_td = { x = 1 y = 3 }
				japanese_light_tank_td = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = JAP
					archetype = japanese_medium_tank_td_equipment
				}
				has_equipment = { japanese_medium_tank_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = japanese_medium_tank_td }
		}
		division_template = {
			name = "Japanese Medium Tank Destroyer"			
			
			regiments = {
				japanese_medium_tank_td = { x = 0 y = 0 }
				japanese_medium_tank_td = { x = 0 y = 1 }
				japanese_medium_tank_td = { x = 0 y = 2 }
				japanese_medium_tank_td = { x = 0 y = 3 }
				japanese_medium_tank_td = { x = 0 y = 4 }
				
				japanese_medium_tank_td = { x = 1 y = 0 }
				japanese_medium_tank_td = { x = 1 y = 1 }
				japanese_medium_tank_td = { x = 1 y = 2 }
				japanese_medium_tank_td = { x = 1 y = 3 }
				japanese_medium_tank_td = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	#SOVIET
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = heavy_soviet_infantry_tank_equipment
				}
				has_equipment = { heavy_soviet_infantry_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = sov_infantry_tank }
		}
		division_template = {
			name = "Soviet Heavy Infantry Tank"			
			
			regiments = {
				sov_infantry_tank = { x = 0 y = 0 }
				sov_infantry_tank = { x = 0 y = 1 }
				sov_infantry_tank = { x = 0 y = 2 }
				sov_infantry_tank = { x = 0 y = 3 }
				sov_infantry_tank = { x = 0 y = 4 }
				
				sov_infantry_tank = { x = 1 y = 0 }
				sov_infantry_tank = { x = 1 y = 1 }
				sov_infantry_tank = { x = 1 y = 2 }
				sov_infantry_tank = { x = 1 y = 3 }
				sov_infantry_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = heavy_soviet_tank_equipment
				}
				has_equipment = { heavy_soviet_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = sov_heavy_tank }
		}
		division_template = {
			name = "Soviet Heavy Tank"			
			
			regiments = {
				sov_heavy_tank = { x = 0 y = 0 }
				sov_heavy_tank = { x = 0 y = 1 }
				sov_heavy_tank = { x = 0 y = 2 }
				sov_heavy_tank = { x = 0 y = 3 }
				sov_heavy_tank = { x = 0 y = 4 }
				
				sov_heavy_tank = { x = 1 y = 0 }
				sov_heavy_tank = { x = 1 y = 1 }
				sov_heavy_tank = { x = 1 y = 2 }
				sov_heavy_tank = { x = 1 y = 3 }
				sov_heavy_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = light_soviet_tank_equipment
				}
				has_equipment = { light_soviet_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = sov_light_tank }
		}
		division_template = {
			name = "Soviet Light Tank"			
			
			regiments = {
				sov_light_tank = { x = 0 y = 0 }
				sov_light_tank = { x = 0 y = 1 }
				sov_light_tank = { x = 0 y = 2 }
				sov_light_tank = { x = 0 y = 3 }
				sov_light_tank = { x = 0 y = 4 }
				
				sov_light_tank = { x = 1 y = 0 }
				sov_light_tank = { x = 1 y = 1 }
				sov_light_tank = { x = 1 y = 2 }
				sov_light_tank = { x = 1 y = 3 }
				sov_light_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = medium_soviet_tank_equipment
				}
				has_equipment = { medium_soviet_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = sov_medium_tank }
		}
		division_template = {
			name = "Soviet Medium Tank"			
			
			regiments = {
				sov_medium_tank = { x = 0 y = 0 }
				sov_medium_tank = { x = 0 y = 1 }
				sov_medium_tank = { x = 0 y = 2 }
				sov_medium_tank = { x = 0 y = 3 }
				sov_medium_tank = { x = 0 y = 4 }
				
				sov_medium_tank = { x = 1 y = 0 }
				sov_medium_tank = { x = 1 y = 1 }
				sov_medium_tank = { x = 1 y = 2 }
				sov_medium_tank = { x = 1 y = 3 }
				sov_medium_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = amph_soviet_tank_equipment
				}
				has_equipment = { amph_soviet_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = sov_amph_tank }
		}
		division_template = {
			name = "Soviet Amphibious Tank"			
			
			regiments = {
				sov_amph_tank = { x = 0 y = 0 }
				sov_amph_tank = { x = 0 y = 1 }
				sov_amph_tank = { x = 0 y = 2 }
				sov_amph_tank = { x = 0 y = 3 }
				sov_amph_tank = { x = 0 y = 4 }
				
				sov_amph_tank = { x = 1 y = 0 }
				sov_amph_tank = { x = 1 y = 1 }
				sov_amph_tank = { x = 1 y = 2 }
				sov_amph_tank = { x = 1 y = 3 }
				sov_amph_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = light_soviet_tank_aa_equipment
				}
				has_equipment = { light_soviet_tank_aa_equipment > 49 }
			}
			NOT = { has_template_containing_unit = light_soviet_tank_aa }
		}
		division_template = {
			name = "Light Soviet Anti Air Tank"			
			
			regiments = {
				light_soviet_tank_aa = { x = 0 y = 0 }
				light_soviet_tank_aa = { x = 0 y = 1 }
				light_soviet_tank_aa = { x = 0 y = 2 }
				light_soviet_tank_aa = { x = 0 y = 3 }
				light_soviet_tank_aa = { x = 0 y = 4 }
				
				light_soviet_tank_aa = { x = 1 y = 0 }
				light_soviet_tank_aa = { x = 1 y = 1 }
				light_soviet_tank_aa = { x = 1 y = 2 }
				light_soviet_tank_aa = { x = 1 y = 3 }
				light_soviet_tank_aa = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = medium_soviet_ag_equipment
				}
				has_equipment = { medium_soviet_ag_equipment > 49 }
			}
			NOT = { has_template_containing_unit = medium_soviet_ag }
		}
		division_template = {
			name = "Medium Soviet Assault Gun"			
			
			regiments = {
				medium_soviet_ag = { x = 0 y = 0 }
				medium_soviet_ag = { x = 0 y = 1 }
				medium_soviet_ag = { x = 0 y = 2 }
				medium_soviet_ag = { x = 0 y = 3 }
				medium_soviet_ag = { x = 0 y = 4 }
				
				medium_soviet_ag = { x = 1 y = 0 }
				medium_soviet_ag = { x = 1 y = 1 }
				medium_soviet_ag = { x = 1 y = 2 }
				medium_soviet_ag = { x = 1 y = 3 }
				medium_soviet_ag = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = heavy_soviet_ag_equipment
				}
				has_equipment = { heavy_soviet_ag_equipment > 49 }
			}
			NOT = { has_template_containing_unit = heavy_soviet_ag }
		}
		division_template = {
			name = "Heavy Soviet Assault Gun"			
			
			regiments = {
				heavy_soviet_ag = { x = 0 y = 0 }
				heavy_soviet_ag = { x = 0 y = 1 }
				heavy_soviet_ag = { x = 0 y = 2 }
				heavy_soviet_ag = { x = 0 y = 3 }
				heavy_soviet_ag = { x = 0 y = 4 }
				
				heavy_soviet_ag = { x = 1 y = 0 }
				heavy_soviet_ag = { x = 1 y = 1 }
				heavy_soviet_ag = { x = 1 y = 2 }
				heavy_soviet_ag = { x = 1 y = 3 }
				heavy_soviet_ag = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = light_soviet_tank_td_equipment
				}
				has_equipment = { light_soviet_tank_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = light_soviet_tank_td }
		}
		division_template = {
			name = "Light Soviet Tank Destroyer"			
			
			regiments = {
				light_soviet_tank_td = { x = 0 y = 0 }
				light_soviet_tank_td = { x = 0 y = 1 }
				light_soviet_tank_td = { x = 0 y = 2 }
				light_soviet_tank_td = { x = 0 y = 3 }
				light_soviet_tank_td = { x = 0 y = 4 }
				
				light_soviet_tank_td = { x = 1 y = 0 }
				light_soviet_tank_td = { x = 1 y = 1 }
				light_soviet_tank_td = { x = 1 y = 2 }
				light_soviet_tank_td = { x = 1 y = 3 }
				light_soviet_tank_td = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = SOV
					archetype = t_34_td_equipment
				}
				has_equipment = { t_34_td_equipment > 49 }
			}
			NOT = { has_template_containing_unit = t_34_td }
		}
		division_template = {
			name = "Soviet T34 TD"			
			
			regiments = {
				t_34_td = { x = 0 y = 0 }
				t_34_td = { x = 0 y = 1 }
				t_34_td = { x = 0 y = 2 }
				t_34_td = { x = 0 y = 3 }
				t_34_td = { x = 0 y = 4 }
				
				t_34_td = { x = 1 y = 0 }
				t_34_td = { x = 1 y = 1 }
				t_34_td = { x = 1 y = 2 }
				t_34_td = { x = 1 y = 3 }
				t_34_td = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	
	#AMERICAN
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_heavy_tank_equipment
				}
				has_equipment = { american_heavy_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_heavy_tank }
		}
		division_template = {
			name = "American Heavy Tank"			
			
			regiments = {
				american_heavy_tank = { x = 0 y = 0 }
				american_heavy_tank = { x = 0 y = 1 }
				american_heavy_tank = { x = 0 y = 2 }
				american_heavy_tank = { x = 0 y = 3 }
				american_heavy_tank = { x = 0 y = 4 }
				
				american_heavy_tank = { x = 1 y = 0 }
				american_heavy_tank = { x = 1 y = 1 }
				american_heavy_tank = { x = 1 y = 2 }
				american_heavy_tank = { x = 1 y = 3 }
				american_heavy_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_light_tank_equipment
				}
				has_equipment = { american_light_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_light_tank }
		}
		division_template = {
			name = "American Light Tank"			
			
			regiments = {
				american_light_tank = { x = 0 y = 0 }
				american_light_tank = { x = 0 y = 1 }
				american_light_tank = { x = 0 y = 2 }
				american_light_tank = { x = 0 y = 3 }
				american_light_tank = { x = 0 y = 4 }
				
				american_light_tank = { x = 1 y = 0 }
				american_light_tank = { x = 1 y = 1 }
				american_light_tank = { x = 1 y = 2 }
				american_light_tank = { x = 1 y = 3 }
				american_light_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_mbt_equipment
				}
				has_equipment = { american_mbt_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_main_battle_tank }
		}
		division_template = {
			name = "American Main Battle Tank"			
			
			regiments = {
				american_main_battle_tank = { x = 0 y = 0 }
				american_main_battle_tank = { x = 0 y = 1 }
				american_main_battle_tank = { x = 0 y = 2 }
				american_main_battle_tank = { x = 0 y = 3 }
				american_main_battle_tank = { x = 0 y = 4 }
				
				american_main_battle_tank = { x = 1 y = 0 }
				american_main_battle_tank = { x = 1 y = 1 }
				american_main_battle_tank = { x = 1 y = 2 }
				american_main_battle_tank = { x = 1 y = 3 }
				american_main_battle_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_medium_tank_equipment
				}
				has_equipment = { american_medium_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_medium_tank }
		}
		division_template = {
			name = "American Medium Tank"			
			
			regiments = {
				american_medium_tank = { x = 0 y = 0 }
				american_medium_tank = { x = 0 y = 1 }
				american_medium_tank = { x = 0 y = 2 }
				american_medium_tank = { x = 0 y = 3 }
				american_medium_tank = { x = 0 y = 4 }
				
				american_medium_tank = { x = 1 y = 0 }
				american_medium_tank = { x = 1 y = 1 }
				american_medium_tank = { x = 1 y = 2 }
				american_medium_tank = { x = 1 y = 3 }
				american_medium_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = t28_equipment
				}
				has_equipment = { t28_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_super_heavy_tank }
		}
		division_template = {
			name = "American Super Heavy Tank"			
			
			regiments = {
				american_super_heavy_tank = { x = 0 y = 0 }
				american_super_heavy_tank = { x = 0 y = 1 }
				american_super_heavy_tank = { x = 0 y = 2 }
				american_super_heavy_tank = { x = 0 y = 3 }
				american_super_heavy_tank = { x = 0 y = 4 }
				
				american_super_heavy_tank = { x = 1 y = 0 }
				american_super_heavy_tank = { x = 1 y = 1 }
				american_super_heavy_tank = { x = 1 y = 2 }
				american_super_heavy_tank = { x = 1 y = 3 }
				american_super_heavy_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = amph_american_tank_equipment
				}
				has_equipment = { amph_american_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_amph_tank }
		}
		division_template = {
			name = "American Amphibious Tank"			
			
			regiments = {
				american_amph_tank = { x = 0 y = 0 }
				american_amph_tank = { x = 0 y = 1 }
				american_amph_tank = { x = 0 y = 2 }
				american_amph_tank = { x = 0 y = 3 }
				american_amph_tank = { x = 0 y = 4 }
				
				american_amph_tank = { x = 1 y = 0 }
				american_amph_tank = { x = 1 y = 1 }
				american_amph_tank = { x = 1 y = 2 }
				american_amph_tank = { x = 1 y = 3 }
				american_amph_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = amph_american_tank_equipment
				}
				has_equipment = { amph_american_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_amph_lv }
		}
		division_template = {
			name = "American Amphibious LV"			
			
			regiments = {
				american_amph_lv = { x = 0 y = 0 }
				american_amph_lv = { x = 0 y = 1 }
				american_amph_lv = { x = 0 y = 2 }
				american_amph_lv = { x = 0 y = 3 }
				american_amph_lv = { x = 0 y = 4 }
				
				american_amph_lv = { x = 1 y = 0 }
				american_amph_lv = { x = 1 y = 1 }
				american_amph_lv = { x = 1 y = 2 }
				american_amph_lv = { x = 1 y = 3 }
				american_amph_lv = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_medium_tank_flame_equipment
				}
				has_equipment = { american_medium_tank_flame_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_medium_tank_flame_brigade }
		}
		division_template = {
			name = "American Medium Flame Tank"			
			
			regiments = {
				american_medium_tank_flame_brigade = { x = 0 y = 0 }
				american_medium_tank_flame_brigade = { x = 0 y = 1 }
				american_medium_tank_flame_brigade = { x = 0 y = 2 }
				american_medium_tank_flame_brigade = { x = 0 y = 3 }
				american_medium_tank_flame_brigade = { x = 0 y = 4 }
				
				american_medium_tank_flame_brigade = { x = 1 y = 0 }
				american_medium_tank_flame_brigade = { x = 1 y = 1 }
				american_medium_tank_flame_brigade = { x = 1 y = 2 }
				american_medium_tank_flame_brigade = { x = 1 y = 3 }
				american_medium_tank_flame_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_para_tank_equipment
				}
				has_equipment = { american_para_tank_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_para_tank }
		}
		division_template = {
			name = "American Para Tank"			
			
			regiments = {
				american_para_tank = { x = 0 y = 0 }
				american_para_tank = { x = 0 y = 1 }
				american_para_tank = { x = 0 y = 2 }
				american_para_tank = { x = 0 y = 3 }
				american_para_tank = { x = 0 y = 4 }
				
				american_para_tank = { x = 1 y = 0 }
				american_para_tank = { x = 1 y = 1 }
				american_para_tank = { x = 1 y = 2 }
				american_para_tank = { x = 1 y = 3 }
				american_para_tank = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_light_tank_aa_equipment
				}
				has_equipment = { american_light_tank_aa_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_light_tank_anti_air_brigade }
		}
		division_template = {
			name = "American Light Anti Air Tank"			
			
			regiments = {
				american_light_tank_anti_air_brigade = { x = 0 y = 0 }
				american_light_tank_anti_air_brigade = { x = 0 y = 1 }
				american_light_tank_anti_air_brigade = { x = 0 y = 2 }
				american_light_tank_anti_air_brigade = { x = 0 y = 3 }
				american_light_tank_anti_air_brigade = { x = 0 y = 4 }
				
				american_light_tank_anti_air_brigade = { x = 1 y = 0 }
				american_light_tank_anti_air_brigade = { x = 1 y = 1 }
				american_light_tank_anti_air_brigade = { x = 1 y = 2 }
				american_light_tank_anti_air_brigade = { x = 1 y = 3 }
				american_light_tank_anti_air_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_light_tank_artillery_equipment
				}
				has_equipment = { american_light_tank_artillery_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_light_tank_artillery_brigade }
		}
		division_template = {
			name = "American Light Artillery Tank"			
			
			regiments = {
				american_light_tank_artillery_brigade = { x = 0 y = 0 }
				american_light_tank_artillery_brigade = { x = 0 y = 1 }
				american_light_tank_artillery_brigade = { x = 0 y = 2 }
				american_light_tank_artillery_brigade = { x = 0 y = 3 }
				american_light_tank_artillery_brigade = { x = 0 y = 4 }
				
				american_light_tank_artillery_brigade = { x = 1 y = 0 }
				american_light_tank_artillery_brigade = { x = 1 y = 1 }
				american_light_tank_artillery_brigade = { x = 1 y = 2 }
				american_light_tank_artillery_brigade = { x = 1 y = 3 }
				american_light_tank_artillery_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_medium_tank_artillery_equipment
				}
				has_equipment = { american_medium_tank_artillery_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_medium_tank_artillery_brigade }
		}
		division_template = {
			name = "American Medium Artillery Tank"			
			
			regiments = {
				american_medium_tank_artillery_brigade = { x = 0 y = 0 }
				american_medium_tank_artillery_brigade = { x = 0 y = 1 }
				american_medium_tank_artillery_brigade = { x = 0 y = 2 }
				american_medium_tank_artillery_brigade = { x = 0 y = 3 }
				american_medium_tank_artillery_brigade = { x = 0 y = 4 }
				
				american_medium_tank_artillery_brigade = { x = 1 y = 0 }
				american_medium_tank_artillery_brigade = { x = 1 y = 1 }
				american_medium_tank_artillery_brigade = { x = 1 y = 2 }
				american_medium_tank_artillery_brigade = { x = 1 y = 3 }
				american_medium_tank_artillery_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = hellcat_equipment
				}
				has_equipment = { hellcat_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_tank_destroyer_brigade }
		}
		division_template = {
			name = "American Tank Destroyer"			
			
			regiments = {
				american_tank_destroyer_brigade = { x = 0 y = 0 }
				american_tank_destroyer_brigade = { x = 0 y = 1 }
				american_tank_destroyer_brigade = { x = 0 y = 2 }
				american_tank_destroyer_brigade = { x = 0 y = 3 }
				american_tank_destroyer_brigade = { x = 0 y = 4 }
				
				american_tank_destroyer_brigade = { x = 1 y = 0 }
				american_tank_destroyer_brigade = { x = 1 y = 1 }
				american_tank_destroyer_brigade = { x = 1 y = 2 }
				american_tank_destroyer_brigade = { x = 1 y = 3 }
				american_tank_destroyer_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
	if = {
		limit = {
			OR = {
				has_license = {
					from = USA
					archetype = american_medium_tank_destroyer_equipment
				}
				has_equipment = { american_medium_tank_destroyer_equipment > 49 }
			}
			NOT = { has_template_containing_unit = american_medium_tank_destroyer_brigade }
		}
		division_template = {
			name = "American Medium Tank Destroyer"			
			
			regiments = {
				american_medium_tank_destroyer_brigade = { x = 0 y = 0 }
				american_medium_tank_destroyer_brigade = { x = 0 y = 1 }
				american_medium_tank_destroyer_brigade = { x = 0 y = 2 }
				american_medium_tank_destroyer_brigade = { x = 0 y = 3 }
				american_medium_tank_destroyer_brigade = { x = 0 y = 4 }
				
				american_medium_tank_destroyer_brigade = { x = 1 y = 0 }
				american_medium_tank_destroyer_brigade = { x = 1 y = 1 }
				american_medium_tank_destroyer_brigade = { x = 1 y = 2 }
				american_medium_tank_destroyer_brigade = { x = 1 y = 3 }
				american_medium_tank_destroyer_brigade = { x = 1 y = 4 }
			}
			
			priority = 2
		}
	}
}
unit_leader_level_down = {
	if = {
		limit = {
			has_event_target = Unit_leader
			NOT = { has_country_flag = no_loss_bravado }
		}
		event_target:Unit_leader = {
			if = {
				limit = {
					has_trait = Genius_General
				}
				remove_unit_leader_trait = Genius_General
				add_unit_leader_trait = Masterful_General 
			}
			else_if = {
				limit = {
					has_trait = Masterful_General
				}
				remove_unit_leader_trait = Masterful_General
				add_unit_leader_trait = Awesome_General 
			}
			else_if = {
				limit = {
					has_trait = Awesome_General
				}
				remove_unit_leader_trait = Awesome_General
				add_unit_leader_trait = Competent_General 
			}
			else_if = {
				limit = {
					has_trait = Competent_General
				}
				remove_unit_leader_trait = Competent_General
				add_unit_leader_trait = Decent_General 
			}
			else_if = {
				limit = {
					has_trait = Decent_General
				}
				remove_unit_leader_trait = Decent_General
				add_unit_leader_trait = Bad_General 
			}
			else_if = {
				limit = {
					has_trait = Bad_General
				}
				remove_unit_leader_trait = Bad_General
				add_unit_leader_trait = Terrible_General 
			}
			else_if = {
				limit = {
					has_trait = Terrible_General
				}
				remove_unit_leader_trait = Terrible_General
				add_unit_leader_trait = Incompetent_General 
			}
			else_if = {
				limit = {
					has_trait = Incompetent_General
				}
				remove_unit_leader_trait = Incompetent_General
				add_unit_leader_trait = Mindless_General 
			}
		}
	}
}
unit_leader_level_up = {
	if = {
		limit = {
			has_event_target = Unit_leader
		}
		event_target:Unit_leader = {
			if = {
				limit = {
					has_trait = Mindless_General
				}
				remove_unit_leader_trait = Mindless_General
				add_unit_leader_trait = Incompetent_General 
			}
			else_if = {
				limit = {
					has_trait = Incompetent_General
				}
				remove_unit_leader_trait = Incompetent_General
				add_unit_leader_trait = Terrible_General 
			}
			else_if = {
				limit = {
					has_trait = Terrible_General
				}
				remove_unit_leader_trait = Terrible_General
				add_unit_leader_trait = Bad_General 
			}
			else_if = {
				limit = {
					has_trait = Bad_General
				}
				remove_unit_leader_trait = Bad_General
				add_unit_leader_trait = Decent_General 
			}
			else_if = {
				limit = {
					has_trait = Decent_General
				}
				remove_unit_leader_trait = Decent_General
				add_unit_leader_trait = Competent_General 
			}
			else_if = {
				limit = {
					has_trait = Competent_General
				}
				remove_unit_leader_trait = Competent_General
				add_unit_leader_trait = Awesome_General 
			}
			else_if = {
				limit = {
					has_trait = Awesome_General
				}
				remove_unit_leader_trait = Awesome_General
				add_unit_leader_trait = Masterful_General 
			}
			else_if = {
				limit = {
					has_trait = Masterful_General
				}
				remove_unit_leader_trait = Masterful_General
				add_unit_leader_trait = Genius_General 
			}
		}
	}
}
random_stats_1 = {
	ROOT = {
		set_unit_leader_flag = {
			flag = defence_skill
			value = 1
			days = 14
		}
		set_unit_leader_flag = {
			flag = planning_skill
			value = 1
			days = 14
		}
		set_unit_leader_flag = {
			flag = supply_skill
			value = 1
			days = 14
		}
		
		add_defense = 1
		add_planning = 1
		add_logistics = 1
	}
}
random_stats_2 = {
	ROOT = {
		set_unit_leader_flag = {
			flag = attack_skill
			value = 1
			days = 14
		}
		set_unit_leader_flag = {
			flag = planning_skill
			value = 1
			days = 14
		}
		set_unit_leader_flag = {
			flag = supply_skill
			value = 1
			days = 14
		}
		
		add_attack = 1
		add_planning = 1
		add_logistics = 1
	}
}
random_stats_3 = {
	ROOT = {
		set_unit_leader_flag = {
			flag = attack_skill
			value = 1
			days = 14
		}
		set_unit_leader_flag = {
			flag = defence_skill
			value = 1
			days = 14
		}
		set_unit_leader_flag = {
			flag = supply_skill
			value = 1
			days = 14
		}
		
		add_defense = 1
		add_attack = 1
		add_logistics = 1
	}
}
random_stats_4 = {
	ROOT = {
		set_unit_leader_flag = {
			flag = attack_skill
			value = 1
			days = 14
		}
		set_unit_leader_flag = {
			flag = defence_skill
			value = 1
			days = 14
		}
		set_unit_leader_flag = {
			flag = planning_skill
			value = 1
			days = 14
		}
		
		add_defense = 1
		add_attack = 1
		add_planning = 1
	}
}
					
open_resource_storage_menu = {
	if ={
		limit={
			check_variable={ show_storage = 1}
		}
		set_variable = { show_storage = 0 }
	}
	else = {
		set_variable = { show_storage = 1 }
	}	
	
	if = {
		limit = {
			NOT = { has_country_flag = first_storage }
		}
		set_country_flag = first_storage
		set_variable = { rubber_storage_output = 6 }
		set_variable = { aluminium_storage_output = 6 }
		set_variable = { tungsten_storage_output = 6 }
		set_variable = { steel_storage_output = 6 }
		set_variable = { chromium_storage_output = 6 }
	}
}
close_resource_storage_menu = {
	clear_variable = show_storage 
	
}
save_cosmetic_tags = {
	if = {
		limit = {
			NOT = {
				has_country_flag = saved_cosmetic_tags
			}
		}
		set_country_flag = saved_cosmetic_tags
		if = {
			limit = {
				has_cosmetic_tag = MAL_UK
			}
			set_country_flag = MAL_UK
		}
		if = {
			limit = {
				has_cosmetic_tag = INS_HOL
			}
			set_country_flag = INS_HOL
		}
		if = {
			limit = {
				has_cosmetic_tag = HUN_EMPIRE
			}
			set_country_flag = HUN_EMPIRE
		}
		if = {
			limit = {
				has_cosmetic_tag = AUS_NOT_WHITE
			}
			set_country_flag = AUS_NOT_WHITE
		}
		if = {
			limit = {
				has_cosmetic_tag = ETH_IEA
			}
			set_country_flag = ETH_IEA
		}
		if = {
			limit = {
				has_cosmetic_tag = ETH_ITA
			}
			set_country_flag = ETH_ITA
		}
		if = {
			limit = {
				has_cosmetic_tag = ECU_SOA
			}
			set_country_flag = ECU_SOA
		}
		if = {
			limit = {
				has_cosmetic_tag = ITA_MONARCHY
			}
			set_country_flag = ITA_MONARCHY
		}
		if = {
			limit = {
				has_cosmetic_tag = ITA_REPUBLIC
			}
			set_country_flag = ITA_REPUBLIC
		}
		if = {
			limit = {
				has_cosmetic_tag = ROM_MONARCHY
			}
			set_country_flag = ROM_MONARCHY
		}
		if = {
			limit = {
				has_cosmetic_tag = ROM_REPUBLIC
			}
			set_country_flag = ROM_REPUBLIC
		}
		if = {
			limit = {
				has_cosmetic_tag = MAR_SPR
			}
			set_country_flag = MAR_SPR
		}
		if = {
			limit = {
				has_cosmetic_tag = MAR_FRA
			}
			set_country_flag = MAR_FRA
		}
		if = {
			limit = {
				has_cosmetic_tag = SPC
			}
			set_country_flag = SPC
		}
		if = {
			limit = {
				has_cosmetic_tag = SPRCIV
			}
			set_country_flag = SPRCIV
		}
		if = {
			limit = {
				has_cosmetic_tag = SPA
			}
			set_country_flag = SPA
		}
		if = {
			limit = {
				has_cosmetic_tag = SPA_MONARCHY
			}
			set_country_flag = SPA_MONARCHY
		}
		if = {
			limit = {
				has_cosmetic_tag = SPA_1945
			}
			set_country_flag = SPA_1945
		}
		if = {
			limit = {
				has_cosmetic_tag = CNT
			}
			set_country_flag = CNT
		}
		if = {
			limit = {
				has_cosmetic_tag = CAT_CNT
			}
			set_country_flag = CAT_CNT
		}
		if = {
			limit = {
				has_cosmetic_tag = MED
			}
			set_country_flag = MED
		}
		if = {
			limit = {
				has_cosmetic_tag = WGR_WESTBERLIN
			}
			set_country_flag = WGR_WESTBERLIN
		}
		if = {
			limit = {
				has_cosmetic_tag = DDR_EASTBERLIN
			}
			set_country_flag = DDR_EASTBERLIN
		}
		if = {
			limit = {
				has_cosmetic_tag = BEL2
			}
			set_country_flag = BEL2
		}
		if = {
			limit = {
				has_cosmetic_tag = BEL3
			}
			set_country_flag = BEL3
		}
		if = {
			limit = {
				has_cosmetic_tag = BEL4
			}
			set_country_flag = BEL4
		}
		if = {
			limit = {
				has_cosmetic_tag = BEL4_GER
			}
			set_country_flag = BEL4_GER
		}
		if = {
			limit = {
				has_cosmetic_tag = FRA_FREE
			}
			set_country_flag = FRA_FREE
		}
		if = {
			limit = {
				has_cosmetic_tag = ENG_FREE
			}
			set_country_flag = ENG_FREE
		}
		if = {
			limit = {
				has_cosmetic_tag = CAN_UK
			}
			set_country_flag = CAN_UK
		}
		if = {
			limit = {
				has_cosmetic_tag = CAN_ALY
			}
			set_country_flag = CAN_ALY
		}
		if = {
			limit = {
				has_cosmetic_tag = CAN_ENG
			}
			set_country_flag = CAN_ENG
		}
		if = {
			limit = {
				has_cosmetic_tag = CHI_JAP
			}
			set_country_flag = CHI_JAP
		}
		if = {
			limit = {
				has_cosmetic_tag = SAP_1920
			}
			set_country_flag = SAP_1920
		}
		if = {
			limit = {
				has_cosmetic_tag = BRA_TROTSKY
			}
			set_country_flag = BRA_TROTSKY
		}
		if = {
			limit = {
				has_cosmetic_tag = BMP_UK
			}
			set_country_flag = BMP_UK
		}
		if = {
			limit = {
				has_cosmetic_tag = BMP_ENG
			}
			set_country_flag = BMP_ENG
		}
		if = {
			limit = {
				has_cosmetic_tag = RUS_EMPIRE
			}
			set_country_flag = RUS_EMPIRE
		}
		if = {
			limit = {
				has_cosmetic_tag = CSA
			}
			set_country_flag = CSA
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_13
			}
			set_country_flag = USA_13
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_48
			}
			set_country_flag = USA_48
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_49
			}
			set_country_flag = USA_49
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_50
			}
			set_country_flag = USA_50
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_51
			}
			set_country_flag = USA_51
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_52
			}
			set_country_flag = USA_52
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_53
			}
			set_country_flag = USA_53
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_54
			}
			set_country_flag = USA_54
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_55
			}
			set_country_flag = USA_55
		}
		if = {
			limit = {
				has_cosmetic_tag = USA_56
			}
			set_country_flag = USA_56
		}
		if = {
			limit = {
				has_cosmetic_tag = PARTISANS
			}
			set_country_flag = PARTISANS
		}
	}
}
apply_cosmetic_tags = {
	clr_country_flag = saved_cosmetic_tags
	if = {
		limit = {
			has_country_flag = PARTISANS
		}
		set_cosmetic_tag = PARTISANS
		clr_country_flag = PARTISANS
	}
	if = {
		limit = {
			has_country_flag = USA_56
		}
		set_cosmetic_tag = USA_56
		clr_country_flag = USA_56
	}
	if = {
		limit = {
			has_country_flag = USA_55
		}
		set_cosmetic_tag = USA_55
		clr_country_flag = USA_55
	}
	if = {
		limit = {
			has_country_flag = USA_54
		}
		set_cosmetic_tag = USA_54
		clr_country_flag = USA_54
	}
	if = {
		limit = {
			has_country_flag = USA_53
		}
		set_cosmetic_tag = USA_53
		clr_country_flag = USA_53
	}
	if = {
		limit = {
			has_country_flag = USA_52
		}
		set_cosmetic_tag = USA_52
		clr_country_flag = USA_52
	}
	if = {
		limit = {
			has_country_flag = USA_51
		}
		set_cosmetic_tag = USA_51
		clr_country_flag = USA_51
	}
	if = {
		limit = {
			has_country_flag = USA_50
		}
		set_cosmetic_tag = USA_50
		clr_country_flag = USA_50
	}
	if = {
		limit = {
			has_country_flag = USA_49
		}
		set_cosmetic_tag = USA_49
		clr_country_flag = USA_49
	}
	if = {
		limit = {
			has_country_flag = USA_48
		}
		set_cosmetic_tag = USA_48
		clr_country_flag = USA_48
	}
	if = {
		limit = {
			has_country_flag = USA_13
		}
		set_cosmetic_tag = USA_13
		clr_country_flag = USA_13
	}
	if = {
		limit = {
			has_country_flag = CSA
		}
		set_cosmetic_tag = CSA
		clr_country_flag = CSA
	}
	if = {
		limit = {
			has_country_flag = RUS_EMPIRE
		}
		set_cosmetic_tag = RUS_EMPIRE
		clr_country_flag = RUS_EMPIRE
	}
	if = {
		limit = {
			has_country_flag = BMP_ENG
		}
		set_cosmetic_tag = BMP_ENG
		clr_country_flag = BMP_ENG
	}
	if = {
		limit = {
			has_country_flag = BMP_UK
		}
		set_cosmetic_tag = BMP_UK
		clr_country_flag = BMP_UK
	}
	if = {
		limit = {
			has_country_flag = VIN_TROTSKY
		}
		set_cosmetic_tag = VIN_TROTSKY
		clr_country_flag = VIN_TROTSKY
	}
	if = {
		limit = {
			has_country_flag = BRA_TROTSKY
		}
		set_cosmetic_tag = BRA_TROTSKY
		clr_country_flag = BRA_TROTSKY
	}
	if = {
		limit = {
			has_country_flag = SAP_1920
		}
		set_cosmetic_tag = SAP_1920
		clr_country_flag = SAP_1920
	}
	if = {
		limit = {
			has_country_flag = CHI_JAP
		}
		set_cosmetic_tag = CHI_JAP
		clr_country_flag = CHI_JAP
	}
	if = {
		limit = {
			has_country_flag = CAN_ENG
		}
		set_cosmetic_tag = CAN_ENG
		clr_country_flag = CAN_ENG
	}
	if = {
		limit = {
			has_country_flag = CAN_ALY
		}
		set_cosmetic_tag = CAN_ALY
		clr_country_flag = CAN_ALY
	}
	if = {
		limit = {
			has_country_flag = CAN_UK
		}
		set_cosmetic_tag = CAN_UK
		clr_country_flag = CAN_UK
	}
	if = {
		limit = {
			has_country_flag = ENG_FREE
		}
		set_cosmetic_tag = ENG_FREE
		clr_country_flag = ENG_FREE
	}
	if = {
		limit = {
			has_country_flag = FRA_FREE
		}
		set_cosmetic_tag = FRA_FREE
		clr_country_flag = FRA_FREE
	}
	if = {
		limit = {
			has_country_flag = BEL4_GER
		}
		set_cosmetic_tag = BEL4_GER
		clr_country_flag = BEL4_GER
	}
	if = {
		limit = {
			has_country_flag = BEL4
		}
		set_cosmetic_tag = BEL4
		clr_country_flag = BEL4
	}
	if = {
		limit = {
			has_country_flag = BEL3
		}
		set_cosmetic_tag = BEL3
		clr_country_flag = BEL3
	}
	if = {
		limit = {
			has_country_flag = BEL2
		}
		set_cosmetic_tag = BEL2
		clr_country_flag = BEL2
	}
	if = {
		limit = {
			has_country_flag = DDR_EASTBERLIN
		}
		set_cosmetic_tag = DDR_EASTBERLIN
		clr_country_flag = DDR_EASTBERLIN
	}
	if = {
		limit = {
			has_country_flag = WGR_WESTBERLIN
		}
		set_cosmetic_tag = WGR_WESTBERLIN
		clr_country_flag = WGR_WESTBERLIN
	}
	if = {
		limit = {
			has_country_flag = MED
		}
		set_cosmetic_tag = MED
		clr_country_flag = MED
	}
	if = {
		limit = {
			has_country_flag = CAT_CNT
		}
		set_cosmetic_tag = CAT_CNT
		clr_country_flag = CAT_CNT
	}
	if = {
		limit = {
			has_country_flag = CNT
		}
		set_cosmetic_tag = CNT
		clr_country_flag = CNT
	}
	if = {
		limit = {
			has_country_flag = SPA_1945
		}
		set_cosmetic_tag = SPA_1945
		clr_country_flag = SPA_1945
	}
	if = {
		limit = {
			has_country_flag = SPA_MONARCHY
		}
		set_cosmetic_tag = SPA_MONARCHY
		clr_country_flag = SPA_MONARCHY
	}
	if = {
		limit = {
			has_country_flag = SPA
		}
		set_cosmetic_tag = SPA
		clr_country_flag = SPA
	}
	if = {
		limit = {
			has_country_flag = SPRCIV
		}
		set_cosmetic_tag = SPRCIV
		clr_country_flag = SPRCIV
	}
	if = {
		limit = {
			has_country_flag = SPC
		}
		set_cosmetic_tag = SPC
		clr_country_flag = SPC
	}
	if = {
		limit = {
			has_country_flag = MAR_FRA
		}
		set_cosmetic_tag = MAR_FRA
		clr_country_flag = MAR_FRA
	}
	if = {
		limit = {
			has_country_flag = MAR_SPR
		}
		set_cosmetic_tag = MAR_SPR
		clr_country_flag = MAR_SPR
	}
	if = {
		limit = {
			has_country_flag = ROM_REPUBLIC
		}
		set_cosmetic_tag = ROM_REPUBLIC
		clr_country_flag = ROM_REPUBLIC
	}
	if = {
		limit = {
			has_country_flag = ROM_MONARCHY
		}
		set_cosmetic_tag = ROM_MONARCHY
		clr_country_flag = ROM_MONARCHY
	}
	if = {
		limit = {
			has_country_flag = ITA_REPUBLIC
		}
		set_cosmetic_tag = ITA_REPUBLIC
		clr_country_flag = ITA_REPUBLIC
	}
	if = {
		limit = {
			has_country_flag = ITA_MONARCHY
		}
		set_cosmetic_tag = ITA_MONARCHY
		clr_country_flag = ITA_MONARCHY
	}
	if = {
		limit = {
			has_country_flag = ECU_SOA
		}
		set_cosmetic_tag = ECU_SOA
		clr_country_flag = ECU_SOA
	}
	if = {
		limit = {
			has_country_flag = ETH_ITA
		}
		set_cosmetic_tag = ETH_ITA
		clr_country_flag = ETH_ITA
	}
	if = {
		limit = {
			has_country_flag = ETH_IEA
		}
		set_cosmetic_tag = ETH_IEA
		clr_country_flag = ETH_IEA
	}
	if = {
		limit = {
			has_country_flag = AUS_NOT_WHITE
		}
		set_cosmetic_tag = AUS_NOT_WHITE
		clr_country_flag = AUS_NOT_WHITE
	}
	if = {
		limit = {
			has_country_flag = HUN_EMPIRE
		}
		set_cosmetic_tag = HUN_EMPIRE
		clr_country_flag = HUN_EMPIRE
	}
	if = {
		limit = {
			has_country_flag = INS_HOL
		}
		set_cosmetic_tag = INS_HOL
		clr_country_flag = INS_HOL
	}
	if = {
		limit = {
			has_country_flag = MAL_UK
		}
		set_cosmetic_tag = MAL_UK
		clr_country_flag = MAL_UK
	}
}
apply_mapmode_colours = {
	if = {
		limit = {
			check_variable = { temp_var < 0.01 }
		}
		set_cosmetic_tag = LEVEL_0
	}
	if = {
		limit = {
			check_variable = { temp_var > 0 }
		}
		set_cosmetic_tag = LEVEL_1
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.1 }
		}
		set_cosmetic_tag = LEVEL_2
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.2 }
		}
		set_cosmetic_tag = LEVEL_3
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.3 }
		}
		set_cosmetic_tag = LEVEL_4
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.4 }
		}
		set_cosmetic_tag = LEVEL_5
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.5 }
		}
		set_cosmetic_tag = LEVEL_6
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.6 }
		}
		set_cosmetic_tag = LEVEL_7
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.7 }
		}
		set_cosmetic_tag = LEVEL_8
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.8 }
		}
		set_cosmetic_tag = LEVEL_9
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.9 }
		}
		set_cosmetic_tag = LEVEL_10
	}
}
apply_alternative_mapmode_colours = {
	if = {
		limit = {
			check_variable = { temp_var < 0.01 }
		}
		set_cosmetic_tag = LEVEL0
	}
	if = {
		limit = {
			check_variable = { temp_var > 0 }
		}
		set_cosmetic_tag = LEVEL1
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.1 }
		}
		set_cosmetic_tag = LEVEL2
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.2 }
		}
		set_cosmetic_tag = LEVEL3
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.3 }
		}
		set_cosmetic_tag = LEVEL4
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.4 }
		}
		set_cosmetic_tag = LEVEL5
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.5 }
		}
		set_cosmetic_tag = LEVEL6
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.6 }
		}
		set_cosmetic_tag = LEVEL7
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.7 }
		}
		set_cosmetic_tag = LEVEL8
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.8 }
		}
		set_cosmetic_tag = LEVEL9
	}
	if = {
		limit = {
			check_variable = { temp_var > 0.9 }
		}
		set_cosmetic_tag = LEVEL10
	}
}

random_research_centre = {
	random_list = {
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_1 } modify_timed_idea = { idea = recent_research_centre_capture_1 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_1 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_2 } modify_timed_idea = { idea = recent_research_centre_capture_2 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_2 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_3 } modify_timed_idea = { idea = recent_research_centre_capture_3 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_3 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_4 } modify_timed_idea = { idea = recent_research_centre_capture_4 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_4 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_5 } modify_timed_idea = { idea = recent_research_centre_capture_5 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_5 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_6 } modify_timed_idea = { idea = recent_research_centre_capture_6 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_6 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_7 } modify_timed_idea = { idea = recent_research_centre_capture_7 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_7 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_8 } modify_timed_idea = { idea = recent_research_centre_capture_8 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_8 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_9 } modify_timed_idea = { idea = recent_research_centre_capture_9 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_9 days = 60 } }
		}
	
		10 = { 
			if = { limit = { has_idea = recent_research_centre_capture_10 } modify_timed_idea = { idea = recent_research_centre_capture_10 days = 60 } }
			else = { add_timed_idea = { idea = recent_research_centre_capture_10 days = 60 } }
		}
	}
}

set_land_doctrine_laws = {
	if = { limit = { always = no }
		hidden_effect = {
			#add_ideas = land_level_0
		}
	}
}

improve_blitzkrieg_idea = {
	if = {
		limit = {
			NOT = { 
				OR = {
					has_idea = GER_blitzkrieg_1 
					has_idea = GER_blitzkrieg_2
					has_idea = GER_blitzkrieg_3 
					has_idea = GER_blitzkrieg_4 
					has_idea = GER_blitzkrieg_5 
				}
			}
		}
		add_ideas = GER_blitzkrieg_1
	}
	if = {
		limit = {
			has_idea = GER_blitzkrieg_1
		}
		set_country_flag = {
			flag = GER_blitzkrieg
			value = 1
			days = 90 
		}
		swap_ideas = {
			remove_idea = GER_blitzkrieg_1
			add_idea = GER_blitzkrieg_2
		}
	}
	if = {
		limit = {
			has_idea = GER_blitzkrieg_2
		}
		set_country_flag = {
			flag = GER_blitzkrieg
			value = 1
			days = 90 
		}
		swap_ideas = {
			remove_idea = GER_blitzkrieg_2
			add_idea = GER_blitzkrieg_3
		}
	}
	if = {
		limit = {
			has_idea = GER_blitzkrieg_3
		}
		set_country_flag = {
			flag = GER_blitzkrieg
			value = 1
			days = 90 
		}
		swap_ideas = {
			remove_idea = GER_blitzkrieg_3
			add_idea = GER_blitzkrieg_4
		}
	}
	if = {
		limit = {
			has_idea = GER_blitzkrieg_4
		}
		set_country_flag = {
			flag = GER_blitzkrieg
			value = 1
			days = 90 
		}
		swap_ideas = {
			remove_idea = GER_blitzkrieg_4
			add_idea = GER_blitzkrieg_5
		}
	}
}

recalculate_tag_change = { 

}

spawn_chinese_puppet_army = {
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
	create_unit = {
		division = "name = \"Infantry\" division_template = \"Infantry Division\" start_experience_factor = 0.5"
		OWNER = D02
	}
}

spawn_AI_garrison = {
	create_unit = {
		division = "name = \"Garrison\" division_template = \"Garrison Division\" start_experience_factor = 0.5"
		OWNER = ROOT
	}
	create_unit = {
		division = "name = \"Garrison\" division_template = \"Garrison Division\" start_experience_factor = 0.5"
		OWNER = ROOT
	}
	create_unit = {
		division = "name = \"Garrison\" division_template = \"Garrison Division\" start_experience_factor = 0.5"
		OWNER = ROOT
	}
	create_unit = {
		division = "name = \"Garrison\" division_template = \"Garrison Division\" start_experience_factor = 0.5"
		OWNER = ROOT
	}
	create_unit = {
		division = "name = \"Garrison\" division_template = \"Garrison Division\" start_experience_factor = 0.5"
		OWNER = ROOT
	}
	create_unit = {
		division = "name = \"Garrison\" division_template = \"Garrison Division\" start_experience_factor = 0.5"
		OWNER = ROOT
	}
	create_unit = {
		division = "name = \"Garrison\" division_template = \"Garrison Division\" start_experience_factor = 0.5"
		OWNER = ROOT
	}
	create_unit = {
		division = "name = \"Garrison\" division_template = \"Garrison Division\" start_experience_factor = 0.5"
		OWNER = ROOT
	}
}

replace_civ_with_arms_factories = {	

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
	
	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
}

#Country scope
ROOT_inherit_current_scope_wars_effect = {
	custom_effect_tooltip = ROOT_inherit_current_scope_wars_effect
	hidden_effect = {	
		every_country = {
			limit = {
				has_defensive_war_with = PREV
			}
			ROOT = { declare_war_on = { target = PREV type = annex_everything } }
		}
		every_country = {
			limit = {
				has_offensive_war_with = PREV
			}
			declare_war_on = { target = ROOT type = annex_everything }
		}
	}
}

set_all_law_country_flags = {
	clr_country_flag = labor_none
	if = {
		limit =  {
			has_idea = labor_none
		}
		set_country_flag = labor_none
	}
	clr_country_flag = labor_allowed
	if = {
		limit =  {
			has_idea = labor_allowed
		}
		set_country_flag = labor_allowed
	}
	clr_country_flag = labor_encouraged
	if = {
		limit =  {
			has_idea = labor_encouraged
		}
		set_country_flag = labor_encouraged
	}
	clr_country_flag = labor_homefront
	if = {
		limit =  {
			has_idea = labor_homefront
		}
		set_country_flag = labor_homefront
	}
	
	clr_country_flag = planned_economy
	if = {
		limit =  {
			has_idea = planned_economy
		}
		set_country_flag = planned_economy
	}
	clr_country_flag = private_control
	if = {
		limit =  {
			has_idea = private_control
		}
		set_country_flag = private_control
	}
	clr_country_flag = key_industries
	if = {
		limit =  {
			has_idea = key_industries
		}
		set_country_flag = key_industries
	}
	clr_country_flag = major_industries
	if = {
		limit =  {
			has_idea = major_industries
		}
		set_country_flag = major_industries
	}
	
	clr_country_flag = officer_train_none
	if = {
		limit =  {
			has_idea = officer_train_none
		}
		set_country_flag = officer_train_none
	}
	clr_country_flag = officer_train_low
	if = {
		limit =  {
			has_idea = officer_train_low
		}
		set_country_flag = officer_train_low
	}
	clr_country_flag = officer_train_high
	if = {
		limit =  {
			has_idea = officer_train_high
		}
		set_country_flag = officer_train_high
	}
	clr_country_flag = officer_train_elite
	if = {
		limit =  {
			has_idea = officer_train_elite
		}
		set_country_flag = officer_train_elite
	}
	
	clr_country_flag = train_none
	if = {
		limit =  {
			has_idea = train_none
		}
		set_country_flag = train_none
	}
	clr_country_flag = train_low
	if = {
		limit =  {
			has_idea = train_low
		}
		set_country_flag = train_low
	}
	clr_country_flag = train_medium
	if = {
		limit =  {
			has_idea = train_medium
		}
		set_country_flag = train_medium
	}
	clr_country_flag = train_high
	if = {
		limit =  {
			has_idea = train_high
		}
		set_country_flag = train_high
	}
	
	clr_country_flag = closed_economy
	if = {
		limit =  {
			has_idea = closed_economy
		}
		set_country_flag = closed_economy
	}
	clr_country_flag = free_trade
	if = {
		limit =  {
			has_idea = free_trade
		}
		set_country_flag = free_trade
	}
	clr_country_flag = export_focus
	if = {
		limit =  {
			has_idea = export_focus
		}
		set_country_flag = export_focus
	}
	clr_country_flag = limited_exports
	if = {
		limit =  {
			has_idea = limited_exports
		}
		set_country_flag = limited_exports
	}
	
	clr_country_flag = press_regulated
	if = {
		limit =  {
			has_idea = press_regulated
		}
		set_country_flag = press_regulated
	}
	clr_country_flag = press_censored
	if = {
		limit =  {
			has_idea = press_censored
		}
		set_country_flag = press_censored
	}
	clr_country_flag = press_state
	if = {
		limit =  {
			has_idea = press_state
		}
		set_country_flag = press_state
	}
	clr_country_flag = press_free
	if = {
		limit =  {
			has_idea = press_free
		}
		set_country_flag = press_free
	}
	
	clr_country_flag = tariffs_none
	if = {
		limit =  {
			has_idea = tariffs_none
		}
		set_country_flag = tariffs_none
	}
	clr_country_flag = tariffs_low
	if = {
		limit =  {
			has_idea = tariffs_low
		}
		set_country_flag = tariffs_low
	}
	clr_country_flag = tariffs_average
	if = {
		limit =  {
			has_idea = tariffs_average
		}
		set_country_flag = tariffs_average
	}
	clr_country_flag = tariffs_high
	if = {
		limit =  {
			has_idea = tariffs_high
		}
		set_country_flag = tariffs_high
	}
	clr_country_flag = tariffs_extreme
	if = {
		limit =  {
			has_idea = tariffs_extreme
		}
		set_country_flag = tariffs_extreme
	}
	
	clr_country_flag = security_liberty_first
	if = {
		limit =  {
			has_idea = security_liberty_first
		}
		set_country_flag = security_liberty_first
	}
	clr_country_flag = security_minor_restrictions
	if = {
		limit =  {
			has_idea = security_minor_restrictions
		}
		set_country_flag = security_minor_restrictions
	}
	clr_country_flag = security_major_restrictions
	if = {
		limit =  {
			has_idea = security_major_restrictions
		}
		set_country_flag = security_major_restrictions
	}
	clr_country_flag = security_police_state
	if = {
		limit =  {
			has_idea = security_police_state
		}
		set_country_flag = security_police_state
	}
	
	clr_country_flag = undisturbed_isolation
	if = {
		limit =  {
			has_idea = undisturbed_isolation
		}
		set_country_flag = undisturbed_isolation
	}
	clr_country_flag = civilian_economy
	if = {
		limit =  {
			has_idea = civilian_economy
		}
		set_country_flag = civilian_economy
	}
	clr_country_flag = isolation
	if = {
		limit =  {
			has_idea = isolation
		}
		set_country_flag = isolation
	}
	clr_country_flag = low_economic_mobilisation
	if = {
		limit =  {
			has_idea = low_economic_mobilisation
		}
		set_country_flag = low_economic_mobilisation
	}
	clr_country_flag = partial_economic_mobilisation
	if = {
		limit =  {
			has_idea = partial_economic_mobilisation
		}
		set_country_flag = partial_economic_mobilisation
	}
	clr_country_flag = war_economy
	if = {
		limit =  {
			has_idea = war_economy
		}
		set_country_flag = war_economy
	}
	clr_country_flag = tot_economic_mobilisation
	if = {
		limit =  {
			has_idea = tot_economic_mobilisation
		}
		set_country_flag = tot_economic_mobilisation
	}
	
	clr_country_flag = fdi_banned
	if = {
		limit =  {
			has_idea = fdi_banned
		}
		set_country_flag = fdi_banned
	}
	clr_country_flag = fdi_encouraged
	if = {
		limit =  {
			has_idea = fdi_encouraged
		}
		set_country_flag = fdi_encouraged
	}
	clr_country_flag = fdi_allowed
	if = {
		limit =  {
			has_idea = fdi_allowed
		}
		set_country_flag = fdi_allowed
	}
	clr_country_flag = fdi_regulated
	if = {
		limit =  {
			has_idea = fdi_regulated
		}
		set_country_flag = fdi_regulated
	}
	
	clr_country_flag = tax_minimal
	if = {
		limit =  {
			has_idea = tax_minimal
		}
		set_country_flag = tax_minimal
	}
	clr_country_flag = tax_low
	if = {
		limit =  {
			has_idea = tax_low
		}
		set_country_flag = tax_low
	}
	clr_country_flag = tax_average
	if = {
		limit =  {
			has_idea = tax_average
		}
		set_country_flag = tax_average
	}
	clr_country_flag = tax_high
	if = {
		limit =  {
			has_idea = tax_high
		}
		set_country_flag = tax_high
	}
	clr_country_flag = tax_extreme
	if = {
		limit =  {
			has_idea = tax_extreme
		}
		set_country_flag = tax_extreme
	}
}
	
level_up_state_category = {
	if = {
		limit = {
			has_state_category = wasteland
		}
		set_state_category = rural
	}
	else_if = {
		limit = {
			has_state_category = rural
		}
		set_state_category = pastoral
	}
	else_if = {
		limit = {
			has_state_category = pastoral
		}
		set_state_category = small_town
	}
	else_if = {
		limit = {
			has_state_category = small_town
		}
		set_state_category = town
	}
	else_if = {
		limit = {
			has_state_category = town
		}
		set_state_category = large_town
	}
	else_if = {
		limit = {
			has_state_category = large_town
		}
		set_state_category = small_city
	}
	else_if = {
		limit = {
			has_state_category = small_city
		}
		set_state_category = city
	}
	else_if = {
		limit = {
			has_state_category = city
		}
		set_state_category = large_city
	}
	else_if = {
		limit = {
			has_state_category = large_city
		}
		set_state_category = small_megalopolis
	}
	else_if = {
		limit = {
			has_state_category = small_megalopolis
		}
		set_state_category = megalopolis
	}
	else_if = {
		limit = {
			has_state_category = megalopolis
		}
		set_state_category = huge_megalopolis
	}
}
level_down_state_category = {
	if = {
		limit = {
			has_state_category = huge_megalopolis
		}
		set_state_category = megalopolis
	}
	else_if = {
		limit = {
			has_state_category = megalopolis
		}
		set_state_category = small_megalopolis
	}
	else_if = {
		limit = {
			has_state_category = small_megalopolis
		}
		set_state_category = large_city
	}
	else_if = {
		limit = {
			has_state_category = large_city
		}
		set_state_category = city
	}
	else_if = {
		limit = {
			has_state_category = city
		}
		set_state_category = small_city
	}
	else_if = {
		limit = {
			has_state_category = small_city
		}
		set_state_category = large_town
	}
	else_if = {
		limit = {
			has_state_category = large_town
		}
		set_state_category = town
	}
	else_if = {
		limit = {
			has_state_category = town
		}
		set_state_category = small_town
	}
	else_if = {
		limit = {
			has_state_category = small_town
		}
		set_state_category = pastoral
	}
	else_if = {
		limit = {
			has_state_category = pastoral
		}
		set_state_category = rural
	}
	else_if = {
		limit = {
			has_state_category = rural
		}
		set_state_category = wasteland
	}
}
set_state_category_variables = {
	if = {
		limit = {
			has_state_category = wasteland
		}
		set_temp_variable = { state_category_lvl = 1 }
	}
	if = {
		limit = {
			has_state_category = enclave
		}
		set_temp_variable = { state_category_lvl = 1 }
	}
	if = {
		limit = {
			has_state_category = tiny_island
		}
		set_temp_variable = { state_category_lvl = 1 }
	}
	if = {
		limit = {
			has_state_category = small_island
		}
		set_temp_variable = { state_category_lvl = 2 }
	}
	if = {
		limit = {
			has_state_category = rural
		}
		set_temp_variable = { state_category_lvl = 2 }
	}
	if = {
		limit = {
			has_state_category = pastoral
		}
		set_temp_variable = { state_category_lvl = 3 }
	}
	if = {
		limit = {
			has_state_category = small_town
		}
		set_temp_variable = { state_category_lvl = 4 }
	}
	if = {
		limit = {
			has_state_category = town
		}
		set_temp_variable = { state_category_lvl = 5 }
	}
	if = {
		limit = {
			has_state_category = large_town
		}
		set_temp_variable = { state_category_lvl = 6 }
	}
	if = {
		limit = {
			has_state_category = small_city
		}
		set_temp_variable = { state_category_lvl = 7 }
	}
	if = {
		limit = {
			has_state_category = city
		}
		set_temp_variable = { state_category_lvl = 8 }
	}
	if = {
		limit = {
			has_state_category = large_city
		}
		set_temp_variable = { state_category_lvl = 9 }
	}
	if = {
		limit = {
			has_state_category = small_metropolis
		}
		set_temp_variable = { state_category_lvl = 10 }
	}
	if = {
		limit = {
			has_state_category = metropolis
		}
		set_temp_variable = { state_category_lvl = 11 }
	}
	if = {
		limit = {
			has_state_category = huge_metropolis
		}
		set_temp_variable = { state_category_lvl = 12 }
	}
	if = {
		limit = {
			has_state_category = small_megalopolis
		}
		set_temp_variable = { state_category_lvl = 13 }
	}
	if = {
		limit = {
			has_state_category = megalopolis
		}
		set_temp_variable = { state_category_lvl = 14 }
	}
	if = {
		limit = {
			has_state_category = berlin
		}
		set_temp_variable = { state_category_lvl = 14 }
	}
	if = {
		limit = {
			has_state_category = huge_megalopolis
		}
		set_temp_variable = { state_category_lvl = 15 }
	}
}

research_WW1 = {
	set_technology = {infantry_charge = 1}
	set_technology = {small_unit_raids = 1}
	set_technology = {night_patrols = 1}
	set_technology = {dispersed_infantry_attacks = 1}
	set_technology = {infiltration_attacks = 1}
	set_technology = {stormtroopers = 1}
	set_technology = {complex_trench_systems = 1}
	set_technology = {offensive_trenches = 1}
	set_technology = {defensive_trenches = 1}
	set_technology = {reserve_trenches = 1}
	set_technology = {communication_trenches = 1}
	set_technology = {logistics_trenches = 1}
	set_technology = {barbed_wire = 1}
	set_technology = {pillboxes = 1}
	set_technology = {sniper_pits = 1}
	set_technology = {nomans_land_saps = 1}
	set_technology = {tunnel_mines = 1}
	set_technology = {fortress_trenches = 1}		
	set_technology = {basic_MG_defences = 1}
	set_technology = {multiple_MG_nests = 1}
	set_technology = {enfilade_MG_fire_fields = 1}
	set_technology = {infantry_MG_coordination = 1}
	set_technology = {MG_support_infantry_doctrine = 1}
	set_technology = {ww1_artillery = 1}
	set_technology = {artillery_concentration = 1}
	set_technology = {offensive_prep_fire = 1}
	set_technology = {continuous_fire = 1}
	set_technology = {harassment_fire = 1}
	set_technology = {rear_area_bombardment = 1}
	set_technology = {dummy_barrage = 1}
	set_technology = {standing_barrage = 1}
	set_technology = {box_barrage = 1}
	set_technology = {block_barrage = 1}
	set_technology = {creeping_barrage = 1}
	set_technology = {rolling_barrage = 1}
	set_technology = {artillery_observers = 1}
	set_technology = {balloon_observers = 1}
	set_technology = {aircraft_observers = 1}
	set_technology = {foot_runners = 1}
	set_technology = {carrier_pidgeons = 1}
	set_technology = {telephone_communications = 1}
	set_technology = {mobile_doctrines = 1}
	set_technology = {cavalry_charges = 1}
	set_technology = {cavalry_dismounting = 1}
	set_technology = {cavalry_exploitation = 1}
	set_technology = {armor_support = 1}
	set_technology = {infantry_tank_coordination = 1}
	set_technology = {infantry_tank_artillery_coordination = 1}
	set_technology = {anti_tank_traps = 1}
	set_technology = {infantry_AT_defences = 1}
	set_technology = {armored_car_recon = 1}
	set_technology = {motorcycle_liaison = 1}
	set_technology = {staff_officer_vehicles = 1}
	set_technology = {ww1_battlefield_support = 1}
	set_technology = {battlefield_commissions = 1}
	set_technology = {weather_reporting = 1}
	set_technology = {terrain_mapping = 1}
	set_technology = {camouflage_positions = 1}
	set_technology = {AA_positions = 1}
	set_technology = {first_aid_stations = 1}
}

revert_WW1 = {
	set_technology = {ww1_infantry = 0}
	set_technology = {infantry_charge = 0}
	set_technology = {small_unit_raids = 0}
	set_technology = {night_patrols = 0}
	set_technology = {dispersed_infantry_attacks = 0}
	set_technology = {infiltration_attacks = 0}
	set_technology = {stormtroopers = 0}
	set_technology = {complex_trench_systems = 0}
	set_technology = {offensive_trenches = 0}
	set_technology = {defensive_trenches = 0}
	set_technology = {reserve_trenches = 0}
	set_technology = {communication_trenches = 0}
	set_technology = {logistics_trenches = 0}
	set_technology = {barbed_wire = 0}
	set_technology = {pillboxes = 0}
	set_technology = {sniper_pits = 0}
	set_technology = {nomans_land_saps = 0}
	set_technology = {tunnel_mines = 0}
	set_technology = {fortress_trenches = 0}		
	set_technology = {basic_MG_defences = 0}
	set_technology = {multiple_MG_nests = 0}
	set_technology = {enfilade_MG_fire_fields = 0}
	set_technology = {infantry_MG_coordination = 0}
	set_technology = {MG_support_infantry_doctrine = 0}
	set_technology = {ww1_artillery = 0}
	set_technology = {artillery_concentration = 0}
	set_technology = {offensive_prep_fire = 0}
	set_technology = {continuous_fire = 0}
	set_technology = {harassment_fire = 0}
	set_technology = {rear_area_bombardment = 0}
	set_technology = {dummy_barrage = 0}
	set_technology = {standing_barrage = 0}
	set_technology = {box_barrage = 0}
	set_technology = {block_barrage = 0}
	set_technology = {creeping_barrage = 0}
	set_technology = {rolling_barrage = 0}
	set_technology = {artillery_observers = 0}
	set_technology = {balloon_observers = 0}
	set_technology = {aircraft_observers = 0}
	set_technology = {foot_runners = 0}
	set_technology = {carrier_pidgeons = 0}
	set_technology = {telephone_communications = 0}
	set_technology = {mobile_doctrines = 0}
	set_technology = {cavalry_charges = 0}
	set_technology = {cavalry_dismounting = 0}
	set_technology = {cavalry_exploitation = 0}
	set_technology = {armor_support = 0}
	set_technology = {infantry_tank_coordination = 0}
	set_technology = {infantry_tank_artillery_coordination = 0}
	set_technology = {anti_tank_traps = 0}
	set_technology = {infantry_AT_defences = 0}
	set_technology = {armored_car_recon = 0}
	set_technology = {motorcycle_liaison = 0}
	set_technology = {staff_officer_vehicles = 0}
	set_technology = {ww1_battlefield_support = 0}
	set_technology = {battlefield_commissions = 0}
	set_technology = {weather_reporting = 0}
	set_technology = {terrain_mapping = 0}
	set_technology = {camouflage_positions = 0}
	set_technology = {AA_positions = 0}
	set_technology = {first_aid_stations = 0}
	set_technology = {Infantry_support_MG_doctrine = 0}
}

add_EIC_ideas = {
#TANKS
	if = { limit = { check_variable = { Tank_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = tankfactory[X][SUBTYPE]
		}
		X = Tank_Buildings
		SUBTYPE = "[Root.GetSelectedTankFactoriesSubtypes]"
		} 
	}
#VEHICLES
	if = { limit = { check_variable = { Truck_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = truckfactory[X][SUBTYPE]
		}
		X = Truck_Buildings
		SUBTYPE = "[Root.GetSelectedTruckFactoriesSubtypes]"
		} 
	}
#ARTILLERY
	if = { limit = { check_variable = { Artillery_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = artilleryfactory[X][SUBTYPE]
		}
		X = Artillery_Buildings
		SUBTYPE = "[Root.GetSelectedArtilleryFactoriesSubtypes]"
		} 
	}
#SMALLARMS
	if = { limit = { check_variable = { Small_Arms_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = smallarmsfactory[X][SUBTYPE]
		}
		X = Small_Arms_Buildings
		SUBTYPE = "[Root.GetSelectedSmallArmsFactoriesSubtypes]"
		} 
	}
#UNIFORM
	if = { limit = { check_variable = { Uniform_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = uniformfactory[X]
		}
		X = Uniform_Buildings
		} 
	}
#LT AIRCRAFT
	if = { limit = { check_variable = { Ltaircraft_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = ltaircraftfactory[X][SUBTYPE]
		}
		X = Ltaircraft_Buildings
		SUBTYPE = "[Root.GetSelectedLtAirFactoriesSubtypes]"
		} 
	}
#HV AIRCRAFT
	if = { limit = { check_variable = { Hvaircraft_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = hvaircraftfactory[X][SUBTYPE]
		}
		X = Hvaircraft_Buildings
		SUBTYPE = "[Root.GetSelectedHvAirFactoriesSubtypes]"
		} 
	}
#JET AIRCRAFT
	if = { limit = { check_variable = { Jetaircraft_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = jetaircraftfactory[X][SUBTYPE]
		}
		X = Jetaircraft_Buildings
		SUBTYPE = "[Root.GetSelectedJetFactoriesSubtypes]"
		} 
	}
#SHIPYARD 
	if = { limit = { check_variable = { Shipyard_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = shipyardfactory[X][SUBTYPE]
		}
		X = Shipyard_Buildings
		SUBTYPE = "[Root.GetSelectedShipFactoriesSubtypes]"
		} 
	}
#SUBYARD 
	if = { limit = { check_variable = { Shipyard_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = shipyardfactory[X]
		}
		X = Shipyard_Buildings
		} 
	}
#SUBYARD 
	if = { limit = { check_variable = { subyard_Buildings > 0 } }
	meta_effect = { 	
		text = {
			add_ideas = subyardfactory[X]
		}
		X = subyard_Buildings
		} 
	}
}

check_special_buildings = {
	hidden_effect = { country_event = BICE_buildings.0 }
	custom_effect_tooltip = CHECK_SPECIAL_BUILDINGS
}

@EQUIPMENT_PERCENTAGE_BONUS_DEFAULT = 1.0
@EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED = 1.5
@SHIPYARD_OUTPUT_BONUS = 2

update_EIC_production_gui = {
	set_variable = { Tank_Buildings_Mod = Tank_Buildings }
	set_variable = { Truck_Buildings_Mod = Truck_Buildings }
	set_variable = { Uniform_Buildings_Mod = Uniform_Buildings }
	set_variable = { Small_Arms_Buildings_Mod = Small_Arms_Buildings }
	set_variable = { Jetaircraft_Buildings_Mod = Jetaircraft_Buildings }
	set_variable = { Artillery_Buildings_Mod = Artillery_Buildings }
	set_variable = { Ltaircraft_Buildings_Mod = Ltaircraft_Buildings }
	set_variable = { Hvaircraft_Buildings_Mod = Hvaircraft_Buildings }
	set_variable = { Shipyard_Buildings_Mod = Shipyard_Buildings }
	set_variable = { subyard_Buildings_Mod = subyard_Buildings }
#Tank
	if = { limit = { has_idea_with_trait = balanced_armor_production }
		multiply_variable = { Tank_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_DEFAULT }
	}
	else = {
		multiply_variable = { Tank_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED }
	}
#Truck
	if = { limit = { has_idea_with_trait = balanced_vehicle_production }
		multiply_variable = { Truck_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_DEFAULT }
	}
	else = {
		multiply_variable = { Truck_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED }
	}
#Artillery
	if = { limit = { has_idea_with_trait = balanced_artillery_production }
		multiply_variable = { Artillery_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_DEFAULT }
	}
	else = {
		multiply_variable = { Artillery_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED }
	}
#Uniform
	multiply_variable = { Uniform_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_DEFAULT }
#Small Arms
	if = { limit = { has_idea_with_trait = balanced_smallarms_production }
		multiply_variable = { Small_Arms_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_DEFAULT }
	}
	else = {
		multiply_variable = { Small_Arms_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED }
	}
#Artillery
	if = { limit = { has_idea_with_trait = balanced_artillery_production }
		multiply_variable = { Artillery_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_DEFAULT }
	}
	else = {
		multiply_variable = { Artillery_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED }
	}
#Lt Air
	if = { limit = { has_idea_with_trait = balanced_aircraft_production }
		multiply_variable = { Ltaircraft_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_DEFAULT }
	}
	else = {
		multiply_variable = { Ltaircraft_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED }
	}
#Hv Air
	if = { limit = { has_idea_with_trait = balanced_hv_aircraft_production }
		multiply_variable = { Hvaircraft_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_DEFAULT }
	}
	else = {
		multiply_variable = { Hvaircraft_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED }
	}
	
	
	multiply_variable = { Shipyard_Buildings_Mod = @SHIPYARD_OUTPUT_BONUS }
	multiply_variable = { subyard_Buildings_Mod = @EQUIPMENT_PERCENTAGE_BONUS_SPECIALISED }

}
JAP_pearl_score = {
	add_to_variable = { pearl_score = -5 }
	if = {
		limit = {
			has_idea = JAP_interservice_rivalry_navy_dominant
		}
		add_to_variable = { pearl_score = 2 }
	}
	if = {
		limit = {
			has_idea = JAP_interservice_rivalry_navy_strengthened
		}
		add_to_variable = { pearl_score = 1 }
	}
	if = {
		limit = {
			has_idea = JAP_interservice_rivalry_army_strengthened
		}
		add_to_variable = { pearl_score = -1 }
	}
	if = {
		limit = {
			has_idea = JAP_interservice_rivalry_army_dominant
		}
		add_to_variable = { pearl_score = -2 }
	}
	if = {
		limit = {
			not = { has_completed_focus = advanced_torpedoes_focus }
		}
		add_to_variable = { pearl_score = -1 }
	}
	if = {
		limit = {
			NOT = { has_completed_focus = JAP_carrier_warfare_experiments }
		}
		add_to_variable = { pearl_score = -2 }
	}
	if = {
		limit = {
			NOT = { has_completed_focus = JAP_first_air_fleet }
		}
		add_to_variable = { pearl_score = -1 }
	}
	if = {
		limit = {
			has_completed_focus = naval_air_innovations_focus
		}
		add_to_variable = { pearl_score = 1 }
	}
	if = {
		limit = {
			has_tech = nrm_db_combined_carrier
		}
		add_to_variable = { pearl_score = 1 }
	}
	if = {
		limit = {
			has_tech = nrm_carrier_operations
		}
		add_to_variable = { pearl_score = 1 }
	}
	if = {
		limit = {
			has_tech = nrm_carrier_taskforce
		}
		add_to_variable = { pearl_score = 1 }
	}
	if = {
		limit = {
			has_tech = nrm_carrier_strike
		}
		add_to_variable = { pearl_score = 1 }
	}
	if = {
		limit = {
			date < 1942.01.01
		}
		add_to_variable = { pearl_score = 1 }
	}
	if = {
		limit = {
			date < 1941.06.01
		}
		add_to_variable = { pearl_score = 1 }
	}	
	if = {
		limit = {
			USA = {
				or = {
					has_completed_focus = USA_CAS
					has_completed_focus = USA_fighter_effort
				}
			}
		}
		add_to_variable = { pearl_score = -1 }
	}
	if = {
		limit = {
			USA = {
				not = { has_completed_focus = USA_war_plans_division }
			}
		}
		add_to_variable = { pearl_score = 1 }
	}	
	if = {
		limit = {
			USA = {
				not = { has_tech = advanced_encryption }
			}
			OR = {
				has_tech = advanced_decryption
				if = {
					limit = {
						USA = { 
							not = { has_tech = improved_encryption }
						}
						has_tech = improved_decryption
					}
				}
				else_if = {
					limit = {
						has_tech = basic_decryption
						USA = { 
							not = { has_tech = basic_encryption }
						}
					}
				}
			}				
		}
		add_to_variable = { pearl_score = 1 }
	}
	if = {
		limit = {
			JAP = {
				has_war_with = ENG
			}
		}
		add_to_variable = { pearl_score = -1 }
	}
}

set_region_variables = { 
	if = {
		limit = {
			region = 1
		}
	set_variable = {region = 1}
	}
	else_if = {
		limit = {
			region = 2
		}
	set_variable = {region = 2}
	}
	else_if = {
		limit = {
			region = 3
		}
	set_variable = {region = 3}
	}
	else_if = {
		limit = {
			region = 4
		}
	set_variable = {region = 4}
	}
	else_if = {
		limit = {
			region = 5
		}
	set_variable = {region = 5}
	}
	else_if = {
		limit = {
			region = 6
		}
	set_variable = {region = 6}
	}
	else_if = {
		limit = {
			region = 7
		}
	set_variable = {region = 7}
	}
	else_if = {
		limit = {
			region = 8
		}
	set_variable = {region = 8}
	}
	else_if = {
		limit = {
			region = 9
		}
	set_variable = {region = 9}
	}
	else_if = {
		limit = {
			region = 10
		}
	set_variable = {region = 10}
	}
	else_if = {
		limit = {
			region = 11
		}
	set_variable = {region = 11}
	}
	else_if = {
		limit = {
			region = 12
		}
	set_variable = {region = 12}
	}
	else_if = {
		limit = {
			region = 13
		}
	set_variable = {region = 13}
	}
	else_if = {
		limit = {
			region = 14
		}
	set_variable = {region = 14}
	}
	else_if = {
		limit = {
			region = 15
		}
	set_variable = {region = 15}
	}
	else_if = {
		limit = {
			region = 16
		}
	set_variable = {region = 16}
	}
	else_if = {
		limit = {
			region = 17
		}
	set_variable = {region = 17}
	}
	else_if = {
		limit = {
			region = 18
		}
	set_variable = {region = 18}
	}
	else_if = {
		limit = {
			region = 19
		}
	set_variable = {region = 19}
	}
	else_if = {
		limit = {
			region = 20
		}
	set_variable = {region = 20}
	}
	else_if = {
		limit = {
			region = 21
		}
	set_variable = {region = 21}
	}
	else_if = {
		limit = {
			region = 22
		}
	set_variable = {region = 22}
	}
	else_if = {
		limit = {
			region = 23
		}
	set_variable = {region = 23}
	}
	else_if = {
		limit = {
			region = 24
		}
	set_variable = {region = 24}
	}
	else_if = {
		limit = {
			region = 25
		}
	set_variable = {region = 25}
	}
	else_if = {
		limit = {
			region = 26
		}
	set_variable = {region = 26}
	}
	else_if = {
		limit = {
			region = 27
		}
	set_variable = {region = 27}
	}
	else_if = {
		limit = {
			region = 28
		}
	set_variable = {region = 28}
	}
	else_if = {
		limit = {
			region = 29
		}
	set_variable = {region = 29}
	}
	else_if = {
		limit = {
			region = 30
		}
	set_variable = {region = 30}
	}
	else_if = {
		limit = {
			region = 31
		}
	set_variable = {region = 31}
	}
	else_if = {
		limit = {
			region = 32
		}
	set_variable = {region = 32}
	}
	else_if = {
		limit = {
			region = 33
		}
	set_variable = {region = 33}
	}
	else_if = {
		limit = {
			region = 34
		}
	set_variable = {region = 34}
	}
	else_if = {
		limit = {
			region = 35
		}
	set_variable = {region = 35}
	}
	else_if = {
		limit = {
			region = 36
		}
	set_variable = {region = 36}
	}
	else_if = {
		limit = {
			region = 37
		}
	set_variable = {region = 37}
	}
	else_if = {
		limit = {
			region = 38
		}
	set_variable = {region = 38}
	}
	else_if = {
		limit = {
			region = 39
		}
	set_variable = {region = 39}
	}
	else_if = {
		limit = {
			region = 40
		}
	set_variable = {region = 40}
	}
	else_if = {
		limit = {
			region = 41
		}
	set_variable = {region = 41}
	}
	else_if = {
		limit = {
			region = 42
		}
	set_variable = {region = 42}
	}
	else_if = {
		limit = {
			region = 43
		}
	set_variable = {region = 43}
	}
	else_if = {
		limit = {
			region = 44
		}
	set_variable = {region = 44}
	}
	else_if = {
		limit = {
			region = 45
		}
	set_variable = {region = 45}
	}
	else_if = {
		limit = {
			region = 46
		}
	set_variable = {region = 46}
	}
	else_if = {
		limit = {
			region = 47
		}
	set_variable = {region = 47}
	}
	else_if = {
		limit = {
			region = 48
		}
	set_variable = {region = 48}
	}
	else_if = {
		limit = {
			region = 49
		}
	set_variable = {region = 49}
	}
	else_if = {
		limit = {
			region = 50
		}
	set_variable = {region = 50}
	}
	else_if = {
		limit = {
			region = 51
		}
	set_variable = {region = 51}
	}
	else_if = {
		limit = {
			region = 52
		}
	set_variable = {region = 52}
	}
	else_if = {
		limit = {
			region = 53
		}
	set_variable = {region = 53}
	}
	else_if = {
		limit = {
			region = 54
		}
	set_variable = {region = 54}
	}
	else_if = {
		limit = {
			region = 55
		}
	set_variable = {region = 55}
	}
	else_if = {
		limit = {
			region = 56
		}
	set_variable = {region = 56}
	}
	else_if = {
		limit = {
			region = 57
		}
	set_variable = {region = 57}
	}
	else_if = {
		limit = {
			region = 58
		}
	set_variable = {region = 58}
	}
	else_if = {
		limit = {
			region = 59
		}
	set_variable = {region = 59}
	}
	else_if = {
		limit = {
			region = 60
		}
	set_variable = {region = 60}
	}
	else_if = {
		limit = {
			region = 61
		}
	set_variable = {region = 61}
	}
	else_if = {
		limit = {
			region = 62
		}
	set_variable = {region = 62}
	}
	else_if = {
		limit = {
			region = 63
		}
	set_variable = {region = 63}
	}
	else_if = {
		limit = {
			region = 64
		}
	set_variable = {region = 64}
	}
	else_if = {
		limit = {
			region = 65
		}
	set_variable = {region = 65}
	}
	else_if = {
		limit = {
			region = 66
		}
	set_variable = {region = 66}
	}
	else_if = {
		limit = {
			region = 67
		}
	set_variable = {region = 67}
	}
	else_if = {
		limit = {
			region = 68
		}
	set_variable = {region = 68}
	}
	else_if = {
		limit = {
			region = 69
		}
	set_variable = {region = 69}
	}
	else_if = {
		limit = {
			region = 70
		}
	set_variable = {region = 70}
	}
	else_if = {
		limit = {
			region = 71
		}
	set_variable = {region = 71}
	}
	else_if = {
		limit = {
			region = 72
		}
	set_variable = {region = 72}
	}
	else_if = {
		limit = {
			region = 73
		}
	set_variable = {region = 73}
	}
	else_if = {
		limit = {
			region = 74
		}
	set_variable = {region = 74}
	}
	else_if = {
		limit = {
			region = 75
		}
	set_variable = {region = 75}
	}
	else_if = {
		limit = {
			region = 76
		}
	set_variable = {region = 76}
	}
	else_if = {
		limit = {
			region = 77
		}
	set_variable = {region = 77}
	}
	else_if = {
		limit = {
			region = 78
		}
	set_variable = {region = 78}
	}
	else_if = {
		limit = {
			region = 79
		}
	set_variable = {region = 79}
	}
	else_if = {
		limit = {
			region = 80
		}
	set_variable = {region = 80}
	}
	else_if = {
		limit = {
			region = 81
		}
	set_variable = {region = 81}
	}
	else_if = {
		limit = {
			region = 82
		}
	set_variable = {region = 82}
	}
	else_if = {
		limit = {
			region = 83
		}
	set_variable = {region = 83}
	}
	else_if = {
		limit = {
			region = 84
		}
	set_variable = {region = 84}
	}
	else_if = {
		limit = {
			region = 85
		}
	set_variable = {region = 85}
	}
	else_if = {
		limit = {
			region = 86
		}
	set_variable = {region = 86}
	}
	else_if = {
		limit = {
			region = 87
		}
	set_variable = {region = 87}
	}
	else_if = {
		limit = {
			region = 88
		}
	set_variable = {region = 88}
	}
	else_if = {
		limit = {
			region = 89
		}
	set_variable = {region = 89}
	}
	else_if = {
		limit = {
			region = 90
		}
	set_variable = {region = 90}
	}
	else_if = {
		limit = {
			region = 91
		}
	set_variable = {region = 91}
	}
	else_if = {
		limit = {
			region = 92
		}
	set_variable = {region = 92}
	}
	else_if = {
		limit = {
			region = 93
		}
	set_variable = {region = 93}
	}
	else_if = {
		limit = {
			region = 94
		}
	set_variable = {region = 94}
	}
	else_if = {
		limit = {
			region = 95
		}
	set_variable = {region = 95}
	}
	else_if = {
		limit = {
			region = 96
		}
	set_variable = {region = 96}
	}
	else_if = {
		limit = {
			region = 97
		}
	set_variable = {region = 97}
	}
	else_if = {
		limit = {
			region = 98
		}
	set_variable = {region = 98}
	}
	else_if = {
		limit = {
			region = 99
		}
	set_variable = {region = 99}
	}
	else_if = {
		limit = {
			region = 100
		}
	set_variable = {region = 100}
	}
	else_if = {
		limit = {
			region = 101
		}
	set_variable = {region = 101}
	}
	else_if = {
		limit = {
			region = 102
		}
	set_variable = {region = 102}
	}
	else_if = {
		limit = {
			region = 103
		}
	set_variable = {region = 103}
	}
	else_if = {
		limit = {
			region = 104
		}
	set_variable = {region = 104}
	}
	else_if = {
		limit = {
			region = 105
		}
	set_variable = {region = 105}
	}
	else_if = {
		limit = {
			region = 106
		}
	set_variable = {region = 106}
	}
	else_if = {
		limit = {
			region = 107
		}
	set_variable = {region = 107}
	}
	else_if = {
		limit = {
			region = 108
		}
	set_variable = {region = 108}
	}
	else_if = {
		limit = {
			region = 109
		}
	set_variable = {region = 109}
	}
	else_if = {
		limit = {
			region = 110
		}
	set_variable = {region = 110}
	}
	else_if = {
		limit = {
			region = 111
		}
	set_variable = {region = 111}
	}
	else_if = {
		limit = {
			region = 112
		}
	set_variable = {region = 112}
	}
	else_if = {
		limit = {
			region = 113
		}
	set_variable = {region = 113}
	}
	else_if = {
		limit = {
			region = 114
		}
	set_variable = {region = 114}
	}
	else_if = {
		limit = {
			region = 115
		}
	set_variable = {region = 115}
	}
	else_if = {
		limit = {
			region = 116
		}
	set_variable = {region = 116}
	}
	else_if = {
		limit = {
			region = 117
		}
	set_variable = {region = 117}
	}
	else_if = {
		limit = {
			region = 118
		}
	set_variable = {region = 118}
	}
	else_if = {
		limit = {
			region = 119
		}
	set_variable = {region = 119}
	}
	else_if = {
		limit = {
			region = 120
		}
	set_variable = {region = 120}
	}
	else_if = {
		limit = {
			region = 121
		}
	set_variable = {region = 121}
	}
	else_if = {
		limit = {
			region = 122
		}
	set_variable = {region = 122}
	}
	else_if = {
		limit = {
			region = 123
		}
	set_variable = {region = 123}
	}
	else_if = {
		limit = {
			region = 124
		}
	set_variable = {region = 124}
	}
	else_if = {
		limit = {
			region = 125
		}
	set_variable = {region = 125}
	}
	else_if = {
		limit = {
			region = 126
		}
	set_variable = {region = 126}
	}
	else_if = {
		limit = {
			region = 127
		}
	set_variable = {region = 127}
	}
	else_if = {
		limit = {
			region = 128
		}
	set_variable = {region = 128}
	}
	else_if = {
		limit = {
			region = 129
		}
	set_variable = {region = 129}
	}
	else_if = {
		limit = {
			region = 130
		}
	set_variable = {region = 130}
	}
	else_if = {
		limit = {
			region = 131
		}
	set_variable = {region = 131}
	}
	else_if = {
		limit = {
			region = 132
		}
	set_variable = {region = 132}
	}
	else_if = {
		limit = {
			region = 133
		}
	set_variable = {region = 133}
	}
	else_if = {
		limit = {
			region = 134
		}
	set_variable = {region = 134}
	}
	else_if = {
		limit = {
			region = 135
		}
	set_variable = {region = 135}
	}
	else_if = {
		limit = {
			region = 136
		}
	set_variable = {region = 136}
	}
	else_if = {
		limit = {
			region = 137
		}
	set_variable = {region = 137}
	}
	else_if = {
		limit = {
			region = 138
		}
	set_variable = {region = 138}
	}
	else_if = {
		limit = {
			region = 139
		}
	set_variable = {region = 139}
	}
	else_if = {
		limit = {
			region = 140
		}
	set_variable = {region = 140}
	}
	else_if = {
		limit = {
			region = 141
		}
	set_variable = {region = 141}
	}
	else_if = {
		limit = {
			region = 142
		}
	set_variable = {region = 142}
	}
	else_if = {
		limit = {
			region = 143
		}
	set_variable = {region = 143}
	}
	else_if = {
		limit = {
			region = 144
		}
	set_variable = {region = 144}
	}
	else_if = {
		limit = {
			region = 145
		}
	set_variable = {region = 145}
	}
	else_if = {
		limit = {
			region = 146
		}
	set_variable = {region = 146}
	}
	else_if = {
		limit = {
			region = 147
		}
	set_variable = {region = 147}
	}
	else_if = {
		limit = {
			region = 148
		}
	set_variable = {region = 148}
	}
	else_if = {
		limit = {
			region = 149
		}
	set_variable = {region = 149}
	}
	else_if = {
		limit = {
			region = 150
		}
	set_variable = {region = 150}
	}
	else_if = {
		limit = {
			region = 151
		}
	set_variable = {region = 151}
	}
	else_if = {
		limit = {
			region = 152
		}
	set_variable = {region = 152}
	}
	else_if = {
		limit = {
			region = 153
		}
	set_variable = {region = 153}
	}
	else_if = {
		limit = {
			region = 154
		}
	set_variable = {region = 154}
	}
	else_if = {
		limit = {
			region = 155
		}
	set_variable = {region = 155}
	}
	else_if = {
		limit = {
			region = 156
		}
	set_variable = {region = 156}
	}
	else_if = {
		limit = {
			region = 157
		}
	set_variable = {region = 157}
	}
	else_if = {
		limit = {
			region = 158
		}
	set_variable = {region = 158}
	}
	else_if = {
		limit = {
			region = 159
		}
	set_variable = {region = 159}
	}
	else_if = {
		limit = {
			region = 160
		}
	set_variable = {region = 160}
	}
	else_if = {
		limit = {
			region = 161
		}
	set_variable = {region = 161}
	}
	else_if = {
		limit = {
			region = 162
		}
	set_variable = {region = 162}
	}
	else_if = {
		limit = {
			region = 163
		}
	set_variable = {region = 163}
	}
	else_if = {
		limit = {
			region = 164
		}
	set_variable = {region = 164}
	}
	else_if = {
		limit = {
			region = 165
		}
	set_variable = {region = 165}
	}
	else_if = {
		limit = {
			region = 166
		}
	set_variable = {region = 166}
	}
	else_if = {
		limit = {
			region = 167
		}
	set_variable = {region = 167}
	}
	else_if = {
		limit = {
			region = 168
		}
	set_variable = {region = 168}
	}
	else_if = {
		limit = {
			region = 169
		}
	set_variable = {region = 169}
	}
	else_if = {
		limit = {
			region = 170
		}
	set_variable = {region = 170}
	}
	else_if = {
		limit = {
			region = 171
		}
	set_variable = {region = 171}
	}
	else_if = {
		limit = {
			region = 172
		}
	set_variable = {region = 172}
	}
	else_if = {
		limit = {
			region = 173
		}
	set_variable = {region = 173}
	}
	else_if = {
		limit = {
			region = 174
		}
	set_variable = {region = 174}
	}
	else_if = {
		limit = {
			region = 175
		}
	set_variable = {region = 175}
	}
	else_if = {
		limit = {
			region = 176
		}
	set_variable = {region = 176}
	}
	else_if = {
		limit = {
			region = 177
		}
	set_variable = {region = 177}
	}
	else_if = {
		limit = {
			region = 178
		}
	set_variable = {region = 178}
	}
	else_if = {
		limit = {
			region = 179
		}
	set_variable = {region = 179}
	}
	else_if = {
		limit = {
			region = 180
		}
	set_variable = {region = 180}
	}
	else_if = {
		limit = {
			region = 181
		}
	set_variable = {region = 181}
	}
	else_if = {
		limit = {
			region = 182
		}
	set_variable = {region = 182}
	}
	else_if = {
		limit = {
			region = 183
		}
	set_variable = {region = 183}
	}
	else_if = {
		limit = {
			region = 184
		}
	set_variable = {region = 184}
	}
	else_if = {
		limit = {
			region = 185
		}
	set_variable = {region = 185}
	}
	else_if = {
		limit = {
			region = 186
		}
	set_variable = {region = 186}
	}
	else_if = {
		limit = {
			region = 187
		}
	set_variable = {region = 187}
	}
	else_if = {
		limit = {
			region = 188
		}
	set_variable = {region = 188}
	}
	else_if = {
		limit = {
			region = 189
		}
	set_variable = {region = 189}
	}
	else_if = {
		limit = {
			region = 190
		}
	set_variable = {region = 190}
	}
	else_if = {
		limit = {
			region = 191
		}
	set_variable = {region = 191}
	}
	else_if = {
		limit = {
			region = 192
		}
	set_variable = {region = 192}
	}
	else_if = {
		limit = {
			region = 193
		}
	set_variable = {region = 193}
	}
	else_if = {
		limit = {
			region = 194
		}
	set_variable = {region = 194}
	}
	else_if = {
		limit = {
			region = 195
		}
	set_variable = {region = 195}
	}
	else_if = {
		limit = {
			region = 196
		}
	set_variable = {region = 196}
	}
	else_if = {
		limit = {
			region = 197
		}
	set_variable = {region = 197}
	}
	else_if = {
		limit = {
			region = 198
		}
	set_variable = {region = 198}
	}
	else_if = {
		limit = {
			region = 199
		}
	set_variable = {region = 199}
	}
	else_if = {
		limit = {
			region = 200
		}
	set_variable = {region = 200}
	}
	else_if = {
		limit = {
			region = 201
		}
	set_variable = {region = 201}
	}
	else_if = {
		limit = {
			region = 202
		}
	set_variable = {region = 202}
	}
	else_if = {
		limit = {
			region = 203
		}
	set_variable = {region = 203}
	}
	else_if = {
		limit = {
			region = 204
		}
	set_variable = {region = 204}
	}
	else_if = {
		limit = {
			region = 205
		}
	set_variable = {region = 205}
	}
	else_if = {
		limit = {
			region = 206
		}
	set_variable = {region = 206}
	}
	else_if = {
		limit = {
			region = 207
		}
	set_variable = {region = 207}
	}
	else_if = {
		limit = {
			region = 208
		}
	set_variable = {region = 208}
	}
	else_if = {
		limit = {
			region = 209
		}
	set_variable = {region = 209}
	}
	else_if = {
		limit = {
			region = 210
		}
	set_variable = {region = 210}
	}
	else_if = {
		limit = {
			region = 211
		}
	set_variable = {region = 211}
	}
	else_if = {
		limit = {
			region = 212
		}
	set_variable = {region = 212}
	}
	else_if = {
		limit = {
			region = 213
		}
	set_variable = {region = 213}
	}
	else_if = {
		limit = {
			region = 214
		}
	set_variable = {region = 214}
	}
	else_if = {
		limit = {
			region = 215
		}
	set_variable = {region = 215}
	}
	else_if = {
		limit = {
			region = 216
		}
	set_variable = {region = 216}
	}
	else_if = {
		limit = {
			region = 217
		}
	set_variable = {region = 217}
	}
	else_if = {
		limit = {
			region = 218
		}
	set_variable = {region = 218}
	}
	else_if = {
		limit = {
			region = 219
		}
	set_variable = {region = 219}
	}
	else_if = {
		limit = {
			region = 220
		}
	set_variable = {region = 220}
	}
	else_if = {
		limit = {
			region = 221
		}
	set_variable = {region = 221}
	}
	else_if = {
		limit = {
			region = 222
		}
	set_variable = {region = 222}
	}
	else_if = {
		limit = {
			region = 223
		}
	set_variable = {region = 223}
	}
	else_if = {
		limit = {
			region = 224
		}
	set_variable = {region = 224}
	}
	else_if = {
		limit = {
			region = 225
		}
	set_variable = {region = 225}
	}
	else_if = {
		limit = {
			region = 226
		}
	set_variable = {region = 226}
	}
	else_if = {
		limit = {
			region = 227
		}
	set_variable = {region = 227}
	}
	else_if = {
		limit = {
			region = 228
		}
	set_variable = {region = 228}
	}
	else_if = {
		limit = {
			region = 229
		}
	set_variable = {region = 229}
	}
	else_if = {
		limit = {
			region = 230
		}
	set_variable = {region = 230}
	}
	else_if = {
		limit = {
			region = 231
		}
	set_variable = {region = 231}
	}
	else_if = {
		limit = {
			region = 232
		}
	set_variable = {region = 232}
	}
	else_if = {
		limit = {
			region = 233
		}
	set_variable = {region = 233}
	}
	else_if = {
		limit = {
			region = 234
		}
	set_variable = {region = 234}
	}
	else_if = {
		limit = {
			region = 235
		}
	set_variable = {region = 235}
	}
	else_if = {
		limit = {
			region = 236
		}
	set_variable = {region = 236}
	}
	else_if = {
		limit = {
			region = 237
		}
	set_variable = {region = 237}
	}
	else_if = {
		limit = {
			region = 238
		}
	set_variable = {region = 238}
	}
	else_if = {
		limit = {
			region = 239
		}
	set_variable = {region = 239}
	}
	else_if = {
		limit = {
			region = 240
		}
	set_variable = {region = 240}
	}
	else_if = {
		limit = {
			region = 241
		}
	set_variable = {region = 241}
	}
	else_if = {
		limit = {
			region = 242
		}
	set_variable = {region = 242}
	}
	else_if = {
		limit = {
			region = 243
		}
	set_variable = {region = 243}
	}
	else_if = {
		limit = {
			region = 244
		}
	set_variable = {region = 244}
	}
	else_if = {
		limit = {
			region = 245
		}
	set_variable = {region = 245}
	}
	else_if = {
		limit = {
			region = 246
		}
	set_variable = {region = 246}
	}
	else_if = {
		limit = {
			region = 247
		}
	set_variable = {region = 247}
	}
	else_if = {
		limit = {
			region = 248
		}
	set_variable = {region = 248}
	}
	else_if = {
		limit = {
			region = 249
		}
	set_variable = {region = 249}
	}
	else_if = {
		limit = {
			region = 250
		}
	set_variable = {region = 250}
	}
	else_if = {
		limit = {
			region = 251
		}
	set_variable = {region = 251}
	}
	else_if = {
		limit = {
			region = 252
		}
	set_variable = {region = 252}
	}
	else_if = {
		limit = {
			region = 253
		}
	set_variable = {region = 253}
	}
	else_if = {
		limit = {
			region = 254
		}
	set_variable = {region = 254}
	}
	else_if = {
		limit = {
			region = 255
		}
	set_variable = {region = 255}
	}
	else_if = {
		limit = {
			region = 256
		}
	set_variable = {region = 256}
	}
	else_if = {
		limit = {
			region = 257
		}
	set_variable = {region = 257}
	}
	else_if = {
		limit = {
			region = 258
		}
	set_variable = {region = 258}
	}
	else_if = {
		limit = {
			region = 259
		}
	set_variable = {region = 259}
	}
	else_if = {
		limit = {
			region = 260
		}
	set_variable = {region = 260}
	}
	else_if = {
		limit = {
			region = 261
		}
	set_variable = {region = 261}
	}
	else_if = {
		limit = {
			region = 262
		}
	set_variable = {region = 262}
	}
	else_if = {
		limit = {
			region = 263
		}
	set_variable = {region = 263}
	}
	else_if = {
		limit = {
			region = 264
		}
	set_variable = {region = 264}
	}
	else_if = {
		limit = {
			region = 265
		}
	set_variable = {region = 265}
	}
	else_if = {
		limit = {
			region = 266
		}
	set_variable = {region = 266}
	}
	else_if = {
		limit = {
			region = 267
		}
	set_variable = {region = 267}
	}
	else_if = {
		limit = {
			region = 268
		}
	set_variable = {region = 268}
	}
	else_if = {
		limit = {
			region = 269
		}
	set_variable = {region = 269}
	}
	else_if = {
		limit = {
			region = 270
		}
	set_variable = {region = 270}
	}
	else_if = {
		limit = {
			region = 271
		}
	set_variable = {region = 271}
	}
}
increase_fuel_storage = {
	if = {
		limit = {
			has_tech = fuel_silos5
		}
	}
	else_if = {
		limit = {
			has_tech = fuel_silos4
		}
		set_technology = {
			fuel_silos5 = 1
		}
	}
	else_if = {
		limit = {
			has_tech = fuel_silos3
		}
		set_technology = {
			fuel_silos4 = 1
		}
	}
	else_if = {
		limit = {
			has_tech = fuel_silos2
		}
		set_technology = {
			fuel_silos3 = 1
		}
	}
	else_if = {
		limit = {
			has_tech = fuel_silos
		}
		set_technology = {
			fuel_silos2 = 1
		}
	}
	else = {
		set_technology = {
			fuel_silos = 1
		}
	}
}
set_division_in_state_var = {
	if = {
	limit = { divisions_in_state = { size > 0
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 1
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 2
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 3
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 4
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 5
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 6
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 7
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 8
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 9
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 10
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 11
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 12
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 13
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 14
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
	if = {
	limit = { divisions_in_state = { size > 15
				state = FROM
			}
		} add_to_temp_variable = { temp_div_in_state = 1 }
	}
}

set_ships_in_port_var = {
	if = { limit = { always = no }
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 0
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 1 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 4
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 9
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 14
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 19
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 24
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 29
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 34
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 39
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 44
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 49
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 54
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 59
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 64
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 69
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 74
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 79
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 84
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 89
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 94
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	}
	if = {
	limit = { FROM.FROM = { ships_in_state_ports = { size > 99
				state = 1
			}
		} } add_to_temp_variable = { temp_ships_in_port = 5 }
	} }
}

DIPLOMACY_GUARANTEE_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_guarantees
				option = ALWAYS_FREE
			}
		}
		set_global_flag = DIPLOMACY_GUARANTEE
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_guarantees
				option = LIMITED
			}
		}
		set_global_flag = DIPLOMACY_GUARANTEE_LIMITED
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_guarantees
				option = SAME_IDEOLOGY
			}
		}
		set_global_flag = DIPLOMACY_GUARANTEE_SAME
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_guarantees
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_GUARANTEE_BLOCKED
	}
}
DIPLOMACY_REVOKE_GUARANTEE_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_revoke_guarantees
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_REVOKE_GUARANTEE_BLOCKED
	}
}
DIPLOMACY_RELEASE_NATION_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_release_nations
				option = FREE
			}
		}
		set_global_flag = DIPLOMACY_RELEASE_NATION
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_release_nations
				option = PEACE_ONLY
			}
		}
		set_global_flag = DIPLOMACY_RELEASE_NATION_PEACE
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_release_nations
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_RELEASE_NATION_BLOCKED
	}
}
DIPLOMACY_ACCESS_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_access
				option = FREE
			}
		}
		set_global_flag = DIPLOMACY_ACCESS
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_access
				option = SAME_IDEOLOGY
			}
		}
		set_global_flag = DIPLOMACY_ACCESS_SAME
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_access
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_ACCESS_BLOCKED
	}
}
DIPLOMACY_INCOMING_LEND_LEASE_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_lend_lease
				option = FREE
			}
		}
		set_global_flag = DIPLOMACY_INCOMING_LEND_LEASE
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_lend_lease
				option = LIMITED
			}
		}
		set_global_flag = DIPLOMACY_INCOMING_LEND_LEASE_LIMITED
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_lend_lease
				option = SAME_IDEOLOGY
			}
		}
		set_global_flag = DIPLOMACY_INCOMING_LEND_LEASE_SAME
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_lend_lease
				option = SAME_FACTION
			}
		}
		set_global_flag = DIPLOMACY_INCOMING_LEND_LEASE_FACTION
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_lend_lease
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_INCOMING_LEND_LEASE_BLOCKED
	}
}
DIPLOMACY_REQUEST_LICENSED_PRODUCTION_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_licensing
				option = FREE
			}
		}
		set_global_flag = DIPLOMACY_REQUEST_LICENSED_PRODUCTION
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_licensing
				option = SAME_IDEOLOGY
			}
		}
		set_global_flag = DIPLOMACY_REQUEST_LICENSED_PRODUCTION_SAME
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_licensing
				option = SAME_FACTION
			}
		}
		set_global_flag = DIPLOMACY_REQUEST_LICENSED_PRODUCTION_FACTION
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_licensing
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_REQUEST_LICENSED_PRODUCTION_BLOCKED
	}
}
DIPLOMACY_GENERATE_WARGOAL_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_wargoals
				option = ALWAYS_FREE
			}
		}
		set_global_flag = DIPLOMACY_GENERATE_WARGOAL
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_wargoals
				option = LIMITED
			}
		}
		set_global_flag = DIPLOMACY_GENERATE_WARGOAL_LIMITED
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_wargoals
				option = FREE_25
			}
		}
		set_global_flag = DIPLOMACY_GENERATE_WARGOAL_25
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_wargoals
				option = FREE_50
			}
		}
		set_global_flag = DIPLOMACY_GENERATE_WARGOAL_50
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_wargoals
				option = FREE_75
			}
		}
		set_global_flag = DIPLOMACY_GENERATE_WARGOAL_75
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_wargoals
				option = FREE_100
			}
		}
		set_global_flag = DIPLOMACY_GENERATE_WARGOAL_100
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_wargoals
				option = FOCUSES_ONLY
			}
		}
		set_global_flag = DIPLOMACY_GENERATE_WARGOAL_FOCUS
	}
}
DIPLOMACY_BOOST_PARTY_POPULARITY_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_party_boosting
				option = FREE
			}
		}
		set_global_flag = DIPLOMACY_BOOST_PARTY_POPULARITY
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_party_boosting
				option = AI_ONLY
			}
		}
		set_global_flag = DIPLOMACY_BOOST_PARTY_POPULARITY_AI
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_party_boosting
				option = PLAYER_ONLY
			}
		}
		set_global_flag = DIPLOMACY_BOOST_PARTY_POPULARITY_PLAYER
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_party_boosting
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_BOOST_PARTY_POPULARITY_BLOCKED
	}
}
DIPLOMACY_STAGE_COUP_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_coups
				option = FREE
			}
		}
		set_global_flag = DIPLOMACY_STAGE_COUP
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_coups
				option = AI_ONLY
			}
		}
		set_global_flag = DIPLOMACY_STAGE_COUP_AI
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_coups
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_STAGE_COUP_BLOCKED
	}
}
DIPLOMACY_LEAVE_FACTION_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_leave_faction
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_LEAVE_FACTION_BLOCKED
	}
}
DIPLOMACY_ASSUME_FACTION_LEADERSHIP_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_take_over_faction
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_ASSUME_FACTION_LEADERSHIP_BLOCKED
	}
}
DIPLOMACY_KICK_FROM_FACTION_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_kick_faction
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_KICK_FROM_FACTION_BLOCKED
	}
}
DIPLOMACY_SEND_VOLUNTEERS_EFFECT = {
	if = {
		limit = {
			has_game_rule = {
				rule = allow_volunteers
				option = FREE
			}
		}
		set_global_flag = DIPLOMACY_SEND_VOLUNTEERS
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_volunteers
				option = LIMITED
			}
		}
		set_global_flag = DIPLOMACY_SEND_VOLUNTEERS
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_volunteers
				option = SAME_IDEOLOGY
			}
		}
		set_global_flag = DIPLOMACY_SEND_VOLUNTEERS_SAME
	}
	if = {
		limit = {
			has_game_rule = {
				rule = allow_volunteers
				option = BLOCKED
			}
		}
		set_global_flag = DIPLOMACY_SEND_VOLUNTEERS_BLOCKED
	}
}

##########################
##########################
###### CONSTRUCTION ######
##########################
##########################

construction_cic_assigned = {
	set_temp_variable = { cic_output = cic_slot }
	multiply_temp_variable = { cic_output = 5 }
	custom_effect_tooltip = "CIC_SLOT_TT" 
	
	#EXPAND with more info to the modifier, actual speed, days left, etc
	
	#Add to total CIC used, place shadow factories if not enough available CIC
	
	set_temp_variable = { cic_new_count = cic_slot }
	subtract_from_temp_variable = { cic_new_count = cic_assigned }
	#log = "[?cic_slot] Slot"
	#log = "[?cic_assigned] Assigned"
	#log = "[?cic_new_count] New Count"
	if = {
		limit = {
			check_variable = { Root.available_CIC > -0.01 }
		}
		
		if = {
			limit = {
				check_variable = { Root.available_CIC < cic_new_count }
			}
			subtract_from_temp_variable = { cic_new_count = Root.available_CIC }
			subtract_from_temp_variable = { cic_slot = cic_new_count }
			clear_variable = Root.available_CIC
		}
		else = {
			subtract_from_variable = { Root.available_CIC = cic_new_count }
		}
	}
	
	if = {
		limit = {
			check_variable = { Root.available_CIC < 0 }
		} 
		set_variable = { Root.available_CIC = 0 }
	}
	set_variable = { cic_assigned = cic_slot }
	meta_effect = {
		text = {
			set_state_flag = {
				flag = cic_ass
				value = [VALUE]
			}
		}
		VALUE = cic_assigned
	}
}

sort_construction_lines = {
    for_loop_effect = {
        start = 0
        end = construction_lines^num
        value = i
        set_variable = { ROOT.min_idx = i }
        var:construction_lines^i = { set_variable = { ROOT.min = position@ROOT } }
        set_temp_variable = { min_idx_plus_1 = i }
        add_to_temp_variable = { min_idx_plus_1 = 1 }
        for_loop_effect = {
            start = min_idx_plus_1
            end = construction_lines^num
            value = j
            if = {
                limit = { 
                    var:construction_lines^j = {
                        check_variable = { ROOT.min > position@ROOT } 
                    }
                }
                set_variable = { ROOT.min_idx = j }
            }
        }
        set_temp_variable = { swap = construction_lines^i }
        set_variable = { construction_lines^i = construction_lines^ROOT.min_idx }
        set_variable = { construction_lines^ROOT.min_idx = swap }
    }
    clear_variable = ROOT.min_idx
    clear_variable = ROOT.min
}
sort_states_INFRA = {
    for_loop_effect = {
        start = 0
        end = temp_states^num
        value = i
        set_variable = { ROOT.min_idx = i }
        var:temp_states^i = { set_variable = { ROOT.min = -1 } }
        set_temp_variable = { min_idx_plus_1 = i }
        add_to_temp_variable = { min_idx_plus_1 = 1 }
        for_loop_effect = {
            start = min_idx_plus_1
            end = temp_states^num
            value = j
            if = {
                limit = { 
                    var:temp_states^j = {
                        check_variable = { ROOT.min > building_level@infrastructure } 
                    }
                }
                var:temp_states^j = { set_variable = { ROOT.min = building_level@infrastructure } }
                set_variable = { ROOT.min_idx = j }
            }
        }
        set_temp_variable = { swap = temp_states^i }
        set_variable = { temp_states^i = temp_states^ROOT.min_idx }
        set_variable = { temp_states^ROOT.min_idx = swap }
    }
    clear_variable = ROOT.min_idx
    clear_variable = ROOT.min
}

@BASE_CIC_OUTPUT = 5

@CIC_COST = 8850
@MIC_COST = 8000
@INFRA_COST = 2500

@BUILD_SPEED_CORE = 0.0 #build speed if core
@BUILD_SPEED_NON_CORE = -0.15 #build speed if non core
@BUILD_SPEED_CLAIM_ON_NON_CORE = -0.1 #build speed if non core, but claimed
@BUILD_SPEED_OCCUPIED = -0.25 #build speed if occupied - maybe make it individual for each occupation policy
@BUILD_SPEED_RESISTANCE = -0.25 #build speed at 100% resistance
@BUILD_SPEED_INFRASTRUCTURE = 0.5 #build speed from max infrastructure

@CONSTRUCTION_SPEED_MAX_BASE = 1.0 #100% = full production
@CONSTRUCTION_SPEED_START_BASE = 0.1 #starts at 10%
@CONSTRUCTION_SPEED_GAIN_BASE = 0.01 #1% daily base

@BUILD_SPEED_REPEATED_CONSTRUCTION = 0.20 #max bonus from building the same building
@BUILD_SPEED_REPEATED_CONSTRUCTION_START = 3 #bonus starts after building this much 
@BUILD_SPEED_REPEATED_CONSTRUCTION_PER_BUILDING = 0.05 #bonus increase with each new building 

@BUILD_SPEED_PENALTY_TYPE_CHANGE = -0.50 #build speed after changing the type of building (like from CIC to MIC)

@CROWDED_STATE_MIN_SLOTS_USED = 0.75 #if 75% of building slots in a state are full the crowded state debuff starts
@CROWDED_STATE_MAX_DEBUFF = -0.30 #max debuff with all building slots filled

@SWITCH_STATE_DEBUFF = -0.8 #debuff after changing the state for a construction line

calculate_local_build_speed_modifier = {
	if = {
		limit = {
			NOT = { has_state_flag = set_up_construction_line }
		}
		set_state_flag = set_up_construction_line
		set_variable = { construction_speed = @CONSTRUCTION_SPEED_START_BASE }
	}
	set_variable = { construction_speed_max = @CONSTRUCTION_SPEED_MAX_BASE }
	set_variable = { construction_speed_gain = @CONSTRUCTION_SPEED_GAIN_BASE }
	if = {
		limit = {
			NOT = { is_core_of = ROOT }
			NOT = { is_claimed_by = ROOT }
		}
		set_temp_variable = { build_speed_non_core = @BUILD_SPEED_NON_CORE }
		set_temp_variable = { build_speed_non_core_mod = Root.modifier@production_speed_non_core_factor }
		add_to_temp_variable = { build_speed_non_core_mod = 1 }
		multiply_temp_variable = { build_speed_non_core = build_speed_non_core_mod }
		add_to_variable = { construction_speed_max = build_speed_non_core }
	}
	if = {
		limit = {
			NOT = { is_core_of = ROOT }
			is_claimed_by = ROOT 
		}
		set_temp_variable = { build_speed_non_core_claim = @BUILD_SPEED_CLAIM_ON_NON_CORE }
		set_temp_variable = { build_speed_non_core_claim_mod = Root.modifier@production_speed_non_core_claim_factor }
		add_to_temp_variable = { build_speed_non_core_claim_mod = 1 }
		multiply_temp_variable = { build_speed_non_core_claim = build_speed_non_core_claim_mod }
		add_to_variable = { construction_speed_max = build_speed_non_core_claim }
	}
	if = {
		limit = {
			NOT = { is_owned_by = ROOT }
		}
		set_temp_variable = { build_speed_occupied = @BUILD_SPEED_OCCUPIED }
		set_temp_variable = { build_speed_occupied_mod = Root.modifier@production_speed_occupied_factor }
		add_to_temp_variable = { build_speed_occupied_mod = 1 }
		multiply_temp_variable = { build_speed_occupied = build_speed_occupied_mod }
		add_to_variable = { construction_speed_max = build_speed_occupied }
	}
	
	set_temp_variable = { build_speed_resistance = @BUILD_SPEED_RESISTANCE }
	set_temp_variable = { build_speed_resistance_mod = modifier@production_speed_resistance_factor }
	add_to_temp_variable = { build_speed_resistance_mod = 1 }
	multiply_temp_variable = { build_speed_resistance = build_speed_resistance_mod }
	
	set_temp_variable = { build_speed_infrastructure = @BUILD_SPEED_INFRASTRUCTURE }
	divide_temp_variable = { build_speed_infrastructure = 10 }
	multiply_temp_variable = { build_speed_infrastructure = building_level@infrastructure }
	set_temp_variable = { build_speed_infrastructure_mod = Root.modifier@production_speed_local_infrastructure_factor }
	add_to_temp_variable = { build_speed_infrastructure_mod = 1 }
	multiply_temp_variable = { build_speed_infrastructure = build_speed_infrastructure_mod }
	add_to_variable = { construction_speed_max = build_speed_infrastructure }
	
	#COUNTRY
	set_temp_variable = { speed_modifier = Root.modifier@production_speed_buildings_factor }
		
	if = {
		limit = {
			has_state_flag = civilian_factory 
		}
		add_to_temp_variable = { speed_modifier = Root.modifier@production_speed_industrial_complex_factor }
	} 
	else_if = {
		limit = {
			has_state_flag = military_factory 
		}
		add_to_temp_variable = { speed_modifier = Root.modifier@production_speed_arms_factory_factor }
	}
	
	add_to_temp_variable = { speed_modifier = 1 }
}
update_construction_lines = {
	for_each_scope_loop = {
		array = Root.construction_lines
		
		calculate_local_build_speed_modifier = yes
		set_temp_variable = { daily_progress = @BASE_CIC_OUTPUT }
		multiply_temp_variable = { daily_progress = construction_speed }
		multiply_temp_variable = { daily_progress = cic_assigned }
		
		if = {
			limit = {
				check_variable = { construction_speed < construction_speed_max }
			}
			add_to_variable = { construction_speed = construction_speed_gain }
			#log = "Test test [?construction_speed_gain]"
		}
		else_if = {
			limit = {
				check_variable = { construction_speed > construction_speed_max }
			}
			set_variable = { construction_speed = construction_speed_max }
		}
			
		if = {
			limit = {
				check_variable = { construction_speed < @CONSTRUCTION_SPEED_START_BASE }
			}
			set_variable = { construction_speed = @CONSTRUCTION_SPEED_START_BASE }
		}	
		
		
		multiply_temp_variable = { daily_progress = speed_modifier }
		#EXPAND
		subtract_from_variable = { building_cost = daily_progress }
		add_to_variable = { building_progress = daily_progress }
		
		set_variable = { days_left = building_cost }
		divide_variable = { days_left = daily_progress }
		
		##########################
		###CONSTRUCTION FINISHED##
		##########################
		if = {
			limit = {
				check_variable = { building_cost < daily_progress }
			}
			#clear_variable = days_left
			clear_variable = building_cost
			clear_variable = construction_building_frame@ROOT
			clear_variable = cic_assigned
			
			subtract_from_variable = { Root.total_construction_lines = 1 }
			#log = "[?position@ROOT] Variable"
			if = {
				limit = {
					check_variable = { position@ROOT > 0 }
				}
				for_each_scope_loop = {
					array = Root.construction_lines
			
					#log = "[This.GetName]"
					if = {
						limit = {
							check_variable = { position@ROOT > Prev.position@ROOT }
						}
						subtract_from_variable = { Root.total_construction_lines = 1 }
						subtract_from_variable = { position@ROOT = 1 }
					}
				}
			}
			clear_variable = position@ROOT
			
			if = {
				limit = {
					has_state_flag = civilian_factory
				}
				clr_state_flag = civilian_factory
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				civilian_factory_on_built = yes
			}
			else_if = {
				limit = {
					has_state_flag = military_factory
				}
				clr_state_flag = military_factory
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
				arms_factory_on_built = yes
			}
			#EXPAND
			
			remove_from_array = { from.construction_lines = this }
			#ROOT = { sort_construction_lines = yes }
		}
	}
}

start_construction_line = {
	subtract_from_variable = { Root.CIC_available = 1 }
	meta_effect = {
		text = {
			set_state_flag = {
				flag = cic_ass
				value = [VALUE]
			}
		}
		VALUE = 1
	}
}

start_infrastructure = {
	set_variable = { construction_building_frame@ROOT = 1 }
	
	set_variable = { building_cost = @INFRA_COST }
	set_variable = { cic_assigned = 1 }
	set_state_flag = construction_line@ROOT
	
	add_to_variable = { Root.total_construction_lines = 1 }
	set_variable = { position@ROOT = Root.total_construction_lines }
	
	set_state_flag = infrastructure	
}	
infrastructure_on_built = {

}

start_civilian_factory = {
	set_variable = { construction_building_frame@ROOT = 8 }
	
	set_variable = { building_cost = @CIC_COST }
	set_variable = { cic_assigned = 1 }
	set_state_flag = construction_line@ROOT
	
	add_to_variable = { Root.total_construction_lines = 1 }
	set_variable = { position@ROOT = Root.total_construction_lines }
	
	set_state_flag = civilian_factory	
}	
civilian_factory_on_built = {

}
	
start_military_factory = {
	set_variable = { construction_building_frame@ROOT = 9 }
	
	set_variable = { building_cost = @CIC_COST }
	set_variable = { cic_assigned = 1 }
	set_state_flag = construction_line@ROOT
	
	add_to_variable = { Root.total_construction_lines = 1 }
	set_variable = { position@ROOT = Root.total_construction_lines }
	
	set_state_flag = military_factory	
}
arms_factory_on_built = {

}
	
clear_building_flags_and_var = {
	clr_state_flag = construction_line@ROOT
	clr_state_flag = cic_ass
	
	clear_variable = construction_building_frame@ROOT
	clear_variable = building_cost
	clear_variable = cic_assigned
	clear_variable = position@ROOT
	clear_variable = construction_speed_max
	clear_variable = construction_speed_gain
	clear_variable = construction_speed
	clear_variable = building_progress
	clear_variable = days_left

	clr_state_flag = civilian_factory
	clr_state_flag = military_factory
	clr_state_flag = infrastructure
	#clr_state_flag = 
}
		
change_target_state = {
	Root.var:state = {
		PREV = { 
			set_variable = { position@ROOT = Prev.position@ROOT }
			set_variable = { cic_assigned = Prev.cic_assigned }
			set_variable = { cic_ass = Prev.cic_ass }
			set_variable = { construction_building_frame@ROOT = Prev.construction_building_frame@ROOT }
			set_variable = { building_cost = Prev.building_cost }
			set_variable = { building_progress = Prev.building_progress }
			set_variable = { construction_speed = Prev.construction_speed }
			set_variable = { construction_speed_gain = Prev.construction_speed_gain }
			set_variable = { construction_speed_max = Prev.construction_speed_max }
			set_variable = { days_left = Prev.days_left }
			
			set_state_flag = construction_line@ROOT
			meta_effect = {
				text = {
					set_state_flag = {
						flag = cic_ass
						value = [VALUE]
					}
				}
				VALUE = cic_assigned
			}
			
			if = {
				limit = {
					Root.var:state = { has_state_flag = civilian_factory }
				}
				set_state_flag = civilian_factory
			}
			
			add_to_array = { from.construction_lines = this }
		}
		remove_from_array = { from.construction_lines = this }
		clear_building_flags_and_var = yes
		ROOT = { sort_construction_lines = yes }
	}
}
		
	
@MOUNTAINEER_SF = 1  
@GURKHA_SF = 1  
@MARINE_SF = 2
@PARATROOPER_SF = 3
@COMMANDO_SF = 5
@MOUNT_SUPPORT_SF = 1
@AMPH_SUPPORT_SF = 1
@PARA_SUPPORT_SF = 3

@OVER_CAP_DEBUFF_WEIGHT = 0.02 #each battalion over capacity adds that much to the debuff
@OVER_CAP_MAX_DEBUFF = 0.5 #max debuff 
@OVER_CAP_TRAINING_TIME_FACTOR = 1.0
	
set_special_forces_cap = {
	if = {
		limit = {
			NOT = { has_idea = special_cap }
		}
		add_ideas = special_cap
	}
	if = {
		limit = {
			NOT = { has_idea = special_base }
		}
		add_ideas = special_base
	}
	if = {
		limit = {
			NOT = { 
				has_dynamic_modifier = {
					modifier = special_forces_cap
				}
			}
		}
		add_dynamic_modifier = {
			modifier = special_forces_cap
		}
	}
	
	count_special_battalions = yes 
	
	set_temp_variable = { num_batts = army_strength }
	
	set_temp_variable = { temp_num_mountaineer = num_battalions_with_type@mountaineer }
	set_temp_variable = { mountaineer_weight = @MOUNTAINEER_WEIGHT } 
	multiply_temp_variable = { temp_num_mountaineer = mountaineer_weight }
	#subtract_from_temp_variable = { num_batts = temp_num_mountaineer }
	
	set_temp_variable = { temp_num_marine = num_battalions_with_type@marine }
	set_temp_variable = { marine_weight = @MARINE_WEIGHT } 
	multiply_temp_variable = { temp_num_marine = marine_weight }
	#subtract_from_temp_variable = { num_batts = temp_num_marine }
	
	set_temp_variable = { temp_num_paratrooper = num_battalions_with_type@paratrooper }
	set_temp_variable = { paratrooper_weight = @MARINE_WEIGHT } 
	multiply_temp_variable = { temp_num_paratrooper = paratrooper_weight }
	#subtract_from_temp_variable = { num_batts = temp_num_paratrooper }
	
	set_variable = { special_forces_factor = modifier@special_forces_cap }
	add_to_variable = { special_forces_factor = 1 }
	
	multiply_temp_variable = { num_batts = special_forces_factor }
	
	set_temp_variable = { special_forces_min = modifier@special_forces_min }
	subtract_from_temp_variable = { special_forces_min = special_forces_cap }
	set_variable = { special_forces_min_TT = special_forces_min }
	
	if = {
		limit = {
			check_variable = { special_forces_min > num_batts }
		}
		set_temp_variable = { num_batts = special_forces_min }
	}
	
	set_variable = { special_forces_cap = num_batts }
	add_to_variable = { special_forces_cap = 10000 } #always enough space
	set_variable = { special_forces_cap_TT = num_batts }
	round_variable = special_forces_cap_TT
	
	clear_variable = num_specialised_over_limit
	clear_variable = special_forces_training_debuff
	if = {
		limit = {
			check_variable = { num_specialised > special_forces_cap_TT }
		}
	
		set_variable = { num_specialised_over_limit = num_specialised }
		subtract_from_variable = { num_specialised_over_limit = special_forces_cap_TT }
		multiply_variable = { num_specialised_over_limit = @OVER_CAP_DEBUFF_WEIGHT }
		if = {
			limit = {
				check_variable = { num_specialised_over_limit > @OVER_CAP_MAX_DEBUFF }
			}
			set_variable = { num_specialised_over_limit = @OVER_CAP_MAX_DEBUFF }
		}
		multiply_variable = { num_specialised_over_limit = -1 }
		set_variable = { special_forces_training_debuff = @OVER_CAP_TRAINING_TIME_FACTOR }
		
	}
} 

count_special_battalions = {
	clear_variable = num_specialised
	set_temp_variable = { temp = num_battalions_with_type@mountaineers }
	
	set_temp_variable = { weight = @MOUNTAINEER_SF }
	if = {
		limit = {
			OR = {
				has_idea = mountainous_country
				has_idea = TIB_mountainous_people
			}
		}
		subtract_from_temp_variable = { weight = 0.5 }
	}	
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	set_temp_variable = { temp = num_battalions_with_type@gurkha }
	
	set_temp_variable = { weight = @GURKHA_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	set_temp_variable = { temp = num_battalions_with_type@marine }
	
	set_temp_variable = { weight = @MARINE_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	set_temp_variable = { temp = num_battalions_with_type@amphibious_mechanized }
	
	set_temp_variable = { weight = @MARINE_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	set_temp_variable = { temp = num_battalions_with_type@american_amph_lv }
	
	set_temp_variable = { weight = @MARINE_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	
	set_temp_variable = { temp = num_battalions_with_type@paratrooper }
	
	set_temp_variable = { weight = @PARATROOPER_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	
	set_temp_variable = { temp = num_battalions_with_type@commando }
	
	set_temp_variable = { weight = @COMMANDO_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	
	set_temp_variable = { temp = num_battalions_with_type@mount_support }
	
	set_temp_variable = { weight = @MOUNT_SUPPORT_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	
	set_temp_variable = { temp = num_battalions_with_type@amph_support }
	
	set_temp_variable = { weight = @AMPH_SUPPORT_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	
	set_temp_variable = { temp = num_battalions_with_type@para_support }
	
	set_temp_variable = { weight = @PARA_SUPPORT_SF }
	multiply_temp_variable = { temp = weight }
	add_to_variable = { num_specialised = temp }
	
	if = {
		limit = {
			check_variable = { num_specialised = 0 } 
		}
		clear_variable = num_specialised
	}
}

state_recruitment_effect = {
	#for_each_scope_loop = {
	#	array = Root.state_recruitment 
	#	
	#	var:v = {
	#		subtract_from_variable = { recruitment_time = 1 }
	#	}
	#}
	
	every_owned_state = {
		limit = {
			has_variable = state_recruitment^0
		}
		subtract_from_variable = { recruitment_time = 100 }
		
		if = {
			limit = {
				check_variable = { recruitment_time < 1 }
			}
			clear_variable = recruitment_time
			
			 
			if = {
				limit = {
					has_state_flag = { flag = recruitment_type value = 1 }
				}
				add_to_variable = { state_militia = 1 }
			}
			else_if = {
				limit = {
					has_state_flag = { flag = recruitment_type value = 2 }
				}
				add_to_variable = { state_garrison = 1 }
			}
			else_if = {
				limit = {
					has_state_flag = { flag = recruitment_type value = 3 }
				}
				add_to_variable = { state_cavalry = 1 }
			}
			else_if = {
				limit = {
					has_state_flag = { flag = recruitment_type value = 4 }
				}
				add_to_variable = { state_light_infantry = 1 }
			}
			else_if = {
				limit = {
					has_state_flag = { flag = recruitment_type value = 5 }
				}
				add_to_variable = { state_infantry = 1 }
			}
			clr_state_flag = recruitment_type
			
			random_state = {
				limit = {
					state = var:Prev.state_recruitment^0
				}
				meta_effect = { 
					text = {
						clr_state_flag = militia_[STATE_NAME]_[ROOT]
						clr_state_flag = garrison_[STATE_NAME]_[ROOT]
						clr_state_flag = cavalry_[STATE_NAME]_[ROOT]
						clr_state_flag = light_infantry_[STATE_NAME]_[ROOT]
						clr_state_flag = infantry_[STATE_NAME]_[ROOT]
					}
					ROOT = "[Root.GetTag]"
					STATE_NAME = "[Prev.GetName]"
				}
			}
			
			if = {
				limit = {
					NOT = {
						has_variable = state_recruitment^1
					}
				}
				clear_variable = num_recruitment
				clear_array = state_recruitment
			}
			remove_from_array = { state_recruitment = state_recruitment^0 }
			
			var:state_recruitment^0 = {
				
				if = {
					limit = {
						meta_trigger = {
							text = {
								has_state_flag = militia_[STATE_NAME]_[ROOT]
							}
							ROOT = "[Root.GetTag]"
							STATE_NAME = "[Prev.GetName]"
						}
					}
					PREV = { 
						set_variable = { recruitment_time = 120 } 
						set_state_flag = { flag = recruitment_type value = 1 }
					}
				}
				if = {
					limit = {
						meta_trigger = {
							text = {
								has_state_flag = garrison_[STATE_NAME]_[ROOT]
							}
							ROOT = "[Root.GetTag]"
							STATE_NAME = "[Prev.GetName]"
						}
					}
					PREV = { 
						set_variable = { recruitment_time = 90 } 
						set_state_flag = { flag = recruitment_type value = 2 }
					}
				}
				if = {
					limit = {
						meta_trigger = {
							text = {
								has_state_flag = cavalry_[STATE_NAME]_[ROOT]
							}
							ROOT = "[Root.GetTag]"
							STATE_NAME = "[Prev.GetName]"
						}
					}
					PREV = { 
						set_variable = { recruitment_time = 90 } 
						set_state_flag = { flag = recruitment_type value = 3 }
					}
				}
				if = {
					limit = {
						meta_trigger = {
							text = {
								has_state_flag = light_infantry_[STATE_NAME]_[ROOT]
							}
							ROOT = "[Root.GetTag]"
							STATE_NAME = "[Prev.GetName]"
						}
					}
					PREV = { 
						set_variable = { recruitment_time = 90 } 
						set_state_flag = { flag = recruitment_type value = 4 }
					}
				}
				if = {
					limit = {
						meta_trigger = {
							text = {
								has_state_flag = infantry_[STATE_NAME]_[ROOT]
							}
							ROOT = "[Root.GetTag]"
							STATE_NAME = "[Prev.GetName]"
						}
					}
					PREV = { 
						set_variable = { recruitment_time = 90 } 
						set_state_flag = { flag = recruitment_type value = 5 }
					}
				}
			}
					
		}
	}
}
set_state_strength = {
	 
}
set_state_garrison_manpower = {
	set_temp_variable = { temp = template_size }
	add_to_temp_variable = { temp = 5 }
	set_variable = { num_battalions = temp }
	
	if = { limit = { check_variable = { state_militia > 0 } }
		set_temp_variable = { temp2 = state_militia } #num of divisions
		multiply_temp_variable = { temp2 = temp } #num of battalions
		
		multiply_temp_variable = { temp2 = 1000 }
		add_to_variable = { state_garrison_manpower = temp2 }
	}
	if = { limit = { check_variable = { state_garrison > 0 } }
		set_temp_variable = { temp2 = state_garrison } #num of divisions
		multiply_temp_variable = { temp2 = temp } #num of battalions
		
		multiply_temp_variable = { temp2 = 1000 }
		add_to_variable = { state_garrison_manpower = temp2 }
	}
	if = { limit = { check_variable = { state_cavalry > 0 } }
		set_temp_variable = { temp2 = state_cavalry } #num of divisions
		multiply_temp_variable = { temp2 = temp } #num of battalions
		
		multiply_temp_variable = { temp2 = 1100 }
		add_to_variable = { state_garrison_manpower = temp2 }
	}
	if = { limit = { check_variable = { state_light_infantry > 0 } }
		set_temp_variable = { temp2 = state_light_infantry } #num of divisions
		multiply_temp_variable = { temp2 = temp } #num of battalions
		
		multiply_temp_variable = { temp2 = 1000 }
		add_to_variable = { state_garrison_manpower = temp2 }
	}
	if = { limit = { check_variable = { state_infantry > 0 } }
		set_temp_variable = { temp2 = state_infantry } #num of divisions
		multiply_temp_variable = { temp2 = temp } #num of battalions
		
		multiply_temp_variable = { temp2 = 1250 }
		add_to_variable = { state_garrison_manpower = temp2 }
	}
	
	set_state_category_variables = yes
	set_temp_variable = { max_manpower_temp = 0 }
	
	set_temp_variable = { state_category = state_category_lvl }
	multiply_temp_variable = { state_category = 1250 }
	add_to_temp_variable = { max_manpower_temp = state_category }
	
	set_temp_variable = { building = state_category_lvl }
	multiply_temp_variable = { state_category = 1250 }
	add_to_temp_variable = { max_manpower_temp = state_category }
}

state_force_deploy_effect = {
	if = { 
		limit = {
			check_variable = { state_garrison > 0 }
			meta_trigger = {
				text = {
					NOT = { ROOT = { has_template = "[NAME] Garrison" } }
				}
				NAME = "[Prev.GetName]"
			}
		}
		ROOT = {
			meta_effect = {
				text = {
					set_state_garrison_garrison_template_[X] = yes
				}
				X = modifier
			}
		}
	}
	if = { 
		limit = {
			check_variable = { state_militia > 0 }
			meta_trigger = {
				text = {
					NOT = { ROOT = { has_template = "[NAME] Militia" } }
				}
				NAME = "[Prev.GetName]"
			}
		}
		ROOT = {
			meta_effect = {
				text = {
					set_state_garrison_militia_template_[X] = yes
				}
				X = modifier
			}
		}
	}
	if = { 
		limit = {
			check_variable = { state_cavalry > 0 }
			meta_trigger = {
				text = {
					NOT = { ROOT = { has_template = "[NAME] Cavalry" } }
				}
				NAME = "[Prev.GetName]"
			}
		}
		ROOT = {
			meta_effect = {
				text = {
					set_state_garrison_cavalry_template_[X] = yes
				}
				X = modifier
			}
		}
	}
	if = { 
		limit = {
			check_variable = { state_light_infantry > 0 }
			meta_trigger = {
				text = {
					NOT = { ROOT = { has_template = "[NAME] Light Infantry" } }
				}
				NAME = "[Prev.GetName]"
			}
		}
		ROOT = {
			meta_effect = {
				text = {
					set_state_garrison_light_infantry_template_[X] = yes
				}
				X = modifier
			}
		}
	}
	if = { 
		limit = {
			check_variable = { state_infantry > 0 }
			meta_trigger = {
				text = {
					NOT = { ROOT = { has_template = "[NAME] Infantry" } }
				}
				NAME = "[Prev.GetName]"
			}
		}
		ROOT = {
			meta_effect = {
				text = {
					set_state_garrison_infantry_template_[X] = yes
				}
				X = modifier
			}
		}
	}
	set_temp_variable = { temp_1 = state_garrison }
	set_temp_variable = { temp_2 = state_militia }
	set_temp_variable = { temp_3 = state_cavalry }
	set_temp_variable = { temp_4 = state_light_infantry }
	set_temp_variable = { temp_5 = state_infantry }
	if = { 
		limit = {
			meta_trigger = {
				text = {
					ROOT = { has_template = "[NAME] Garrison" }
				}
				NAME = "[Prev.GetName]"
			}
		}
		while_loop_effect = {
			limit = { check_variable = { temp_1 > 0 } }
			
			subtract_from_temp_variable = { temp_1 = 1 }
			meta_effect = {
				text = {
					create_unit = {
						division = "name = \"[NAME] Garrison\" division_template = \"[NAME] Garrison\" start_experience_factor = 0.5 start_equipment_factor = 0.5"
						owner = GER
					}
				}
				NAME = "[This.GetName]"
			}
		}
	}
	if = { 
		limit = {
			meta_trigger = {
				text = {
					ROOT = { has_template = "[NAME] Militia" }
				}
				NAME = "[Prev.GetName]"
			}
		}
		while_loop_effect = {
			limit = { check_variable = { temp_2 > 0 } }
			
			subtract_from_temp_variable = { temp_2 = 1 }
			meta_effect = {
				text = {
					create_unit = {
						division = "name = \"[NAME] Militia\" division_template = \"[NAME] Militia\" start_experience_factor = 0.5 start_equipment_factor = 0.5"
						owner = GER
					}
				}
				NAME = "[This.GetName]"
			}
		}
	}
	if = { 
		limit = {
			meta_trigger = {
				text = {
					ROOT = { has_template = "[NAME] Cavalry" }
				}
				NAME = "[Prev.GetName]"
			}
		}
		while_loop_effect = {
			limit = { check_variable = { temp_3 > 0 } }
			
			subtract_from_temp_variable = { temp_3 = 1 }
			meta_effect = {
				text = {
					create_unit = {
						division = "name = \"[NAME] Cavalry\" division_template = \"[NAME] Cavalry\" start_experience_factor = 0.5 start_equipment_factor = 0.5"
						owner = GER
					}
				}
				NAME = "[This.GetName]"
			}
		}
	}
	if = { 
		limit = {
			meta_trigger = {
				text = {
					ROOT = { has_template = "[NAME] Light Infantry" }
				}
				NAME = "[Prev.GetName]"
			}
		}
		while_loop_effect = {
			limit = { check_variable = { temp_4 > 0 } }
			
			subtract_from_temp_variable = { temp_4 = 1 }
			meta_effect = {
				text = {
					create_unit = {
						division = "name = \"[NAME] Light Infantry\" division_template = \"[NAME] Light Infantry\" start_experience_factor = 0.5 start_equipment_factor = 0.5"
						owner = GER
					}
				}
				NAME = "[This.GetName]"
			}
		}
	}
	if = { 
		limit = {
			meta_trigger = {
				text = {
					ROOT = { has_template = "[NAME] Infantry" }
				}
				NAME = "[Prev.GetName]"
			}
		}
		while_loop_effect = {
			limit = { check_variable = { temp_5 > 0 } }
			
			subtract_from_temp_variable = { temp_5 = 1 }
			meta_effect = {
				text = {
					create_unit = {
						division = "name = \"[NAME] Infantry\" division_template = \"[NAME] Infantry\" start_experience_factor = 0.5 start_equipment_factor = 0.5"
						owner = GER
					}
				}
				NAME = "[This.GetName]"
			}
		}
	}
}
set_state_template_sizes = {
	set_variable = { modifier = Root.modifier@production_speed_template_size_factor }
	if = {
		limit = {
			check_variable = { modifier > 0.9 }
		}
		set_variable = { template_size = 10 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0.8 }
		}
		set_variable = { template_size = 9 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0.7 }
		}
		set_variable = { template_size = 8 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0.6 }
		}
		set_variable = { template_size = 7 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0.5 }
		}
		set_variable = { template_size = 6 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0.4 }
		}
		set_variable = { template_size = 5 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0.3 }
		}
		set_variable = { template_size = 4 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0.2 }
		}
		set_variable = { template_size = 3 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0.1 }
		}
		set_variable = { template_size = 2 }
	}
	else_if = {
		limit = {
			check_variable = { modifier > 0 }
		}
		set_variable = { template_size = 1 }
	}
	else_if = {
		limit = {
			check_variable = { modifier < 0.001 }
		}
		set_variable = { template_size = 0 }
	}
}

close_state_garrison_container = {
	clr_state_flag = stategarrisonview
	
	clear_variable = state_garrison_manpower
	clear_variable = num_battalions
	clear_variable = modifier
}
open_state_garrison_container = {
	set_state_flag = stategarrisonview
	
	set_state_template_sizes = yes
	set_state_garrison_manpower = yes
}

set_state_garrison_militia_template_0 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}	
set_state_garrison_militia_template_1 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 0 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_2 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_3 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_4 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
					militia = { x = 1 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_5 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
					militia = { x = 1 y = 3 }
					militia = { x = 1 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_6 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
					militia = { x = 1 y = 3 }
					militia = { x = 1 y = 4 }
					
					militia = { x = 2 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_7 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
					militia = { x = 1 y = 3 }
					militia = { x = 1 y = 4 }
					
					militia = { x = 2 y = 0 }
					militia = { x = 2 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_8 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
					militia = { x = 1 y = 3 }
					militia = { x = 1 y = 4 }
					
					militia = { x = 2 y = 0 }
					militia = { x = 2 y = 1 }
					militia = { x = 2 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_9 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
					militia = { x = 1 y = 3 }
					militia = { x = 1 y = 4 }
					
					militia = { x = 2 y = 0 }
					militia = { x = 2 y = 1 }
					militia = { x = 2 y = 2 }
					militia = { x = 2 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_militia_template_10 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Militia"
				regiments = {
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 0 y = 2 }
					militia = { x = 0 y = 3 }
					militia = { x = 0 y = 4 }
					
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 1 y = 2 }
					militia = { x = 1 y = 3 }
					militia = { x = 1 y = 4 }
					
					militia = { x = 2 y = 0 }
					militia = { x = 2 y = 1 }
					militia = { x = 2 y = 2 }
					militia = { x = 2 y = 3 }
					militia = { x = 2 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Militia"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
		

set_state_garrison_garrison_template_0 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}	
set_state_garrison_garrison_template_1 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 0 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_2 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_3 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 1 y = 0 }
					garrison = { x = 1 y = 1 }
					garrison = { x = 1 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_4 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 1 y = 0 }
					garrison = { x = 1 y = 1 }
					garrison = { x = 1 y = 2 }
					garrison = { x = 1 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_5 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 1 y = 0 }
					garrison = { x = 1 y = 1 }
					garrison = { x = 1 y = 2 }
					garrison = { x = 1 y = 3 }
					garrison = { x = 1 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_6 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 1 y = 0 }
					garrison = { x = 1 y = 1 }
					garrison = { x = 1 y = 2 }
					garrison = { x = 1 y = 3 }
					garrison = { x = 1 y = 4 }
					
					garrison = { x = 2 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_7 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 1 y = 0 }
					garrison = { x = 1 y = 1 }
					garrison = { x = 1 y = 2 }
					garrison = { x = 1 y = 3 }
					garrison = { x = 1 y = 4 }
					
					garrison = { x = 2 y = 0 }
					garrison = { x = 2 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_8 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 1 y = 0 }
					garrison = { x = 1 y = 1 }
					garrison = { x = 1 y = 2 }
					garrison = { x = 1 y = 3 }
					garrison = { x = 1 y = 4 }
					
					garrison = { x = 2 y = 0 }
					garrison = { x = 2 y = 1 }
					garrison = { x = 2 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_9 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 1 y = 0 }
					garrison = { x = 1 y = 1 }
					garrison = { x = 1 y = 2 }
					garrison = { x = 1 y = 3 }
					garrison = { x = 1 y = 4 }
					
					garrison = { x = 2 y = 0 }
					garrison = { x = 2 y = 1 }
					garrison = { x = 2 y = 2 }
					garrison = { x = 2 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_garrison_template_10 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Garrison"
				regiments = {
					garrison = { x = 0 y = 0 }
					garrison = { x = 0 y = 1 }
					garrison = { x = 0 y = 2 }
					garrison = { x = 0 y = 3 }
					garrison = { x = 0 y = 4 }
					
					garrison = { x = 1 y = 0 }
					garrison = { x = 1 y = 1 }
					garrison = { x = 1 y = 2 }
					garrison = { x = 1 y = 3 }
					garrison = { x = 1 y = 4 }
					
					garrison = { x = 2 y = 0 }
					garrison = { x = 2 y = 1 }
					garrison = { x = 2 y = 2 }
					garrison = { x = 2 y = 3 }
					garrison = { x = 2 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Garrison"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}


set_state_garrison_light_infantry_template_0 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}	
set_state_garrison_light_infantry_template_1 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 0 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_2 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_3 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 1 y = 0 }
					light_infantry = { x = 1 y = 1 }
					light_infantry = { x = 1 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_4 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 1 y = 0 }
					light_infantry = { x = 1 y = 1 }
					light_infantry = { x = 1 y = 2 }
					light_infantry = { x = 1 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_5 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 1 y = 0 }
					light_infantry = { x = 1 y = 1 }
					light_infantry = { x = 1 y = 2 }
					light_infantry = { x = 1 y = 3 }
					light_infantry = { x = 1 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_6 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 1 y = 0 }
					light_infantry = { x = 1 y = 1 }
					light_infantry = { x = 1 y = 2 }
					light_infantry = { x = 1 y = 3 }
					light_infantry = { x = 1 y = 4 }
					
					light_infantry = { x = 2 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_7 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 1 y = 0 }
					light_infantry = { x = 1 y = 1 }
					light_infantry = { x = 1 y = 2 }
					light_infantry = { x = 1 y = 3 }
					light_infantry = { x = 1 y = 4 }
					
					light_infantry = { x = 2 y = 0 }
					light_infantry = { x = 2 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_8 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 1 y = 0 }
					light_infantry = { x = 1 y = 1 }
					light_infantry = { x = 1 y = 2 }
					light_infantry = { x = 1 y = 3 }
					light_infantry = { x = 1 y = 4 }
					
					light_infantry = { x = 2 y = 0 }
					light_infantry = { x = 2 y = 1 }
					light_infantry = { x = 2 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_9 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 1 y = 0 }
					light_infantry = { x = 1 y = 1 }
					light_infantry = { x = 1 y = 2 }
					light_infantry = { x = 1 y = 3 }
					light_infantry = { x = 1 y = 4 }
					
					light_infantry = { x = 2 y = 0 }
					light_infantry = { x = 2 y = 1 }
					light_infantry = { x = 2 y = 2 }
					light_infantry = { x = 2 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_light_infantry_template_10 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Light Infantry"
				regiments = {
					light_infantry = { x = 0 y = 0 }
					light_infantry = { x = 0 y = 1 }
					light_infantry = { x = 0 y = 2 }
					light_infantry = { x = 0 y = 3 }
					light_infantry = { x = 0 y = 4 }
					
					light_infantry = { x = 1 y = 0 }
					light_infantry = { x = 1 y = 1 }
					light_infantry = { x = 1 y = 2 }
					light_infantry = { x = 1 y = 3 }
					light_infantry = { x = 1 y = 4 }
					
					light_infantry = { x = 2 y = 0 }
					light_infantry = { x = 2 y = 1 }
					light_infantry = { x = 2 y = 2 }
					light_infantry = { x = 2 y = 3 }
					light_infantry = { x = 2 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Light Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}


set_state_garrison_infantry_template_0 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}	
set_state_garrison_infantry_template_1 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 0 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_2 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_3 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_4 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 1 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_5 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 1 y = 3 }
					infantry = { x = 1 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_6 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 1 y = 3 }
					infantry = { x = 1 y = 4 }
					
					infantry = { x = 2 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_7 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 1 y = 3 }
					infantry = { x = 1 y = 4 }
					
					infantry = { x = 2 y = 0 }
					infantry = { x = 2 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_8 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 1 y = 3 }
					infantry = { x = 1 y = 4 }
					
					infantry = { x = 2 y = 0 }
					infantry = { x = 2 y = 1 }
					infantry = { x = 2 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_9 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 1 y = 3 }
					infantry = { x = 1 y = 4 }
					
					infantry = { x = 2 y = 0 }
					infantry = { x = 2 y = 1 }
					infantry = { x = 2 y = 2 }
					infantry = { x = 2 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_infantry_template_10 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Infantry"
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
					
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 1 y = 3 }
					infantry = { x = 1 y = 4 }
					
					infantry = { x = 2 y = 0 }
					infantry = { x = 2 y = 1 }
					infantry = { x = 2 y = 2 }
					infantry = { x = 2 y = 3 }
					infantry = { x = 2 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Infantry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}


set_state_garrison_cavalry_template_0 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}	
set_state_garrison_cavalry_template_1 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 0 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_2 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_3 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_4 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
					cavalry = { x = 1 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_5 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
					cavalry = { x = 1 y = 3 }
					cavalry = { x = 1 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_6 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
					cavalry = { x = 1 y = 3 }
					cavalry = { x = 1 y = 4 }
					
					cavalry = { x = 2 y = 0 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_7 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
					cavalry = { x = 1 y = 3 }
					cavalry = { x = 1 y = 4 }
					
					cavalry = { x = 2 y = 0 }
					cavalry = { x = 2 y = 1 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_8 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
					cavalry = { x = 1 y = 3 }
					cavalry = { x = 1 y = 4 }
					
					cavalry = { x = 2 y = 0 }
					cavalry = { x = 2 y = 1 }
					cavalry = { x = 2 y = 2 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_9 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
					cavalry = { x = 1 y = 3 }
					cavalry = { x = 1 y = 4 }
					
					cavalry = { x = 2 y = 0 }
					cavalry = { x = 2 y = 1 }
					cavalry = { x = 2 y = 2 }
					cavalry = { x = 2 y = 3 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}
set_state_garrison_cavalry_template_10 = {
	meta_effect = {
		text = {
			division_template = {
				name = "[NAME] Cavalry"
				regiments = {
					cavalry = { x = 0 y = 0 }
					cavalry = { x = 0 y = 1 }
					cavalry = { x = 0 y = 2 }
					cavalry = { x = 0 y = 3 }
					cavalry = { x = 0 y = 4 }
					
					cavalry = { x = 1 y = 0 }
					cavalry = { x = 1 y = 1 }
					cavalry = { x = 1 y = 2 }
					cavalry = { x = 1 y = 3 }
					cavalry = { x = 1 y = 4 }
					
					cavalry = { x = 2 y = 0 }
					cavalry = { x = 2 y = 1 }
					cavalry = { x = 2 y = 2 }
					cavalry = { x = 2 y = 3 }
					cavalry = { x = 2 y = 4 }
				}
				support = { 
					DIV_HQ = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
				} 
			}
			set_division_template_lock = {
				division_template = "[NAME] Cavalry"
				is_locked = yes
			}
		}
		NAME = "[Prev.GetName]"
	}
}

########################
##### ARMY STRENGTH ####
########################
@INFANTRY_WEIGHT = 1	
@LIGHT_INFANTRY_WEIGHT = 0.75
@GARRISON_WEIGHT = 0.5
@MILITIA_WEIGHT = 0.5
@LT_ARTILLERY_WEIGHT = 1	
@MED_ARTILLERY_WEIGHT = 1.5	
@HV_ARTILLERY_WEIGHT = 2		
@ANTI_TANK_WEIGHT = 1
@HV_ANTI_TANK_WEIGHT = 2	
@ANTI_AIR_WEIGHT = 1
@HV_ANTI_AIR_WEIGHT = 2
@MOUNTAINEER_WEIGHT = 3
@MARINE_WEIGHT = 3
@PARATROOPER_WEIGHT = 3	
@CAVALRY_WEIGHT = 1	
@SEMI_MOTORIZED_WEIGHT = 1.5	
@MOTORIZED_WEIGHT = 2
@MECHANIZED_WEIGHT = 3	
@LT_ARMOR_WEIGHT = 3
@MED_ARMOR_WEIGHT = 4
@HV_ARMOR_WEIGHT = 5
@HQ_WEIGHT = 1
@SUPPORT_WEIGHT = 0.25

@ARMY_STRENGTH_1_TRIGGER = 200 
@ARMY_STRENGTH_2_TRIGGER = 400 
@ARMY_STRENGTH_3_TRIGGER = 600 
@ARMY_STRENGTH_4_TRIGGER = 800 
@ARMY_STRENGTH_5_TRIGGER = 1000 
@ARMY_STRENGTH_6_TRIGGER = 1200 
@ARMY_STRENGTH_7_TRIGGER = 1400 
@ARMY_STRENGTH_8_TRIGGER = 1600 
@ARMY_STRENGTH_9_TRIGGER = 1800 
@ARMY_STRENGTH_10_TRIGGER = 2000 

@OFF_ARMY_STRENGTH_1_TRIGGER = 200 
@OFF_ARMY_STRENGTH_2_TRIGGER = 400 
@OFF_ARMY_STRENGTH_3_TRIGGER = 600 
@OFF_ARMY_STRENGTH_4_TRIGGER = 800 
@OFF_ARMY_STRENGTH_5_TRIGGER = 1000 
@OFF_ARMY_STRENGTH_6_TRIGGER = 1200 
@OFF_ARMY_STRENGTH_7_TRIGGER = 1400 
@OFF_ARMY_STRENGTH_8_TRIGGER = 1600 
@OFF_ARMY_STRENGTH_9_TRIGGER = 1800 
@OFF_ARMY_STRENGTH_10_TRIGGER = 2000 

@HQ_STRENGTH_1_TRIGGER = 200 
@HQ_STRENGTH_2_TRIGGER = 400 
@HQ_STRENGTH_3_TRIGGER = 600 
@HQ_STRENGTH_4_TRIGGER = 800 
@HQ_STRENGTH_5_TRIGGER = 1000 
@HQ_STRENGTH_6_TRIGGER = 1200 
@HQ_STRENGTH_7_TRIGGER = 1400 
@HQ_STRENGTH_8_TRIGGER = 1600 
@HQ_STRENGTH_9_TRIGGER = 1800 
@HQ_STRENGTH_10_TRIGGER = 2000 

########################
##### NAVY STRENGTH ####
########################

@BATTLESHIP_WEIGHT = 8
@BATTLECRUISER_WEIGHT = 8
@POCKET_BATTLESHIP_WEIGHT = 4
@CARRIER_CARRIER_WEIGHT = 7
@ARMORED_CARRIER_WEIGHT = 7
@LIGHT_CARRIER_WEIGHT = 4
@HEAVY_CRUISER_WEIGHT = 4
@LIGHT_CRUISER_WEIGHT = 3
@DESTROYER_WEIGHT = 1.25
@SUBMARINE_WEIGHT = 0.6
@LONG_RANGE_SUBMARINE_WEIGHT = 0.75
@COASTAL_SUBMARINE_WEIGHT = 0.4

@SMALL_NAVY_TRIGGER = 75
@NORMAL_NAVY_TRIGGER = 200
@LARGE_NAVY_TRIGGER = 350
@HUGE_NAVY_TRIGGER = 500

check_army_strength = {
	
	clear_variable = army_strength 
		
	set_temp_variable = { temp_num_infantry = num_battalions_with_type@infantry }
	set_temp_variable = { infantry_weight = @INFANTRY_WEIGHT } 
	multiply_temp_variable = { temp_num_infantry = infantry_weight }
	add_to_variable = { army_strength = temp_num_infantry }
	
	set_temp_variable = { temp_num_light_infantry = num_battalions_with_type@light_infantry }
	set_temp_variable = { light_infantry_weight = @LIGHT_INFANTRY_WEIGHT } 
	multiply_temp_variable = { temp_num_light_infantry = light_infantry_weight }
	add_to_variable = { army_strength = temp_num_light_infantry }
	
	set_temp_variable = { temp_num_garrison = num_battalions_with_type@garrison }
	set_temp_variable = { garrison_weight = @GARRISON_WEIGHT } 
	multiply_temp_variable = { temp_num_garrison = garrison_weight }
	add_to_variable = { army_strength = temp_num_garrison }
	
	set_temp_variable = { temp_num_militia = num_battalions_with_type@militia }
	set_temp_variable = { militia_weight = @MILITIA_WEIGHT } 
	multiply_temp_variable = { temp_num_militia = militia_weight }
	add_to_variable = { army_strength = temp_num_militia }
	
	set_temp_variable = { temp_num_light_artillery = num_battalions_with_type@artillery_brigade }
	set_temp_variable = { light_artillery_weight = @LT_ARTILLERY_WEIGHT } 
	multiply_temp_variable = { temp_num_light_artillery = light_artillery_weight }
	add_to_variable = { army_strength = temp_num_light_artillery }
	
	set_temp_variable = { temp_num_medium_artillery = num_battalions_with_type@artillery_brigade_med }
	set_temp_variable = { medium_artillery_weight = @MED_ARTILLERY_WEIGHT } 
	multiply_temp_variable = { temp_num_medium_artillery = medium_artillery_weight }
	add_to_variable = { army_strength = temp_num_medium_artillery }
	
	set_temp_variable = { temp_num_heavy_artillery = num_battalions_with_type@artillery_heavy }
	set_temp_variable = { heavy_artillery_weight = @HV_ARTILLERY_WEIGHT } 
	multiply_temp_variable = { temp_num_heavy_artillery = heavy_artillery_weight }
	add_to_variable = { army_strength = temp_num_heavy_artillery }
	
	set_temp_variable = { temp_num_anti_tank = num_battalions_with_type@anti_tank_brigade }
	set_temp_variable = { anti_tank_weight = @ANTI_TANK_WEIGHT } 
	multiply_temp_variable = { temp_num_anti_tank = anti_tank_weight }
	add_to_variable = { army_strength = temp_num_anti_tank }
	
	set_temp_variable = { temp_num_hv_anti_tank = num_battalions_with_type@anti_tank_heavy }
	set_temp_variable = { hv_anti_tank_weight = @HV_ANTI_TANK_WEIGHT } 
	multiply_temp_variable = { temp_num_hv_anti_tank = hv_anti_tank_weight }
	add_to_variable = { army_strength = temp_num_hv_anti_tank }
	
	set_temp_variable = { temp_num_anti_air = num_battalions_with_type@anti_air }
	set_temp_variable = { anti_air_weight = @ANTI_AIR_WEIGHT } 
	multiply_temp_variable = { temp_num_anti_air = anti_air_weight }
	add_to_variable = { army_strength = temp_num_anti_air }
	
	set_temp_variable = { temp_num_hv_anti_air = num_battalions_with_type@anti_air_heavy }
	set_temp_variable = { hv_anti_air_weight = @HV_ANTI_AIR_WEIGHT } 
	multiply_temp_variable = { temp_num_hv_anti_air = hv_anti_air_weight }
	add_to_variable = { army_strength = temp_num_hv_anti_air }
	
	set_temp_variable = { temp_num_mountaineer = num_battalions_with_type@mountaineer }
	set_temp_variable = { mountaineer_weight = @MOUNTAINEER_WEIGHT } 
	multiply_temp_variable = { temp_num_mountaineer = mountaineer_weight }
	add_to_variable = { army_strength = temp_num_mountaineer }
	
	set_temp_variable = { temp_num_marine = num_battalions_with_type@marine }
	set_temp_variable = { marine_weight = @MARINE_WEIGHT } 
	multiply_temp_variable = { temp_num_marine = marine_weight }
	add_to_variable = { army_strength = temp_num_marine }
	
	set_temp_variable = { temp_num_paratrooper = num_battalions_with_type@paratrooper }
	set_temp_variable = { paratrooper_weight = @PARATROOPER_WEIGHT } 
	multiply_temp_variable = { temp_num_paratrooper = paratrooper_weight }
	add_to_variable = { army_strength = temp_num_paratrooper }
	
	set_temp_variable = { temp_num_cavalry = num_battalions_with_type@cavalry }
	set_temp_variable = { cavalry_weight = @CAVALRY_WEIGHT } 
	multiply_temp_variable = { temp_num_cavalry = cavalry_weight }
	add_to_variable = { army_strength = temp_num_cavalry }
	
	set_temp_variable = { temp_num_semi_motorized = num_battalions_with_type@semi_motorized }
	set_temp_variable = { semi_motorized_weight = @SEMI_MOTORIZED_WEIGHT } 
	multiply_temp_variable = { temp_num_semi_motorized = semi_motorized_weight }
	add_to_variable = { army_strength = temp_num_semi_motorized }
	
	set_temp_variable = { temp_num_motorized = num_battalions_with_type@motorized }
	set_temp_variable = { motorized_weight = @MOTORIZED_WEIGHT } 
	multiply_temp_variable = { temp_num_motorized = motorized_weight }
	add_to_variable = { army_strength = temp_num_motorized }
	
	set_temp_variable = { temp_num_mechanized = num_battalions_with_type@mechanized }
	set_temp_variable = { mechanized_weight = @MECHANIZED_WEIGHT } 
	multiply_temp_variable = { temp_num_mechanized = mechanized_weight }
	add_to_variable = { army_strength = temp_num_mechanized }
	
	set_temp_variable = { temp_num_light_armor = num_battalions_with_type@artillery_heavy }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@captured_light_armor }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@british_cruiser_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@british_heavy_infantry_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@british_infantry_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@british_light_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@british_para_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@british_tank_artillery_brigade }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@british_infantry_tank_artillery_brigade }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@british_infantry_tank_destroyer_brigade }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@french_infantry_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@fra_light_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@french_light_cavalry_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@fra_spart }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@fra_td }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@panzer_i }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@panzer_ii }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@czech_panzer }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@panzer_spaa }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_assault_panzer }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_panzer_art }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@conversion_art }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_panzer_td }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@conversion_td }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@marder_conversion_td }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@hun_toldi }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@hun_turan }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@ita_light_armor }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@ita_light_td_armor }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@japanese_light_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@japanese_light_tank_art }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@japanese_light_tank_td }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_armor }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_armor_axis }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@cze_light_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@cze_light_tank38 }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@pol_light_armor_equipment }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@sov_light_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_soviet_tank_aa }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_soviet_tank_td }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_sp_anti_air_brigade }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_sp_anti_air_brigade_axis }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_sp_artillery_brigade }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_sp_artillery_brigade_axis }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_tank_destroyer_brigade }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@light_tank_destroyer_brigade_axis }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@american_light_tank }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@american_light_tank_anti_air_brigade }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@american_light_tank_artillery_brigade }
	add_to_temp_variable = { temp_num_light_armor = num_battalions_with_type@american_tank_destroyer_brigade }
	set_temp_variable = { light_armor_weight = @LT_ARMOR_WEIGHT } 
	multiply_temp_variable = { temp_num_light_armor = light_armor_weight }
	add_to_variable = { army_strength = temp_num_light_armor }
	
	set_temp_variable = { temp_num_medium_armor = num_battalions_with_type@artillery_heavy }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@captured_armor }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@british_main_battle_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@french_cavalry_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@french_medium_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@panzer_iii }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@panzer_iv }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@panzer_v }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@panzer_v_spaa }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@assault_panzer }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@panzer_iii_td }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_panzer_td }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@guards_sov_medium_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@hun_turan_art }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@ita_medium_armor }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@ita_med_art_armor }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@ita_med_td_armor }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@japanese_medium_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@japanese_medium_tank_art }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@japanese_medium_tank_td }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@Infantry_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@Cavalry_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_armor }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@Infantry_tank_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@Cavalry_tank_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_armor_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@modern_armor }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@modern_armor_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@sov_medium_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_soviet_ag }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@t_34_td }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_sp_anti_air_brigade }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@modern_sp_anti_air_brigade }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_sp_anti_air_brigade_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@modern_sp_anti_air_brigade_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_sp_artillery_brigade }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@modern_sp_artillery_brigade }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_sp_artillery_brigade_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@modern_sp_artillery_brigade_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_tank_destroyer_brigade }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@modern_tank_destroyer_brigade }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@medium_tank_destroyer_brigade_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@modern_tank_destroyer_brigade_axis }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@american_main_battle_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@american_medium_tank }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@american_medium_tank_artillery_brigade }
	add_to_temp_variable = { temp_num_medium_armor = num_battalions_with_type@american_medium_tank_destroyer_brigade }
	set_temp_variable = { medium_armor_weight = @MED_ARMOR_WEIGHT } 
	multiply_temp_variable = { temp_num_medium_armor = medium_armor_weight }
	add_to_variable = { army_strength = temp_num_medium_armor }
	
	set_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@artillery_heavy }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@british_heavy_infantry_tank_artillery_brigade }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@british_tank_destroyer_brigade }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@french_heavy_tank }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@nbfz }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@panzer_vi }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@E_75 }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_panzer_art }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_panzer_td_fast }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_panzer_td_slow }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@guards_sov_heavy_tank }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_armor }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_armor_axis }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@ita_heavy_armor }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@ita_heavy_art_armor }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@japanese_heavy_tank }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@sov_infantry_tank }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@sov_heavy_tank }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_soviet_ag }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_sp_anti_air_brigade }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_sp_anti_air_brigade_axis }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_sp_artillery_brigade }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_sp_artillery_brigade_axis }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_tank_destroyer_brigade }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@heavy_tank_destroyer_brigade_axis }
	add_to_temp_variable = { temp_num_heavy_armor = num_battalions_with_type@american_heavy_tank }
	set_temp_variable = { heavy_armor_weight = @HV_ARMOR_WEIGHT } 
	multiply_temp_variable = { temp_num_heavy_armor = heavy_armor_weight }
	add_to_variable = { army_strength = temp_num_heavy_armor }
	
	set_temp_variable = { temp_num_HQ = num_battalions_with_type@DIV_HQ }
	set_temp_variable = { HQ_weight = @HQ_WEIGHT } 
	multiply_temp_variable = { temp_num_HQ = HQ_weight }
	add_to_variable = { army_strength = temp_num_HQ }
	
	multiply_variable = { army_strength = field_strength }
	
	check_army_strength_ideas = yes
	check_specific_army_strength_ideas = yes
	#check_HQ_army_strength_ideas = yes
}
check_army_strength_ideas = {	
	remove_ideas = {
		army_strength_0 
		army_strength_1
		army_strength_2
		army_strength_3
		army_strength_4
		army_strength_5
		army_strength_6
		army_strength_7
		army_strength_8
		army_strength_9
		army_strength_10
	}
	
	if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_10_TRIGGER }
		}
		add_ideas = army_strength_10
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_9_TRIGGER }
		}
		add_ideas = army_strength_9
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_8_TRIGGER }
		}
		add_ideas = army_strength_8
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_7_TRIGGER }
		}
		add_ideas = army_strength_7
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_6_TRIGGER }
		}
		add_ideas = army_strength_6
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_5_TRIGGER }
		}
		add_ideas = army_strength_5
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_4_TRIGGER }
		}
		add_ideas = army_strength_4
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_3_TRIGGER }
		}
		add_ideas = army_strength_3
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_2_TRIGGER }
		}
		add_ideas = army_strength_2
	}
	else_if = {
		limit = {
			check_variable = { army_strength > @ARMY_STRENGTH_1_TRIGGER }
		}
		add_ideas = army_strength_1
	}
	else_if = {
		limit = {
			check_variable = { army_strength < @ARMY_STRENGTH_1_TRIGGER }
		}
		add_ideas = army_strength_0
	}
}
check_specific_army_strength_ideas = {	
	clear_variable = offensive_army_strength
	if = {
		limit = {
			OR = {
				has_tech = blitzkrieg
				has_tech = assault_operations
			}
		}
		add_to_variable = { offensive_army_strength = temp_num_light_armor }
		add_to_variable = { offensive_army_strength = temp_num_medium_armor }
		add_to_variable = { offensive_army_strength = temp_num_heavy_armor }
	}
	if = {
		limit = {
			OR = {
				has_tech = blitzkrieg
				has_tech = methodical_battle
				has_tech = assault_operations
			}
		}
		add_to_variable = { offensive_army_strength = temp_num_motorized }
		add_to_variable = { offensive_army_strength = temp_num_mechanized }
		add_to_variable = { offensive_army_strength = temp_num_heavy_armor }
	}
	if = {
		limit = {
			OR = {
				has_tech = superior_firepower
			}
		}
		add_to_variable = { offensive_army_strength = temp_num_light_artillery }
		add_to_variable = { offensive_army_strength = temp_num_medium_artillery }
		add_to_variable = { offensive_army_strength = temp_num_heavy_artillery }
		add_to_variable = { offensive_army_strength = temp_num_support }
	}
	if = {
		limit = {
			OR = {
				has_tech = mass_assault
			}
		}
		add_to_variable = { offensive_army_strength = temp_num_infantry }
	}
	if = {
		limit = {
			OR = {
				has_tech = assault_operations
			}
		}
		add_to_variable = { offensive_army_strength = temp_num_DIV_HQ }
	}
	if = {
		limit = {
			OR = {
				has_tech = guerilla_warfare
			}
		}
		add_to_variable = { offensive_army_strength = temp_num_militia }
		add_to_variable = { offensive_army_strength = temp_num_partisan }
		add_to_variable = { offensive_army_strength = temp_num_cavalry }
	}
	
	remove_ideas_with_trait = army_strength_trait
	if = {
		limit = {
			has_any_initial_offensive_doctrine_tech = yes 
		}
		
		if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_10_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_10
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_9_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_9
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_8_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_8
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_7_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_7
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_6_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_6
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_5_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_5
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_4_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_4
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_3_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_3
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_2_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_2
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength > @OFF_ARMY_STRENGTH_1_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_1
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
		else_if = {
			limit = {
				check_variable = { offensive_army_strength < @OFF_ARMY_STRENGTH_1_TRIGGER }
			}
			meta_effect = {
				text = {
					add_ideas = [DOCTRINE]_army_strength_0
				}
				DOCTRINE = "[This.GetOffensiveDoctrine]"
			}
		}
	}
}

check_HQ_army_strength_ideas = {
	clear_variable = HQ_army_strength
	
	add_to_variable = { HQ_army_strength = temp_num_HQ }
	
	set_variable = { HQ_strength = num_equipment_in_armies@HQ_equipment }
	divide_variable = { HQ_strength = num_target_equipment_in_armies@HQ_equipment } 
	if = {
		limit = {
			check_variable = { num_target_equipment_in_armies@radio_equipment > 0 }
		}
		set_temp_variable = { Radio_strength = num_equipment_in_armies@radio_equipment }
		divide_temp_variable = { Radio_strength = num_target_equipment_in_armies@radio_equipment }
		add_to_variable = { HQ_strength = Radio_strength }
		divide_variable = { HQ_strength = 2 }
	}
	
	set_variable = { HQ_army_strength_temp = HQ_army_strength }
	divide_variable = { HQ_army_strength_temp = 100 }
	if = { limit = { check_variable = { HQ_army_strength_temp > 10 } } set_variable = { HQ_army_strength_temp = 10 } } 
	if = { limit = { check_variable = { HQ_army_strength_temp < 1 } } set_variable = { HQ_army_strength_temp = 0 } } 
	
	round_variable = HQ_army_strength_temp
	meta_effect = {
		text = {
			add_ideas = HQ_army_strength_[X]
		
		}
		X = HQ_army_strength_temp
	
	}
	clear_variable = HQ_army_strength_temp
}

###  NAVAL

check_navy_strength = {
	
	set_variable = { navy_strength = 0 }
		
	set_temp_variable = { temp_num_battleships = num_ships_with_type@battleship }
	set_temp_variable = { battleship_weight = @BATTLESHIP_WEIGHT } 
	multiply_temp_variable = { temp_num_battleships = battleship_weight }
	add_to_variable = { navy_strength = temp_num_battleships }
	
	set_temp_variable = { temp_num_battlecruisers = num_ships_with_type@battle_cruiser }
	set_temp_variable = { battlecruiser_weight = @BATTLECRUISER_WEIGHT } 
	multiply_temp_variable = { temp_num_battlecruisers = battlecruiser_weight }
	add_to_variable = { navy_strength = temp_num_battlecruisers }
	
	set_temp_variable = { temp_num_pocket_battleships = num_ships_with_type@pocket_battleship }
	set_temp_variable = { pocket_battleship_weight = @POCKET_BATTLESHIP_WEIGHT }
	multiply_temp_variable = { temp_num_pocket_battleships = pocket_battleship_weight }
	add_to_variable = { navy_strength = temp_num_pocket_battleships }
	
	set_temp_variable = { temp_num_carriers = num_ships_with_type@carrier }
	set_temp_variable = { carrier_weight = @CARRIER_CARRIER_WEIGHT }
	multiply_temp_variable = { temp_num_carriers = carrier_weight }
	add_to_variable = { navy_strength = temp_num_carriers }
	
	set_temp_variable = { temp_num_armored_carriers = num_ships_with_type@armored_carrier }
	set_temp_variable = { armored_carrier_weight = @ARMORED_CARRIER_WEIGHT }
	multiply_temp_variable = { temp_num_armored_carriers = armored_carrier_weight }
	add_to_variable = { navy_strength = temp_num_armored_carriers }
	
	set_temp_variable = { temp_num_light_carriers = num_ships_with_type@light_carrier }
	set_temp_variable = { light_carrier_weight = @LIGHT_CARRIER_WEIGHT }
	multiply_temp_variable = { temp_num_light_carriers = light_carrier_weight }
	add_to_variable = { navy_strength = temp_num_light_carriers }
	
	set_temp_variable = { temp_num_hv_cruisers = num_ships_with_type@heavy_cruiser }
	set_temp_variable = { heavy_cruiser_weight = @HEAVY_CRUISER_WEIGHT }
	multiply_temp_variable = { temp_num_hv_cruisers = heavy_cruiser_weight }
	add_to_variable = { navy_strength = temp_num_hv_cruisers }
	
	set_temp_variable = { temp_num_lt_cruisers = num_ships_with_type@light_cruiser }
	set_temp_variable = { light_cruiser_weight = @LIGHT_CRUISER_WEIGHT }
	multiply_temp_variable = { temp_num_lt_cruisers = light_cruiser_weight }
	add_to_variable = { navy_strength = temp_num_lt_cruisers }
	
	set_temp_variable = { temp_num_destroyers = num_ships_with_type@destroyer }
	set_temp_variable = { destroyer_weight = @DESTROYER_WEIGHT }
	multiply_temp_variable = { temp_num_destroyers = destroyer_weight }
	add_to_variable = { navy_strength = temp_num_destroyers }
	
	set_temp_variable = { temp_num_submarines = num_ships_with_type@submarine }
	set_temp_variable = { submarine_weight = @SUBMARINE_WEIGHT }
	multiply_temp_variable = { temp_num_submarines = submarine_weight }
	add_to_variable = { navy_strength = temp_num_submarines }
	
	set_temp_variable = { temp_num_coastal_submarines = num_ships_with_type@coastal_submarine }
	set_temp_variable = { coastal_submarine_weight = @COASTAL_SUBMARINE_WEIGHT }
	multiply_temp_variable = { temp_num_coastal_submarines = coastal_submarine_weight }
	add_to_variable = { navy_strength = temp_num_coastal_submarines }
	
	set_temp_variable = { temp_num_long_range_submarines = num_ships_with_type@lr_submarine }
	set_temp_variable = { long_range_submarine_weight = @LONG_RANGE_SUBMARINE_WEIGHT }
	multiply_temp_variable = { temp_num_long_range_submarines = long_range_submarine_weight }
	add_to_variable = { navy_strength = temp_num_long_range_submarines }
	
	if = {
		limit = {
			check_variable = { navy_strength = 0 }
		}
		clear_variable = navy_strength
	}
	check_navy_ideas = yes
}

check_navy_ideas = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { navy_strength > @HUGE_NAVY_TRIGGER }
			}
			add_ideas = huge_navy
			set_variable = { navy_size_frame = 5 }
		}
		else_if = {
			limit = {
				check_variable = { navy_strength > @LARGE_NAVY_TRIGGER }
			}
			add_ideas = large_navy
			set_variable = { navy_size_frame = 4 }
		}
		else_if = {
			limit = {
				check_variable = { navy_strength > @NORMAL_NAVY_TRIGGER }
			}
			add_ideas = average_navy
			set_variable = { navy_size_frame = 3 }
		}
		else_if = {
			limit = {
				check_variable = { navy_strength > @SMALL_NAVY_TRIGGER }
			}
			add_ideas = small_navy 
			set_variable = { navy_size_frame = 2 }
		}
		else_if = {
			limit = {
				check_variable = { navy_strength < @SMALL_NAVY_TRIGGER }
			}
			add_ideas = tiny_navy
			set_variable = { navy_size_frame = 1 }
		}
	}
	if = { limit = { is_ai = yes } clear_variable = navy_size_frame } 
}
		
clear_topbar_list_flags = {
	meta_effect = { 
		text = {
			clear_variable = 2.topbar_surrender_list_[FROM]_[ROOT] 
			clear_variable = 5.topbar_resource_list_[FROM]_[ROOT] 
			clear_variable = 6.topbar_popularity_list_[FROM]_[ROOT] 
			clear_variable = 7.topbar_population_list_[FROM]_[ROOT] 
			clear_variable = 9.topbar_army_strength_list_[FROM]_[ROOT] 
			clear_variable = 12.topbar_special_forces_list_[FROM]_[ROOT] 
			clear_variable = 14.topbar_ship_list_[FROM]_[ROOT] 
			clear_variable = 15.topbar_cons_list_[FROM]_[ROOT] 
			clear_variable = 16.topbar_pp_list_[FROM]_[ROOT] 
			clear_variable = 18.topbar_conscription_list_[FROM]_[ROOT] 
			clear_variable = 19.topbar_factories_list_[FROM]_[ROOT] 
			clear_variable = 21.topbar_states_list_[FROM]_[ROOT] 
			clear_variable = 26.topbar_stability_list_[FROM]_[ROOT] 
			clear_variable = 27.topbar_war_support_list_[FROM]_[ROOT]
			clear_variable = 28.topbar_command_power_list_[FROM]_[ROOT]
			clear_variable = 29.topbar_fuel_list_[FROM]_[ROOT]
		}
		ROOT = "[Root.GetTag]"
		FROM = "[This.GetID]"
	}
}


replace_illegal_focus_tree = {
	if = {
		limit = {
			tag = GER 
			NOT = { has_government = fascism }
			NOT = { has_focus_tree = generic_focus }
		}
		load_focus_tree = generic_focus
	}
	if = {
		limit = {
			tag = ITA 
			NOT = { has_government = fascism }
			NOT = { has_focus_tree = generic_focus }
		}
		load_focus_tree = generic_focus
	}
	if = {
		limit = {
			tag = SOV 
			NOT = { has_government = communism }
			NOT = { has_focus_tree = generic_focus }
		}
		load_focus_tree = generic_focus
	}
	if = {
		limit = {
			tag = ENG 
			OR = {
				has_government = communism 
				has_government = fascism 
				#monarchism? neutrality?
			}
			NOT = { has_focus_tree = generic_focus }
		}
		load_focus_tree = generic_focus
	}
	if = {
		limit = {
			tag = USA 
			NOT = { democratic_govt = yes }
			NOT = { has_focus_tree = generic_focus }
		}
		load_focus_tree = generic_focus
	}
	if = {
		limit = {
			tag = JAP 
			OR = {
				#democratic_govt = yes #lmao they have a small shitty democratic branch
				has_government = communism 
			}
			NOT = { has_focus_tree = generic_focus }
		}
		load_focus_tree = generic_focus
	}
}

change_to_player = { #was THAT really all of it XDDDDDD
	add_to_array = { player = Root.id }
	set_country_flag = player_only
}
calculate_num_provinces = {
	if = { 
    limit = { 
        pillbox > 0 
    }
    set_variable = { num_provinces = 1 }
}
else_if = {
         limit =  {
             pillbox > 1
         }
         set_variable = { num_provinces = 2 }
}
else_if = {
         limit =  {
             pillbox > 2
         }
         set_variable = { num_provinces = 3 }
}
else_if = {
         limit =  {
             pillbox > 3
         }
         set_variable = { num_provinces = 4 }
}
else_if = {
         limit =  {
             pillbox > 4
         }
         set_variable = { num_provinces = 5 }
}
else_if = {
         limit =  {
             pillbox > 5
         }
         set_variable = { num_provinces = 6 }
}
else_if = {
         limit =  {
             pillbox > 6
         }
         set_variable = { num_provinces = 7 }
}
else_if = {
         limit =  {
             pillbox > 7
         }
         set_variable = { num_provinces = 8 }
}
else_if = {
         limit =  {
             pillbox > 8
         }
         set_variable = { num_provinces = 9 }
}
else_if = {
         limit =  {
             pillbox > 9
         }
         set_variable = { num_provinces = 10 }
}
else_if = {
         limit =  {
             pillbox > 10
         }
         set_variable = { num_provinces = 11 }
}
else_if = {
         limit =  {
             pillbox > 11
         }
         set_variable = { num_provinces = 12 }
}
else_if = {
         limit =  {
             pillbox > 12
         }
         set_variable = { num_provinces = 13 }
}
else_if = {
         limit =  {
             pillbox > 13
         }
         set_variable = { num_provinces = 14 }
}
else_if = {
         limit =  {
             pillbox > 14
         }
         set_variable = { num_provinces = 15 }
}
else_if = {
         limit =  {
             pillbox > 15
         }
         set_variable = { num_provinces = 16 }
}
else_if = {
         limit =  {
             pillbox > 16
         }
         set_variable = { num_provinces = 17 }
}
else_if = {
         limit =  {
             pillbox > 17
         }
         set_variable = { num_provinces = 18 }
}
else_if = {
         limit =  {
             pillbox > 18
         }
         set_variable = { num_provinces = 19 }
}
else_if = {
         limit =  {
             pillbox > 19
         }
         set_variable = { num_provinces = 20 }
}
else_if = {
         limit =  {
             pillbox > 20
         }
         set_variable = { num_provinces = 21 }
}
else_if = {
         limit =  {
             pillbox > 21
         }
         set_variable = { num_provinces = 22 }
}
else_if = {
         limit =  {
             pillbox > 22
         }
         set_variable = { num_provinces = 23 }
}
else_if = {
         limit =  {
             pillbox > 23
         }
         set_variable = { num_provinces = 24 }
}
else_if = {
         limit =  {
             pillbox > 24
         }
         set_variable = { num_provinces = 25 }
}
else_if = {
         limit =  {
             pillbox > 25
         }
         set_variable = { num_provinces = 26 }
}
else_if = {
         limit =  {
             pillbox > 26
         }
         set_variable = { num_provinces = 27 }
}
else_if = {
         limit =  {
             pillbox > 27
         }
         set_variable = { num_provinces = 28 }
}
else_if = {
         limit =  {
             pillbox > 28
         }
         set_variable = { num_provinces = 29 }
}
else_if = {
         limit =  {
             pillbox > 29
         }
         set_variable = { num_provinces = 30 }
}
else_if = {
         limit =  {
             pillbox > 30
         }
         set_variable = { num_provinces = 31 }
}
else_if = {
         limit =  {
             pillbox > 31
         }
         set_variable = { num_provinces = 32 }
}
else_if = {
         limit =  {
             pillbox > 32
         }
         set_variable = { num_provinces = 33 }
}
else_if = {
         limit =  {
             pillbox > 33
         }
         set_variable = { num_provinces = 34 }
}
else_if = {
         limit =  {
             pillbox > 34
         }
         set_variable = { num_provinces = 35 }
}
else_if = {
         limit =  {
             pillbox > 35
         }
         set_variable = { num_provinces = 36 }
}
else_if = {
         limit =  {
             pillbox > 36
         }
         set_variable = { num_provinces = 37 }
}
else_if = {
         limit =  {
             pillbox > 37
         }
         set_variable = { num_provinces = 38 }
}
else_if = {
         limit =  {
             pillbox > 38
         }
         set_variable = { num_provinces = 39 }
}
else_if = {
         limit =  {
             pillbox > 39
         }
         set_variable = { num_provinces = 40 }
}
else_if = {
         limit =  {
             pillbox > 40
         }
         set_variable = { num_provinces = 41 }
}
else_if = {
         limit =  {
             pillbox > 41
         }
         set_variable = { num_provinces = 42 }
}
else_if = {
         limit =  {
             pillbox > 42
         }
         set_variable = { num_provinces = 43 }
}
else_if = {
         limit =  {
             pillbox > 43
         }
         set_variable = { num_provinces = 44 }
}
else_if = {
         limit =  {
             pillbox > 44
         }
         set_variable = { num_provinces = 45 }
}
else_if = {
         limit =  {
             pillbox > 45
         }
         set_variable = { num_provinces = 46 }
}
else_if = {
         limit =  {
             pillbox > 46
         }
         set_variable = { num_provinces = 47 }
}
else_if = {
         limit =  {
             pillbox > 47
         }
         set_variable = { num_provinces = 48 }
}
else_if = {
         limit =  {
             pillbox > 48
         }
         set_variable = { num_provinces = 49 }
}
else_if = {
         limit =  {
             pillbox > 49
         }
         set_variable = { num_provinces = 50 }
}
else_if = {
         limit =  {
             pillbox > 50
         }
         set_variable = { num_provinces = 51 }
}
else_if = {
         limit =  {
             pillbox > 51
         }
         set_variable = { num_provinces = 52 }
}
else_if = {
         limit =  {
             pillbox > 52
         }
         set_variable = { num_provinces = 53 }
}
else_if = {
         limit =  {
             pillbox > 53
         }
         set_variable = { num_provinces = 54 }
}
else_if = {
         limit =  {
             pillbox > 54
         }
         set_variable = { num_provinces = 55 }
}
else_if = {
         limit =  {
             pillbox > 55
         }
         set_variable = { num_provinces = 56 }
}
else_if = {
         limit =  {
             pillbox > 56
         }
         set_variable = { num_provinces = 57 }
}
else_if = {
         limit =  {
             pillbox > 57
         }
         set_variable = { num_provinces = 58 }
}
else_if = {
         limit =  {
             pillbox > 58
         }
         set_variable = { num_provinces = 59 }
}
else_if = {
         limit =  {
             pillbox > 59
         }
         set_variable = { num_provinces = 60 }
}
else_if = {
         limit =  {
             pillbox > 60
         }
         set_variable = { num_provinces = 61 }
}
else_if = {
         limit =  {
             pillbox > 61
         }
         set_variable = { num_provinces = 62 }
}
else_if = {
         limit =  {
             pillbox > 62
         }
         set_variable = { num_provinces = 63 }
}
else_if = {
         limit =  {
             pillbox > 63
         }
         set_variable = { num_provinces = 64 }
}
else_if = {
         limit =  {
             pillbox > 64
         }
         set_variable = { num_provinces = 65 }
}
else_if = {
         limit =  {
             pillbox > 65
         }
         set_variable = { num_provinces = 66 }
}
else_if = {
         limit =  {
             pillbox > 66
         }
         set_variable = { num_provinces = 67 }
}
else_if = {
         limit =  {
             pillbox > 67
         }
         set_variable = { num_provinces = 68 }
}
else_if = {
         limit =  {
             pillbox > 68
         }
         set_variable = { num_provinces = 69 }
}
else_if = {
         limit =  {
             pillbox > 69
         }
         set_variable = { num_provinces = 70 }
}
else_if = {
         limit =  {
             pillbox > 70
         }
         set_variable = { num_provinces = 71 }
}
else_if = {
         limit =  {
             pillbox > 71
         }
         set_variable = { num_provinces = 72 }
}
else_if = {
         limit =  {
             pillbox > 72
         }
         set_variable = { num_provinces = 73 }
}
else_if = {
         limit =  {
             pillbox > 73
         }
         set_variable = { num_provinces = 74 }
}
else_if = {
         limit =  {
             pillbox > 74
         }
         set_variable = { num_provinces = 75 }
}
else_if = {
         limit =  {
             pillbox > 75
         }
         set_variable = { num_provinces = 76 }
}
else_if = {
         limit =  {
             pillbox > 76
         }
         set_variable = { num_provinces = 77 }
}
else_if = {
         limit =  {
             pillbox > 77
         }
         set_variable = { num_provinces = 78 }
}
else_if = {
         limit =  {
             pillbox > 78
         }
         set_variable = { num_provinces = 79 }
}
else_if = {
         limit =  {
             pillbox > 79
         }
         set_variable = { num_provinces = 80 }
}
else_if = {
         limit =  {
             pillbox > 80
         }
         set_variable = { num_provinces = 81 }
}
else_if = {
         limit =  {
             pillbox > 81
         }
         set_variable = { num_provinces = 82 }
}
else_if = {
         limit =  {
             pillbox > 82
         }
         set_variable = { num_provinces = 83 }
}
else_if = {
         limit =  {
             pillbox > 83
         }
         set_variable = { num_provinces = 84 }
}
else_if = {
         limit =  {
             pillbox > 84
         }
         set_variable = { num_provinces = 85 }
}
else_if = {
         limit =  {
             pillbox > 85
         }
         set_variable = { num_provinces = 86 }
}
else_if = {
         limit =  {
             pillbox > 86
         }
         set_variable = { num_provinces = 87 }
}
else_if = {
         limit =  {
             pillbox > 87
         }
         set_variable = { num_provinces = 88 }
}
else_if = {
         limit =  {
             pillbox > 88
         }
         set_variable = { num_provinces = 89 }
}
else_if = {
         limit =  {
             pillbox > 89
         }
         set_variable = { num_provinces = 90 }
}
else_if = {
         limit =  {
             pillbox > 90
         }
         set_variable = { num_provinces = 91 }
}
else_if = {
         limit =  {
             pillbox > 91
         }
         set_variable = { num_provinces = 92 }
}
else_if = {
         limit =  {
             pillbox > 92
         }
         set_variable = { num_provinces = 93 }
}
else_if = {
         limit =  {
             pillbox > 93
         }
         set_variable = { num_provinces = 94 }
}
else_if = {
         limit =  {
             pillbox > 94
         }
         set_variable = { num_provinces = 95 }
}
else_if = {
         limit =  {
             pillbox > 95
         }
         set_variable = { num_provinces = 96 }
}
else_if = {
         limit =  {
             pillbox > 96
         }
         set_variable = { num_provinces = 97 }
}
else_if = {
         limit =  {
             pillbox > 97
         }
         set_variable = { num_provinces = 98 }
}
else_if = {
         limit =  {
             pillbox > 98
         }
         set_variable = { num_provinces = 99 }
}
else_if = {
         limit =  {
             pillbox > 99
         }
         set_variable = { num_provinces = 100 }
}
        
	}


		
